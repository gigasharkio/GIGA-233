{"ast":null,"code":"import _classCallCheck from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _wrapNativeSuper from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js\";\nimport randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak'; // TODO: should be crypto safe\n\nvar randomId = function randomId() {\n  return randombytes(32).toString(\"hex\");\n};\n\nvar URLWithHashParams = /*#__PURE__*/function (_URL) {\n  _inherits(URLWithHashParams, _URL);\n\n  var _super = _createSuper(URLWithHashParams);\n\n  function URLWithHashParams() {\n    var _this;\n\n    _classCallCheck(this, URLWithHashParams);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"hashParams\", new URLSearchParams());\n\n    return _this;\n  }\n\n  _createClass(URLWithHashParams, [{\n    key: \"toString\",\n    value: function toString() {\n      this.hash = this.hashParams.toString();\n      return _get(_getPrototypeOf(URLWithHashParams.prototype), \"toString\", this).call(this);\n    }\n  }]);\n\n  return URLWithHashParams;\n}( /*#__PURE__*/_wrapNativeSuper(URL));\n\nvar base64url = base64urlLib;\n\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\n\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\n\nvar keccak = keccakLib;\n\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\n\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\n\nfunction keccak256(str) {\n  var input = str;\n\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n\n  var data = \"0x\".concat(keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\"));\n  return data;\n}\n\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };","map":{"version":3,"mappings":";;;;;;;;;;;gCAAA;;IAGaA,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAcC,WAAW,CAAC,EAAD,CAAXA,CAAgBC,QAAhBD,CAAyB,KAAzBA,CAAd;AAAA;;ICDXE,iB;;;;;;;;;;;;iEACc,IAAIC,eAAJ;;;;;;;WAEzBF,oBAAQ;MACN,KAAKG,IAAL,GAAY,KAAKC,UAAL,CAAgBJ,QAAhB,EAAZ;MACA,OAAO,qEAAeK,IAAf,CAAoB,IAApB,CAAP;IACD;;;;iCANoCC,G;;ICC1BC,SAAS,GAAGC;;SAETC,SAASC;EACvB,OAAOH,SAAS,CAACI,MAAVJ,CAAiBG,GAAjBH,CAAP;AACD;;SAEeK,SAASF;EACvB;EACA,OAAOH,SAAS,CAACM,MAAVN,CAAiBG,GAAjBH,CAAP;AACD;;IAEYO,MAAM,GAAGC;;SAINC,aAAaC;EAC3B,OAAOC,IAAI,CAACC,KAALD,CAAWX,SAAS,CAACM,MAAVN,CAAiBU,MAAjBV,CAAXW,CAAP;AACD;;SAEeE,aAAaC;EAC3B,OAAOd,SAAS,CAACI,MAAVJ,CAAiBW,IAAI,CAACI,SAALJ,CAAeG,IAAfH,CAAjBX,CAAP;AACD;;SAEegB,UAAUb;EACxB,IAAIc,KAAK,GAAoBd,GAA7B;;EACA,IAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,CAACe,KAAJf,CAAU,CAAVA,EAAa,CAAbA,MAAoB,IAA/C,IAAuDA,GAAG,CAACgB,MAAJhB,KAAe,EAA1E,EAA8E;IAC5Ec,KAAK,GAAGG,MAAM,CAACC,IAAPD,CAAYjB,GAAG,CAACe,KAAJf,CAAU,CAAVA,CAAZiB,EAA0B,KAA1BA,CAARH;EACD;;EACD,IAAMK,IAAI,eAAQf,MAAM,CAAC,WAAD,CAANA,CAAoBgB,MAApBhB,CAA2BU,KAA3BV,EAAkCiB,MAAlCjB,CAAyC,KAAzCA,EAAgDkB,QAAhDlB,CAAyD,EAAzDA,EAA6D,GAA7DA,CAAR,CAAV;EACA,OAAOe,IAAP;AACD","names":["randomId","randombytes","toString","URLWithHashParams","URLSearchParams","hash","hashParams","call","URL","base64url","base64urlLib","safebtoa","str","encode","safeatob","decode","keccak","keccakLib","base64toJSON","b64str","JSON","parse","jsonToBase64","json","stringify","keccak256","input","slice","length","Buffer","from","data","update","digest","padStart"],"sources":["../src/randomId.ts","../src/url.ts","../src/utils.ts"],"sourcesContent":[null,null,null]},"metadata":{},"sourceType":"module"}
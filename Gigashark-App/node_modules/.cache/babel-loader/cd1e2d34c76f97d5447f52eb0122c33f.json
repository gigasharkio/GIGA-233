{"ast":null,"code":"import _regeneratorRuntime from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/torus-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, log, ADAPTER_EVENTS, WalletInitializationError, Web3AuthError, WalletLoginError } from '@web3auth/base';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar TorusWalletAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(TorusWalletAdapter, _BaseAdapter);\n\n  var _super = _createSuper(TorusWalletAdapter);\n\n  function TorusWalletAdapter() {\n    var _this;\n\n    _classCallCheck(this, TorusWalletAdapter);\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.TORUS_EVM);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusInstance\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusWalletOptions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initParams\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"loginSettings\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _this.torusWalletOptions = params.adapterSettings || {};\n    _this.initParams = params.initParams || {};\n    _this.loginSettings = params.loginSettings || {};\n    _this.chainConfig = params.chainConfig || null;\n    return _this;\n  }\n\n  _createClass(TorusWalletAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.torusInstance) {\n        return this.torusInstance.provider;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n        var network, _this$chainConfig, blockExplorer, displayName, _this$chainConfig2, chainId, _blockExplorer, _displayName, rpcTarget;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(TorusWalletAdapter.prototype), \"checkInitializationRequirements\", this).call(this); // set chainConfig for mainnet by default if not set\n\n\n                if (!this.chainConfig) {\n                  this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n                  _this$chainConfig = this.chainConfig, blockExplorer = _this$chainConfig.blockExplorer, displayName = _this$chainConfig.displayName;\n                  network = {\n                    chainId: 1,\n                    host: \"mainnet\",\n                    blockExplorer: blockExplorer,\n                    networkName: displayName\n                  };\n                } else {\n                  _this$chainConfig2 = this.chainConfig, chainId = _this$chainConfig2.chainId, _blockExplorer = _this$chainConfig2.blockExplorer, _displayName = _this$chainConfig2.displayName, rpcTarget = _this$chainConfig2.rpcTarget;\n                  network = {\n                    chainId: parseInt(chainId, 16),\n                    host: rpcTarget,\n                    blockExplorer: _blockExplorer,\n                    networkName: _displayName\n                  };\n                }\n\n                this.torusInstance = new Torus(this.torusWalletOptions);\n                log.debug(\"initializing torus evm adapter init\");\n                _context.next = 6;\n                return this.torusInstance.init(_objectSpread(_objectSpread({\n                  showTorusButton: false\n                }, this.initParams), {}, {\n                  network: network\n                }));\n\n              case 6:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_EVM);\n                _context.prev = 8;\n                log.debug(\"initializing torus evm adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 14;\n                return this.connect();\n\n              case 14:\n                _context.next = 20;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                log.error(\"Failed to connect with torus evm provider\", _context.t0);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 16]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var chainId, _this$chainConfig3, _chainId, blockExplorer, displayName, rpcTarget, ticker, tickerName, network, updatedChainID;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(TorusWalletAdapter.prototype), \"checkConnectionRequirements\", this).call(this);\n\n                if (this.torusInstance) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 3:\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.TORUS_EVM\n                });\n                _context2.prev = 5;\n                _context2.next = 8;\n                return this.torusInstance.login(this.loginSettings);\n\n              case 8:\n                chainId = this.torusInstance.provider.chainId;\n\n                if (!(chainId && parseInt(chainId) !== parseInt(this.chainConfig.chainId, 16))) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                _this$chainConfig3 = this.chainConfig, _chainId = _this$chainConfig3.chainId, blockExplorer = _this$chainConfig3.blockExplorer, displayName = _this$chainConfig3.displayName, rpcTarget = _this$chainConfig3.rpcTarget, ticker = _this$chainConfig3.ticker, tickerName = _this$chainConfig3.tickerName;\n                network = {\n                  chainId: _chainId,\n                  host: rpcTarget,\n                  blockExplorerUrl: blockExplorer,\n                  networkName: displayName,\n                  tickerName: tickerName,\n                  ticker: ticker,\n                  logo: \"\"\n                }; // in some cases when user manually switches chain and relogin then adapter will not connect to initially passed\n                // chainConfig but will connect to the one that user switched to.\n                // So here trying to switch network to the one that was initially passed in chainConfig.\n\n                _context2.next = 14;\n                return this.torusInstance.setProvider(_objectSpread({}, network));\n\n              case 14:\n                _context2.next = 16;\n                return this.torusInstance.ethereum.request({\n                  method: \"eth_chainId\"\n                });\n\n              case 16:\n                updatedChainID = _context2.sent;\n\n                if (!(updatedChainID && parseInt(updatedChainID) !== parseInt(this.chainConfig.chainId, 16))) {\n                  _context2.next = 19;\n                  break;\n                }\n\n                throw WalletInitializationError.fromCode(5000, \"Not connected to correct chainId. Expected: \".concat(this.chainConfig.chainId, \", Current: \").concat(updatedChainID));\n\n              case 19:\n                this.status = ADAPTER_STATUS.CONNECTED;\n                this.torusInstance.showTorusButton();\n                this.emit(ADAPTER_STATUS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.TORUS_EVM,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 25:\n                _context2.prev = 25;\n                _context2.t0 = _context2[\"catch\"](5);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_STATUS.ERRORED, _context2.t0);\n                throw _context2.t0 instanceof Web3AuthError ? _context2.t0 : WalletLoginError.connectionError(\"Failed to login with torus wallet\");\n\n              case 31:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[5, 25]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 3:\n                if (this.torusInstance) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 5:\n                _context3.next = 7;\n                return this.torusInstance.logout();\n\n              case 7:\n                this.torusInstance.hideTorusButton();\n\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.torusInstance = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var userInfo;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                if (this.torusInstance) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 4:\n                _context4.next = 6;\n                return this.torusInstance.getUserInfo(\"\");\n\n              case 6:\n                userInfo = _context4.sent;\n                return _context4.abrupt(\"return\", userInfo);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(_) {}\n  }]);\n\n  return TorusWalletAdapter;\n}(BaseAdapter);\n\nexport { TorusWalletAdapter };","map":{"version":3,"mappings":"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","names":["TorusWalletAdapter","constructor","params","_defineProperty","WALLET_ADAPTERS","TORUS_EVM","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","status","CONNECTED","torusInstance","provider","_","Error","options","getChainConfig","blockExplorer","displayName","network","chainId","host","networkName","rpcTarget","parseInt","Torus","log","debug","init","showTorusButton","READY","emit","ADAPTER_EVENTS","autoConnect","rehydrated","connect","error","ERRORED","WalletInitializationError","notReady","CONNECTING","adapter","login","_chainId","ticker","tickerName","blockExplorerUrl","logo","setProvider","ethereum","request","method","updatedChainID","fromCode","reconnected","Web3AuthError","WalletLoginError","connectionError","cleanup","notConnectedError","logout","hideTorusButton","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings","BaseAdapter"],"sources":["../src/torusWalletAdapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
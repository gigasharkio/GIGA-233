{"ast":null,"code":"import _classCallCheck from\"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import\"./Scene.css\";import React,{Component}from'react';import*as THREE from\"three\";import ReactDOM from'react-dom';import{jsx as _jsx}from\"react/jsx-runtime\";var Scene=/*#__PURE__*/function(_Component){_inherits(Scene,_Component);var _super=_createSuper(Scene);function Scene(){_classCallCheck(this,Scene);return _super.apply(this,arguments);}_createClass(Scene,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsx(\"div\",{style:{width:\"100vw\",height:\"100vh\"},ref:function ref(el){return _this.container=el;}});}},{key:\"componentDidMount\",value:function componentDidMount(){//Declare three.js variables\nvar camera,scene,renderer,stars=[];//assign three.js objects to each variable\nfunction init(){//camera\ncamera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,1,1000);camera.position.z=5;//scene\nscene=new THREE.Scene();//renderer\nrenderer=new THREE.WebGLRenderer();//set the size of the renderer\nrenderer.setSize(window.innerWidth,window.innerHeight);//add the renderer to the html document body\ndocument.body.appendChild(renderer.domElement);}function addSphere(){// The loop will move from z position of -1000 to z position 1000, adding a random particle at each position. \nfor(var z=-1000;z<1000;z+=20){// Make a sphere (exactly the same as before). \nvar geometry=new THREE.SphereGeometry(0.5,32,32);var material=new THREE.MeshBasicMaterial({color:0x25f5f1});var sphere=new THREE.Mesh(geometry,material);// This time we give the sphere random x and y positions between -500 and 500\nsphere.position.x=Math.random()*1000-500;sphere.position.y=Math.random()*1000-500;// Then set the z position to where it is in the loop (distance of camera)\nsphere.position.z=z;// scale it up a bit\nsphere.scale.x=sphere.scale.y=2;//add the sphere to the scene\nscene.add(sphere);//finally push it to the stars array \nstars.push(sphere);}}function animateStars(){// loop through each star\nfor(var i=0;i<stars.length;i++){var star=stars[i];// and move it forward dependent on the mouseY position. \nstar.position.z+=i/10;// if the particle is too close move it to the back\nif(star.position.z>1000)star.position.z-=2000;}}function render(){//get the frame\nrequestAnimationFrame(render);//render the scene\nrenderer.render(scene,camera);animateStars();}init();addSphere();render();this.container.appendChild(renderer.domElement);}}]);return Scene;}(Component);ReactDOM.render(/*#__PURE__*/_jsx(Scene,{}),document.getElementById('root'));export default Scene;","map":{"version":3,"names":["React","Component","THREE","ReactDOM","Scene","width","height","el","container","camera","scene","renderer","stars","init","PerspectiveCamera","window","innerWidth","innerHeight","position","z","WebGLRenderer","setSize","document","body","appendChild","domElement","addSphere","geometry","SphereGeometry","material","MeshBasicMaterial","color","sphere","Mesh","x","Math","random","y","scale","add","push","animateStars","i","length","star","render","requestAnimationFrame","getElementById"],"sources":["/Users/nicksampah/Repository/Three.js/Gigashark-v2/src/pages/Scene.js"],"sourcesContent":["import \"./Scene.css\";\nimport React, { Component } from 'react'\nimport * as THREE from \"three\";\nimport ReactDOM from 'react-dom'\n\n\nclass Scene extends Component {\n  render() {\n    return (\n      <div\n        style={{\n          width: \"100vw\",\n          height: \"100vh\"\n        }}\n        ref={el => (this.container = el)}\n      />\n    );\n  }\n\n\n\ncomponentDidMount() {\n    //Declare three.js variables\n    var camera, scene, renderer, stars=[];\n\t \n    //assign three.js objects to each variable\n    function init(){\n       \n      //camera\n      camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);\n      camera.position.z = 5;\t \n  \n      //scene\n      scene = new THREE.Scene();\n       \n      //renderer\n      renderer = new THREE.WebGLRenderer();\n      //set the size of the renderer\n      renderer.setSize( window.innerWidth, window.innerHeight );\n       \n      //add the renderer to the html document body\n      document.body.appendChild( renderer.domElement );\n    }\n  \n  \n    function addSphere(){\n  \n          // The loop will move from z position of -1000 to z position 1000, adding a random particle at each position. \n          for ( var z= -1000; z < 1000; z+=20 ) {\n      \n            // Make a sphere (exactly the same as before). \n            var geometry   = new THREE.SphereGeometry(0.5, 32, 32)\n            var material = new THREE.MeshBasicMaterial( {color: 0x25f5f1} );\n            var sphere = new THREE.Mesh(geometry, material)\n      \n            // This time we give the sphere random x and y positions between -500 and 500\n            sphere.position.x = Math.random() * 1000 - 500;\n            sphere.position.y = Math.random() * 1000 - 500;\n      \n            // Then set the z position to where it is in the loop (distance of camera)\n            sphere.position.z = z;\n      \n            // scale it up a bit\n            sphere.scale.x = sphere.scale.y = 2;\n      \n            //add the sphere to the scene\n            scene.add( sphere );\n      \n            //finally push it to the stars array \n            stars.push(sphere); \n          }\n    }\n  \n    function animateStars() { \n          \n      // loop through each star\n      for(var i=0; i<stars.length; i++) {\n        \n        const star = stars[i]; \n          \n        // and move it forward dependent on the mouseY position. \n        star.position.z +=  i/10;\n          \n        // if the particle is too close move it to the back\n        if(star.position.z>1000) star.position.z-=2000; \n        \n      }\n    \n    }\n  \n    function render() {\n      //get the frame\n      requestAnimationFrame( render );\n  \n      //render the scene\n      renderer.render( scene, camera );\n        animateStars();\n  \n    }\n\n    init();\n    \n    addSphere();\n    render();\n    this.container.appendChild(renderer.domElement);\n}\n\n}\nReactDOM.render(<Scene />, document.getElementById('root')) \nexport default Scene;   \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
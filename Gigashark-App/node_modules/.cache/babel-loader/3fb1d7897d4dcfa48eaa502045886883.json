{"ast":null,"code":"import _asyncToGenerator from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Torus from '@toruslabs/solana-embed';\nimport { BaseAdapter, WALLET_ADAPTERS, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, ADAPTER_STATUS, getChainConfig, ADAPTER_EVENTS, WalletInitializationError, WalletLoginError } from '@web3auth/base';\nimport { TorusInjectedProvider } from '@web3auth/solana-provider';\nimport log from 'loglevel';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar SolanaWalletAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(SolanaWalletAdapter, _BaseAdapter);\n\n  var _super = _createSuper(SolanaWalletAdapter);\n\n  function SolanaWalletAdapter() {\n    var _this;\n\n    _classCallCheck(this, SolanaWalletAdapter);\n\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.TORUS_SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.SOLANA);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusInstance\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"torusWalletOptions\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"initParams\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"loginSettings\", {});\n\n    _defineProperty(_assertThisInitialized(_this), \"solanaProvider\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _this.torusWalletOptions = params.adapterSettings || {};\n    _this.initParams = params.initParams || {};\n    _this.loginSettings = params.loginSettings || {};\n    _this.chainConfig = params.chainConfig || null;\n    return _this;\n  }\n\n  _createClass(SolanaWalletAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.solanaProvider) {\n        var _this$solanaProvider;\n\n        return ((_this$solanaProvider = this.solanaProvider) === null || _this$solanaProvider === void 0 ? void 0 : _this$solanaProvider.provider) || null;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(options) {\n        var network, _this$chainConfig, blockExplorer, displayName, ticker, tickerName, rpcTarget, chainId, _this$chainConfig2, _chainId, _blockExplorer, _displayName, _rpcTarget, _ticker, _tickerName;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(SolanaWalletAdapter.prototype), \"checkInitializationRequirements\", this).call(this); // set chainConfig for mainnet by default if not set\n\n\n                if (!this.chainConfig) {\n                  this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, \"0x1\");\n                  _this$chainConfig = this.chainConfig, blockExplorer = _this$chainConfig.blockExplorer, displayName = _this$chainConfig.displayName, ticker = _this$chainConfig.ticker, tickerName = _this$chainConfig.tickerName, rpcTarget = _this$chainConfig.rpcTarget, chainId = _this$chainConfig.chainId;\n                  network = {\n                    chainId: chainId,\n                    rpcTarget: rpcTarget,\n                    blockExplorerUrl: blockExplorer,\n                    displayName: displayName,\n                    ticker: ticker,\n                    tickerName: tickerName,\n                    logo: \"\"\n                  };\n                } else {\n                  _this$chainConfig2 = this.chainConfig, _chainId = _this$chainConfig2.chainId, _blockExplorer = _this$chainConfig2.blockExplorer, _displayName = _this$chainConfig2.displayName, _rpcTarget = _this$chainConfig2.rpcTarget, _ticker = _this$chainConfig2.ticker, _tickerName = _this$chainConfig2.tickerName;\n                  network = {\n                    chainId: _chainId,\n                    rpcTarget: _rpcTarget,\n                    blockExplorerUrl: _blockExplorer,\n                    displayName: _displayName,\n                    tickerName: _tickerName,\n                    ticker: _ticker,\n                    logo: \"\"\n                  };\n                }\n\n                this.torusInstance = new Torus(this.torusWalletOptions);\n                _context.next = 5;\n                return this.torusInstance.init(_objectSpread(_objectSpread({\n                  showTorusButton: false\n                }, this.initParams), {}, {\n                  network: network\n                }));\n\n              case 5:\n                this.solanaProvider = new TorusInjectedProvider({\n                  config: {\n                    chainConfig: this.chainConfig\n                  }\n                });\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.TORUS_SOLANA);\n                _context.prev = 8;\n\n                if (!options.autoConnect) {\n                  _context.next = 13;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 13;\n                return this.connect();\n\n              case 13:\n                _context.next = 19;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](8);\n                log.error(\"Failed to connect with cached torus solana provider\", _context.t0);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 15]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(SolanaWalletAdapter.prototype), \"checkConnectionRequirements\", this).call(this);\n\n                if (this.torusInstance) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 3:\n                if (this.solanaProvider) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 5:\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.TORUS_SOLANA\n                });\n                _context2.prev = 7;\n                _context2.next = 10;\n                return this.torusInstance.login(this.loginSettings);\n\n              case 10:\n                _context2.next = 12;\n                return this.solanaProvider.setupProvider(this.torusInstance.provider);\n\n              case 12:\n                this.status = ADAPTER_STATUS.CONNECTED;\n                this.torusInstance.showTorusButton();\n                this.emit(ADAPTER_STATUS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.TORUS_SOLANA,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 18:\n                _context2.prev = 18;\n                _context2.t0 = _context2[\"catch\"](7);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                throw WalletLoginError.connectionError(\"Failed to login with torus solana wallet\");\n\n              case 24:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[7, 18]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var options,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 3:\n                if (this.torusInstance) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 5:\n                _context3.next = 7;\n                return this.torusInstance.logout();\n\n              case 7:\n                if (options.cleanup) {\n                  // ready to connect again\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.torusInstance = null;\n                  this.solanaProvider = null;\n                } else {\n                  // ready to connect again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 9:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var userInfo;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                if (this.torusInstance) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Torus wallet is not initialized\");\n\n              case 4:\n                _context4.next = 6;\n                return this.torusInstance.getUserInfo();\n\n              case 6:\n                userInfo = _context4.sent;\n                return _context4.abrupt(\"return\", userInfo);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(_) {}\n  }]);\n\n  return SolanaWalletAdapter;\n}(BaseAdapter);\n\nexport { SolanaWalletAdapter };","map":{"version":3,"mappings":"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","names":["SolanaWalletAdapter","constructor","params","WALLET_ADAPTERS","TORUS_SOLANA","ADAPTER_NAMESPACES","SOLANA","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","ADAPTER_STATUS","NOT_READY","torusWalletOptions","adapterSettings","initParams","loginSettings","chainConfig","status","CONNECTED","solanaProvider","provider","_","Error","options","getChainConfig","blockExplorer","displayName","ticker","tickerName","rpcTarget","chainId","network","blockExplorerUrl","logo","torusInstance","Torus","init","showTorusButton","TorusInjectedProvider","config","READY","emit","ADAPTER_EVENTS","autoConnect","rehydrated","connect","log","error","ERRORED","WalletInitializationError","notReady","CONNECTING","adapter","login","setupProvider","reconnected","WalletLoginError","connectionError","cleanup","notConnectedError","logout","DISCONNECTED","getUserInfo","userInfo","setAdapterSettings","BaseAdapter"],"sources":["../src/solanaWalletAdapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _asyncToGenerator from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/regenerator/index.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine, signMessage } from '@toruslabs/base-controllers';\nimport { createScaffoldMiddleware, createAsyncMiddleware, mergeMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, WalletLoginError, isHexStrict, WalletInitializationError } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { ethErrors } from 'eth-rpc-errors';\nimport log from 'loglevel';\nimport Common, { Hardfork } from '@ethereumjs/common';\nimport { TransactionFactory } from '@ethereumjs/tx';\nimport { personalSign, signTypedData, SignTypedDataVersion, getEncryptionPublicKey, decrypt } from '@metamask/eth-sig-util';\nimport { privateToAddress, stripHexPrefix } from 'ethereumjs-util';\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction resemblesAddress(str) {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nfunction createWalletMiddleware(_ref) {\n  var getAccounts = _ref.getAccounts,\n      getPrivateKey = _ref.getPrivateKey,\n      processDecryptMessage = _ref.processDecryptMessage,\n      processEncryptionPublicKey = _ref.processEncryptionPublicKey,\n      processEthSignMessage = _ref.processEthSignMessage,\n      processPersonalMessage = _ref.processPersonalMessage,\n      processTransaction = _ref.processTransaction,\n      processSignTransaction = _ref.processSignTransaction,\n      processTypedMessage = _ref.processTypedMessage,\n      processTypedMessageV3 = _ref.processTypedMessageV3,\n      processTypedMessageV4 = _ref.processTypedMessageV4;\n\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  } //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n\n\n  function validateAndNormalizeKeyholder(_x, _x2) {\n    return _validateAndNormalizeKeyholder.apply(this, arguments);\n  } //\n  // account lookups\n  //\n\n\n  function _validateAndNormalizeKeyholder() {\n    _validateAndNormalizeKeyholder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address, req) {\n      var accounts, normalizedAccounts, normalizedAddress;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof address === \"string\" && address.length > 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return getAccounts(req);\n\n            case 3:\n              accounts = _context.sent;\n              normalizedAccounts = accounts.map(function (_address) {\n                return _address.toLowerCase();\n              });\n              normalizedAddress = address.toLowerCase();\n\n              if (!normalizedAccounts.includes(normalizedAddress)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", normalizedAddress);\n\n            case 8:\n              throw ethErrors.rpc.invalidParams({\n                message: \"Invalid parameters: must provide an Ethereum address.\"\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _validateAndNormalizeKeyholder.apply(this, arguments);\n  }\n\n  function lookupAccounts(_x3, _x4) {\n    return _lookupAccounts.apply(this, arguments);\n  }\n\n  function _lookupAccounts() {\n    _lookupAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getAccounts(req);\n\n            case 2:\n              res.result = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _lookupAccounts.apply(this, arguments);\n  }\n\n  function lookupDefaultAccount(_x5, _x6) {\n    return _lookupDefaultAccount.apply(this, arguments);\n  } //\n  // transaction signatures\n  //\n\n\n  function _lookupDefaultAccount() {\n    _lookupDefaultAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res) {\n      var accounts;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getAccounts(req);\n\n            case 2:\n              accounts = _context3.sent;\n              res.result = accounts[0] || null;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _lookupDefaultAccount.apply(this, arguments);\n  }\n\n  function sendTransaction(_x7, _x8) {\n    return _sendTransaction.apply(this, arguments);\n  }\n\n  function _sendTransaction() {\n    _sendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(req, res) {\n      var txParams;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (processTransaction) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              txParams = req.params[0] || {\n                from: \"\"\n              };\n              _context4.next = 5;\n              return validateAndNormalizeKeyholder(txParams.from, req);\n\n            case 5:\n              txParams.from = _context4.sent;\n              _context4.next = 8;\n              return processTransaction(txParams, req);\n\n            case 8:\n              res.result = _context4.sent;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _sendTransaction.apply(this, arguments);\n  }\n\n  function signTransaction(_x9, _x10) {\n    return _signTransaction.apply(this, arguments);\n  } //\n  // message signatures\n  //\n\n\n  function _signTransaction() {\n    _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(req, res) {\n      var txParams;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (processSignTransaction) {\n                _context5.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              txParams = req.params[0] || {\n                from: \"\"\n              };\n              _context5.next = 5;\n              return validateAndNormalizeKeyholder(txParams.from, req);\n\n            case 5:\n              txParams.from = _context5.sent;\n              _context5.next = 8;\n              return processSignTransaction(txParams, req);\n\n            case 8:\n              res.result = _context5.sent;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _signTransaction.apply(this, arguments);\n  }\n\n  function ethSign(_x11, _x12) {\n    return _ethSign.apply(this, arguments);\n  }\n\n  function _ethSign() {\n    _ethSign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(req, res) {\n      var address, message, extraParams, msgParams;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (processEthSignMessage) {\n                _context6.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context6.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context6.sent;\n              message = req.params[1];\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n                from: address,\n                data: message\n              });\n              _context6.next = 10;\n              return processEthSignMessage(msgParams, req);\n\n            case 10:\n              res.result = _context6.sent;\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _ethSign.apply(this, arguments);\n  }\n\n  function signTypedData(_x13, _x14) {\n    return _signTypedData.apply(this, arguments);\n  }\n\n  function _signTypedData() {\n    _signTypedData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(req, res) {\n      var message, address, version, extraParams, msgParams;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (processTypedMessage) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              message = req.params[0];\n              _context7.next = 5;\n              return validateAndNormalizeKeyholder(req.params[1], req);\n\n            case 5:\n              address = _context7.sent;\n              version = \"V1\";\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n                from: address,\n                data: message\n              });\n              _context7.next = 11;\n              return processTypedMessage(msgParams, req, version);\n\n            case 11:\n              res.result = _context7.sent;\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _signTypedData.apply(this, arguments);\n  }\n\n  function signTypedDataV3(_x15, _x16) {\n    return _signTypedDataV.apply(this, arguments);\n  }\n\n  function _signTypedDataV() {\n    _signTypedDataV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(req, res) {\n      var address, message, version, msgParams;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (processTypedMessageV3) {\n                _context8.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context8.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context8.sent;\n              message = req.params[1];\n              version = \"V3\";\n              msgParams = {\n                data: message,\n                from: address,\n                version: version\n              };\n              _context8.next = 10;\n              return processTypedMessageV3(msgParams, req, version);\n\n            case 10:\n              res.result = _context8.sent;\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _signTypedDataV.apply(this, arguments);\n  }\n\n  function signTypedDataV4(_x17, _x18) {\n    return _signTypedDataV2.apply(this, arguments);\n  }\n\n  function _signTypedDataV2() {\n    _signTypedDataV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(req, res) {\n      var address, message, version, msgParams;\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (processTypedMessageV4) {\n                _context9.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context9.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context9.sent;\n              message = req.params[1];\n              version = \"V4\";\n              msgParams = {\n                data: message,\n                from: address,\n                version: version\n              };\n              _context9.next = 10;\n              return processTypedMessageV4(msgParams, req, version);\n\n            case 10:\n              res.result = _context9.sent;\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _signTypedDataV2.apply(this, arguments);\n  }\n\n  function personalSign(_x19, _x20) {\n    return _personalSign.apply(this, arguments);\n  }\n\n  function _personalSign() {\n    _personalSign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(req, res) {\n      var firstParam, secondParam, extraParams, address, message, warning, msgParams;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (processPersonalMessage) {\n                _context10.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              // process normally\n              firstParam = req.params[0];\n              secondParam = req.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n\n              extraParams = req.params[2] || {}; // We initially incorrectly ordered these parameters.\n              // To gracefully respect users who adopted this API early,\n              // we are currently gracefully recovering from the wrong param order\n              // when it is clearly identifiable.\n              //\n              // That means when the first param is definitely an address,\n              // and the second param is definitely not, but is hex.\n\n              if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n                warning = \"The eth_personalSign method requires params ordered \";\n                warning += \"[message, address]. This was previously handled incorrectly, \";\n                warning += \"and has been corrected automatically. \";\n                warning += \"Please switch this param order for smooth behavior in the future.\";\n                res.warning = warning;\n                address = firstParam;\n                message = secondParam;\n              } else {\n                message = firstParam;\n                address = secondParam;\n              }\n\n              _context10.next = 8;\n              return validateAndNormalizeKeyholder(address, req);\n\n            case 8:\n              address = _context10.sent;\n              msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n                from: address,\n                data: message\n              }); // eslint-disable-next-line require-atomic-updates\n\n              _context10.next = 12;\n              return processPersonalMessage(msgParams, req);\n\n            case 12:\n              res.result = _context10.sent;\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _personalSign.apply(this, arguments);\n  }\n\n  function encryptionPublicKey(_x21, _x22) {\n    return _encryptionPublicKey.apply(this, arguments);\n  }\n\n  function _encryptionPublicKey() {\n    _encryptionPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(req, res) {\n      var address;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (processEncryptionPublicKey) {\n                _context11.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context11.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context11.sent;\n              _context11.next = 7;\n              return processEncryptionPublicKey(address, req);\n\n            case 7:\n              res.result = _context11.sent;\n\n            case 8:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    return _encryptionPublicKey.apply(this, arguments);\n  }\n\n  function decryptMessage(_x23, _x24) {\n    return _decryptMessage.apply(this, arguments);\n  }\n\n  function _decryptMessage() {\n    _decryptMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(req, res) {\n      var ciphertext, address, extraParams, msgParams;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (processDecryptMessage) {\n                _context12.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              ciphertext = req.params[0];\n              _context12.next = 5;\n              return validateAndNormalizeKeyholder(req.params[1], req);\n\n            case 5:\n              address = _context12.sent;\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$2(_objectSpread$2({}, extraParams), {}, {\n                from: address,\n                data: ciphertext\n              });\n              res.result = processDecryptMessage(msgParams, req);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    return _decryptMessage.apply(this, arguments);\n  }\n\n  function fetchPrivateKey(_x25, _x26) {\n    return _fetchPrivateKey.apply(this, arguments);\n  }\n\n  function _fetchPrivateKey() {\n    _fetchPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(req, res) {\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              if (getPrivateKey) {\n                _context13.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              res.result = getPrivateKey(req);\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n    return _fetchPrivateKey.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage)\n  });\n}\n\nfunction createEthMiddleware(providerHandlers) {\n  var getAccounts = providerHandlers.getAccounts,\n      getPrivateKey = providerHandlers.getPrivateKey,\n      processTransaction = providerHandlers.processTransaction,\n      processEthSignMessage = providerHandlers.processEthSignMessage,\n      processTypedMessage = providerHandlers.processTypedMessage,\n      processTypedMessageV3 = providerHandlers.processTypedMessageV3,\n      processTypedMessageV4 = providerHandlers.processTypedMessageV4,\n      processPersonalMessage = providerHandlers.processPersonalMessage,\n      processEncryptionPublicKey = providerHandlers.processEncryptionPublicKey,\n      processDecryptMessage = providerHandlers.processDecryptMessage;\n  var ethMiddleware = mergeMiddleware([createScaffoldMiddleware({\n    eth_syncing: false\n  }), createWalletMiddleware({\n    getAccounts: getAccounts,\n    getPrivateKey: getPrivateKey,\n    processTransaction: processTransaction,\n    processEthSignMessage: processEthSignMessage,\n    processTypedMessage: processTypedMessage,\n    processTypedMessageV3: processTypedMessageV3,\n    processTypedMessageV4: processTypedMessageV4,\n    processPersonalMessage: processPersonalMessage,\n    processEncryptionPublicKey: processEncryptionPublicKey,\n    processDecryptMessage: processDecryptMessage\n  })]);\n  return ethMiddleware;\n}\n\nfunction createChainSwitchMiddleware(_ref) {\n  var addChain = _ref.addChain,\n      switchChain = _ref.switchChain;\n\n  function addNewChain(_x27, _x28) {\n    return _addNewChain.apply(this, arguments);\n  }\n\n  function _addNewChain() {\n    _addNewChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(req, res) {\n      var _req$params, chainParams;\n\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              chainParams = (_req$params = req.params) !== null && _req$params !== void 0 && _req$params.length ? req.params[0] : undefined;\n\n              if (chainParams) {\n                _context14.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n\n            case 3:\n              if (chainParams.chainId) {\n                _context14.next = 5;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n\n            case 5:\n              if (!(!chainParams.rpcUrls || chainParams.rpcUrls.length === 0)) {\n                _context14.next = 7;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n\n            case 7:\n              if (chainParams.nativeCurrency) {\n                _context14.next = 9;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n            case 9:\n              _context14.next = 11;\n              return addChain(chainParams);\n\n            case 11:\n              res.result = _context14.sent;\n\n            case 12:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n    return _addNewChain.apply(this, arguments);\n  }\n\n  function updateChain(_x29, _x30) {\n    return _updateChain.apply(this, arguments);\n  }\n\n  function _updateChain() {\n    _updateChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(req, res) {\n      var _req$params2, chainParams;\n\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              chainParams = (_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.length ? req.params[0] : undefined;\n\n              if (chainParams) {\n                _context15.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n\n            case 3:\n              _context15.next = 5;\n              return switchChain(chainParams);\n\n            case 5:\n              res.result = _context15.sent;\n\n            case 6:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n    return _updateChain.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain)\n  });\n}\n\nfunction createAccountMiddleware(_ref2) {\n  var updatePrivatekey = _ref2.updatePrivatekey;\n\n  function updateAccount(_x31, _x32) {\n    return _updateAccount.apply(this, arguments);\n  }\n\n  function _updateAccount() {\n    _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(req, res) {\n      var _req$params3, accountParams;\n\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              accountParams = (_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.length ? req.params[0] : undefined;\n\n              if (accountParams !== null && accountParams !== void 0 && accountParams.privateKey) {\n                _context16.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n\n            case 3:\n              _context16.next = 5;\n              return updatePrivatekey(accountParams);\n\n            case 5:\n              res.result = _context16.sent;\n\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n    return _updateAccount.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount)\n  });\n} // #endregion account middlewares\n\n\nfunction createChainIdMiddleware(chainId) {\n  return function (req, res, next, end) {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createProviderConfigMiddleware(providerConfig) {\n  return function (req, res, next, end) {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createJsonRpcClient(providerConfig) {\n  var chainId = providerConfig.chainId,\n      rpcTarget = providerConfig.rpcTarget;\n  var fetchMiddleware = createFetchMiddleware({\n    rpcTarget: rpcTarget\n  });\n  var networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware: networkMiddleware,\n    fetchMiddleware: fetchMiddleware\n  };\n}\n\nfunction getProviderHandlers$1(_ref) {\n  var connector = _ref.connector;\n  return {\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee17() {\n        return _regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee18(_) {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                accounts = connector.accounts;\n\n                if (!(accounts && accounts.length)) {\n                  _context18.next = 3;\n                  break;\n                }\n\n                return _context18.abrupt(\"return\", accounts);\n\n              case 3:\n                throw new Error(\"Failed to get accounts\");\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function getAccounts(_x33) {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    processTransaction: function () {\n      var _processTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee19(txParams, _) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return connector.sendTransaction(txParams);\n\n              case 2:\n                result = _context19.sent;\n                return _context19.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function processTransaction(_x34, _x35) {\n        return _processTransaction.apply(this, arguments);\n      }\n\n      return processTransaction;\n    }(),\n    processSignTransaction: function () {\n      var _processSignTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee20(txParams, _) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return connector.signTransaction(txParams);\n\n              case 2:\n                result = _context20.sent;\n                return _context20.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      function processSignTransaction(_x36, _x37) {\n        return _processSignTransaction.apply(this, arguments);\n      }\n\n      return processSignTransaction;\n    }(),\n    processEthSignMessage: function () {\n      var _processEthSignMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee21(msgParams, _) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return connector.signMessage([msgParams.from, msgParams.data]);\n\n              case 2:\n                result = _context21.sent;\n                return _context21.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      function processEthSignMessage(_x38, _x39) {\n        return _processEthSignMessage.apply(this, arguments);\n      }\n\n      return processEthSignMessage;\n    }(),\n    processPersonalMessage: function () {\n      var _processPersonalMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee22(msgParams, _) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return connector.signPersonalMessage([msgParams.data, msgParams.from]);\n\n              case 2:\n                result = _context22.sent;\n                return _context22.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function processPersonalMessage(_x40, _x41) {\n        return _processPersonalMessage.apply(this, arguments);\n      }\n\n      return processPersonalMessage;\n    }(),\n    processTypedMessage: function () {\n      var _processTypedMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee23(msgParams, _) {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                log.debug(\"processTypedMessage\", msgParams);\n                _context23.next = 3;\n                return connector.signTypedData([msgParams.from, msgParams.data]);\n\n              case 3:\n                result = _context23.sent;\n                return _context23.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function processTypedMessage(_x42, _x43) {\n        return _processTypedMessage.apply(this, arguments);\n      }\n\n      return processTypedMessage;\n    }(),\n    processTypedMessageV3: function () {\n      var _processTypedMessageV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee24(_) {\n        return _regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      function processTypedMessageV3(_x44) {\n        return _processTypedMessageV.apply(this, arguments);\n      }\n\n      return processTypedMessageV3;\n    }(),\n    processTypedMessageV4: function () {\n      var _processTypedMessageV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee25(_) {\n        return _regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function processTypedMessageV4(_x45) {\n        return _processTypedMessageV2.apply(this, arguments);\n      }\n\n      return processTypedMessageV4;\n    }(),\n    processEncryptionPublicKey: function () {\n      var _processEncryptionPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee26(_) {\n        return _regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function processEncryptionPublicKey(_x46) {\n        return _processEncryptionPublicKey.apply(this, arguments);\n      }\n\n      return processEncryptionPublicKey;\n    }(),\n    processDecryptMessage: function processDecryptMessage(_) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n  };\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar WalletConnectProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(WalletConnectProvider, _BaseProvider);\n\n  var _super = _createSuper(WalletConnectProvider);\n\n  function WalletConnectProvider(_ref) {\n    var _this;\n\n    _classCallCheck(this, WalletConnectProvider);\n\n    var config = _ref.config,\n        state = _ref.state,\n        connector = _ref.connector;\n    _this = _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$1(_objectSpread$1({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state: _objectSpread$1(_objectSpread$1({}, state || {}), {}, {\n        chainId: \"loading\",\n        accounts: []\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"connector\", null);\n\n    _this.connector = connector || null;\n    return _this;\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee27() {\n        return _regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                if (this.connector) {\n                  _context27.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n                  code: 4902\n                });\n\n              case 2:\n                _context27.next = 4;\n                return this.setupProvider(this.connector);\n\n              case 4:\n                return _context27.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee28(connector) {\n        return _regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                this.onConnectorStateUpdate(connector);\n                _context28.next = 3;\n                return this.setupEngine(connector);\n\n              case 3:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function setupProvider(_x47) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee29(_ref2) {\n        var chainId, currentChainConfig, ticker, tickerName, rpcTarget;\n        return _regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                chainId = _ref2.chainId;\n                currentChainConfig = this.getChainConfig(chainId);\n                ticker = currentChainConfig.ticker, tickerName = currentChainConfig.tickerName, rpcTarget = currentChainConfig.rpcTarget;\n                this.update({\n                  chainId: \"loading\"\n                });\n                _context29.next = 6;\n                return this.connector.updateChain({\n                  chainId: Number.parseInt(chainId, 16),\n                  nativeCurrency: {\n                    name: tickerName,\n                    symbol: ticker\n                  },\n                  networkId: Number.parseInt(chainId, 10),\n                  rpcUrl: rpcTarget\n                });\n\n              case 6:\n                this.configure({\n                  chainConfig: currentChainConfig\n                });\n                _context29.next = 9;\n                return this.lookupNetwork(this.connector);\n\n              case 9:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function switchChain(_x48) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee30(connector) {\n        var chainId, connectedHexChainId;\n        return _regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                if (connector.connected) {\n                  _context30.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n              case 2:\n                if (this.provider) {\n                  _context30.next = 4;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 4:\n                chainId = this.config.chainConfig.chainId;\n                connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : \"0x\".concat(connector.chainId.toString(16));\n\n                if (!(chainId !== connectedHexChainId)) {\n                  _context30.next = 8;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n\n              case 8:\n                this.update({\n                  chainId: connectedHexChainId\n                });\n                this.provider.emit(\"connect\", {\n                  chainId: chainId\n                });\n                this.provider.emit(\"chainChanged\", this.state.chainId);\n                return _context30.abrupt(\"return\", connectedHexChainId);\n\n              case 12:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function lookupNetwork(_x49) {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"setupEngine\",\n    value: function () {\n      var _setupEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee31(connector) {\n        var providerHandlers, ethMiddleware, engine, _createJsonRpcClient, networkMiddleware, provider;\n\n        return _regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                providerHandlers = getProviderHandlers$1({\n                  connector: connector\n                });\n                this.update({\n                  accounts: connector.accounts || []\n                });\n                ethMiddleware = createEthMiddleware(providerHandlers);\n                engine = new JRPCEngine();\n                _createJsonRpcClient = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient.networkMiddleware;\n                engine.push(ethMiddleware);\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context31.next = 11;\n                return this.lookupNetwork(connector);\n\n              case 11:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function setupEngine(_x50) {\n        return _setupEngine.apply(this, arguments);\n      }\n\n      return setupEngine;\n    }()\n  }, {\n    key: \"onConnectorStateUpdate\",\n    value: function () {\n      var _onConnectorStateUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee33(connector) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                connector.on(\"session_update\", /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee32(error, payload) {\n                    var accounts, connectedChainId, rpcUrl, connectedHexChainId;\n                    return _regeneratorRuntime.wrap(function _callee32$(_context32) {\n                      while (1) {\n                        switch (_context32.prev = _context32.next) {\n                          case 0:\n                            if (_this2.provider) {\n                              _context32.next = 2;\n                              break;\n                            }\n\n                            throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n                          case 2:\n                            if (!error) {\n                              _context32.next = 5;\n                              break;\n                            }\n\n                            _this2.provider.emit(\"error\", error);\n\n                            return _context32.abrupt(\"return\");\n\n                          case 5:\n                            accounts = payload.accounts, connectedChainId = payload.chainId, rpcUrl = payload.rpcUrl; // Check if accounts changed and trigger event\n\n                            if (accounts !== null && accounts !== void 0 && accounts.length && _this2.state.accounts[0] !== accounts[0]) {\n                              _this2.update({\n                                accounts: accounts\n                              }); // await this.setupEngine(connector);\n\n\n                              _this2.provider.emit(\"accountsChanged\", accounts);\n                            }\n\n                            connectedHexChainId = isHexStrict(connectedChainId) ? connectedChainId : \"0x\".concat(connectedChainId.toString(16)); // Check if chainId changed and trigger event\n\n                            if (!(connectedChainId && _this2.state.chainId !== connectedHexChainId)) {\n                              _context32.next = 12;\n                              break;\n                            }\n\n                            // Handle rpcUrl update\n                            _this2.configure({\n                              chainConfig: _objectSpread$1(_objectSpread$1({}, _this2.config.chainConfig), {}, {\n                                chainId: connectedHexChainId,\n                                rpcTarget: rpcUrl\n                              })\n                            });\n\n                            _context32.next = 12;\n                            return _this2.setupEngine(connector);\n\n                          case 12:\n                          case \"end\":\n                            return _context32.stop();\n                        }\n                      }\n                    }, _callee32);\n                  }));\n\n                  return function (_x52, _x53) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33);\n      }));\n\n      function onConnectorStateUpdate(_x51) {\n        return _onConnectorStateUpdate.apply(this, arguments);\n      }\n\n      return onConnectorStateUpdate;\n    }()\n  }]);\n\n  return WalletConnectProvider;\n}(BaseProvider);\n\n_defineProperty(WalletConnectProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee34(params) {\n    var providerFactory;\n    return _regeneratorRuntime.wrap(function _callee34$(_context34) {\n      while (1) {\n        switch (_context34.prev = _context34.next) {\n          case 0:\n            providerFactory = new WalletConnectProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context34.next = 3;\n            return providerFactory.setupProvider(params.connector);\n\n          case 3:\n            return _context34.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context34.stop();\n        }\n      }\n    }, _callee34);\n  }));\n\n  return function (_x54) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n\nfunction getCommonConfiguration(_x55, _x56) {\n  return _getCommonConfiguration.apply(this, arguments);\n}\n\nfunction _getCommonConfiguration() {\n  _getCommonConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee54(supportsEIP1559, chainConfig) {\n    var name, chainId, hardfork, customChainParams;\n    return _regeneratorRuntime.wrap(function _callee54$(_context54) {\n      while (1) {\n        switch (_context54.prev = _context54.next) {\n          case 0:\n            name = chainConfig.displayName, chainId = chainConfig.chainId;\n            hardfork = supportsEIP1559 ? Hardfork.London : Hardfork.Berlin;\n            customChainParams = {\n              name: name,\n              chainId: chainId === \"loading\" ? 0 : parseInt(chainId, 16),\n              networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 10),\n              hardfork: hardfork\n            };\n            return _context54.abrupt(\"return\", Common.custom(customChainParams));\n\n          case 4:\n          case \"end\":\n            return _context54.stop();\n        }\n      }\n    }, _callee54);\n  }));\n  return _getCommonConfiguration.apply(this, arguments);\n}\n\nfunction getProviderHandlers(_ref) {\n  var privKey = _ref.privKey,\n      chainConfig = _ref.chainConfig,\n      getProviderEngineProxy = _ref.getProviderEngineProxy;\n  return {\n    getAccounts: function () {\n      var _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee35(_) {\n        return _regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                return _context35.abrupt(\"return\", [\"0x\".concat(privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\"))]);\n\n              case 1:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35);\n      }));\n\n      function getAccounts(_x57) {\n        return _getAccounts2.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee36(_) {\n        return _regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                return _context36.abrupt(\"return\", privKey);\n\n              case 1:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36);\n      }));\n\n      function getPrivateKey(_x58) {\n        return _getPrivateKey2.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    processTransaction: function () {\n      var _processTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee37(txParams, _) {\n        var providerEngineProxy, common, unsignedEthTx, signedTx, txHash;\n        return _regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                providerEngineProxy = getProviderEngineProxy();\n\n                if (providerEngineProxy) {\n                  _context37.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 3:\n                _context37.next = 5;\n                return getCommonConfiguration(!!txParams.maxFeePerGas && !!txParams.maxPriorityFeePerGas, chainConfig);\n\n              case 5:\n                common = _context37.sent;\n                unsignedEthTx = TransactionFactory.fromTxData(txParams, {\n                  common: common\n                });\n                signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n                _context37.next = 10;\n                return providerEngineProxy.request({\n                  method: \"eth_sendRawTransaction\",\n                  params: [\"0x\".concat(signedTx.toString(\"hex\"))]\n                });\n\n              case 10:\n                txHash = _context37.sent;\n                return _context37.abrupt(\"return\", txHash);\n\n              case 12:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37);\n      }));\n\n      function processTransaction(_x59, _x60) {\n        return _processTransaction2.apply(this, arguments);\n      }\n\n      return processTransaction;\n    }(),\n    processSignTransaction: function () {\n      var _processSignTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee38(txParams, _) {\n        var common, unsignedEthTx, signedTx;\n        return _regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                _context38.next = 2;\n                return getCommonConfiguration(!!txParams.maxFeePerGas && !!txParams.maxPriorityFeePerGas, chainConfig);\n\n              case 2:\n                common = _context38.sent;\n                unsignedEthTx = TransactionFactory.fromTxData(txParams, {\n                  common: common\n                });\n                signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n                return _context38.abrupt(\"return\", \"0x\".concat(signedTx.toString(\"hex\")));\n\n              case 6:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38);\n      }));\n\n      function processSignTransaction(_x61, _x62) {\n        return _processSignTransaction2.apply(this, arguments);\n      }\n\n      return processSignTransaction;\n    }(),\n    processEthSignMessage: function () {\n      var _processEthSignMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee39(msgParams, _) {\n        var rawMessageSig;\n        return _regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                rawMessageSig = signMessage(privKey, msgParams.data);\n                return _context39.abrupt(\"return\", rawMessageSig);\n\n              case 2:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39);\n      }));\n\n      function processEthSignMessage(_x63, _x64) {\n        return _processEthSignMessage2.apply(this, arguments);\n      }\n\n      return processEthSignMessage;\n    }(),\n    processPersonalMessage: function () {\n      var _processPersonalMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee40(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = personalSign({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data\n                });\n                return _context40.abrupt(\"return\", sig);\n\n              case 3:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40);\n      }));\n\n      function processPersonalMessage(_x65, _x66) {\n        return _processPersonalMessage2.apply(this, arguments);\n      }\n\n      return processPersonalMessage;\n    }(),\n    processTypedMessage: function () {\n      var _processTypedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee41(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                log.debug(\"processTypedMessage\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V1\n                });\n                return _context41.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41);\n      }));\n\n      function processTypedMessage(_x67, _x68) {\n        return _processTypedMessage2.apply(this, arguments);\n      }\n\n      return processTypedMessage;\n    }(),\n    processTypedMessageV3: function () {\n      var _processTypedMessageV3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee42(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                log.debug(\"processTypedMessageV3\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V3\n                });\n                return _context42.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42);\n      }));\n\n      function processTypedMessageV3(_x69, _x70) {\n        return _processTypedMessageV3.apply(this, arguments);\n      }\n\n      return processTypedMessageV3;\n    }(),\n    processTypedMessageV4: function () {\n      var _processTypedMessageV4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee43(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                log.debug(\"processTypedMessageV4\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V4\n                });\n                return _context43.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43);\n      }));\n\n      function processTypedMessageV4(_x71, _x72) {\n        return _processTypedMessageV4.apply(this, arguments);\n      }\n\n      return processTypedMessageV4;\n    }(),\n    processEncryptionPublicKey: function () {\n      var _processEncryptionPublicKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee44(address, _) {\n        return _regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                log.info(\"processEncryptionPublicKey\", address);\n                return _context44.abrupt(\"return\", getEncryptionPublicKey(privKey));\n\n              case 2:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44);\n      }));\n\n      function processEncryptionPublicKey(_x73, _x74) {\n        return _processEncryptionPublicKey2.apply(this, arguments);\n      }\n\n      return processEncryptionPublicKey;\n    }(),\n    processDecryptMessage: function processDecryptMessage(msgParams, _) {\n      log.info(\"processDecryptMessage\", msgParams);\n      var stripped = stripHexPrefix(msgParams.data);\n      var buff = Buffer.from(stripped, \"hex\");\n      var decrypted = decrypt({\n        encryptedData: JSON.parse(buff.toString(\"utf8\")),\n        privateKey: privKey\n      });\n      return decrypted;\n    }\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar EthereumPrivateKeyProvider = /*#__PURE__*/function (_BaseProvider2) {\n  _inherits(EthereumPrivateKeyProvider, _BaseProvider2);\n\n  var _super2 = _createSuper(EthereumPrivateKeyProvider);\n\n  function EthereumPrivateKeyProvider(_ref) {\n    _classCallCheck(this, EthereumPrivateKeyProvider);\n\n    var config = _ref.config,\n        state = _ref.state;\n    return _super2.call(this, {\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(EthereumPrivateKeyProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee45() {\n        return _regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                if (this.state.privateKey) {\n                  _context45.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Private key is not found in state, plz pass it in constructor state param\",\n                  code: 4902\n                });\n\n              case 2:\n                _context45.next = 4;\n                return this.setupProvider(this.state.privateKey);\n\n              case 4:\n                return _context45.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45, this);\n      }));\n\n      function enable() {\n        return _enable2.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee46(privKey) {\n        var providerHandlers, ethMiddleware, chainSwitchMiddleware, engine, _createJsonRpcClient2, networkMiddleware, provider;\n\n        return _regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                providerHandlers = getProviderHandlers({\n                  privKey: privKey,\n                  chainConfig: this.config.chainConfig,\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n                ethMiddleware = createEthMiddleware(providerHandlers);\n                chainSwitchMiddleware = this.getChainSwitchMiddleware();\n                engine = new JRPCEngine(); // Not a partial anymore because of checks in ctor\n\n                _createJsonRpcClient2 = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient2.networkMiddleware;\n                engine.push(ethMiddleware);\n                engine.push(chainSwitchMiddleware);\n                engine.push(this.getAccountMiddleware());\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context46.next = 13;\n                return this.lookupNetwork();\n\n              case 13:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function setupProvider(_x75) {\n        return _setupProvider2.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"updateAccount\",\n    value: function () {\n      var _updateAccount2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee47(params) {\n        var existingKey;\n        return _regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context47.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context47.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"eth_private_key\"\n                });\n\n              case 4:\n                existingKey = _context47.sent;\n\n                if (!(existingKey !== params.privateKey)) {\n                  _context47.next = 14;\n                  break;\n                }\n\n                _context47.next = 8;\n                return this.setupProvider(params.privateKey);\n\n              case 8:\n                _context47.t0 = this._providerEngineProxy;\n                _context47.next = 11;\n                return this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                });\n\n              case 11:\n                _context47.t1 = _context47.sent;\n                _context47.t2 = {\n                  accounts: _context47.t1\n                };\n\n                _context47.t0.emit.call(_context47.t0, \"accountsChanged\", _context47.t2);\n\n              case 14:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function updateAccount(_x76) {\n        return _updateAccount2.apply(this, arguments);\n      }\n\n      return updateAccount;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee48(params) {\n        var chainConfig, privKey;\n        return _regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context48.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainConfig = this.getChainConfig(params.chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                this.configure({\n                  chainConfig: chainConfig\n                });\n                _context48.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"eth_private_key\"\n                });\n\n              case 7:\n                privKey = _context48.sent;\n                _context48.next = 10;\n                return this.setupProvider(privKey);\n\n              case 10:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this);\n      }));\n\n      function switchChain(_x77) {\n        return _switchChain2.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee49() {\n        var chainId, network;\n        return _regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                if (this.provider) {\n                  _context49.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainId = this.config.chainConfig.chainId;\n\n                if (chainId) {\n                  _context49.next = 5;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n\n              case 5:\n                _context49.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"net_version\",\n                  params: []\n                });\n\n              case 7:\n                network = _context49.sent;\n\n                if (!(parseInt(chainId, 16) !== parseInt(network, 10))) {\n                  _context49.next = 10;\n                  break;\n                }\n\n                throw ethErrors.provider.chainDisconnected(\"Invalid network, net_version is: \".concat(network));\n\n              case 10:\n                log.debug(\"this provider\", this.provider, chainId, this.state.chainId);\n\n                if (this.state.chainId !== chainId) {\n                  this.provider.emit(\"chainChanged\", chainId);\n                  this.provider.emit(\"connect\", {\n                    chainId: chainId\n                  });\n                }\n\n                this.update({\n                  chainId: chainId\n                });\n                return _context49.abrupt(\"return\", network);\n\n              case 14:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork2.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getChainSwitchMiddleware\",\n    value: function getChainSwitchMiddleware() {\n      var _this3 = this;\n\n      var chainSwitchHandlers = {\n        addChain: function () {\n          var _addChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee50(params) {\n            var chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency;\n            return _regeneratorRuntime.wrap(function _callee50$(_context50) {\n              while (1) {\n                switch (_context50.prev = _context50.next) {\n                  case 0:\n                    chainId = params.chainId, chainName = params.chainName, rpcUrls = params.rpcUrls, blockExplorerUrls = params.blockExplorerUrls, nativeCurrency = params.nativeCurrency;\n\n                    _this3.addChain({\n                      chainNamespace: \"eip155\",\n                      chainId: chainId,\n                      ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"ETH\",\n                      tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Ether\",\n                      displayName: chainName,\n                      rpcTarget: rpcUrls[0],\n                      blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context50.stop();\n                }\n              }\n            }, _callee50);\n          }));\n\n          function addChain(_x78) {\n            return _addChain.apply(this, arguments);\n          }\n\n          return addChain;\n        }(),\n        switchChain: function () {\n          var _switchChain3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee51(params) {\n            var chainId;\n            return _regeneratorRuntime.wrap(function _callee51$(_context51) {\n              while (1) {\n                switch (_context51.prev = _context51.next) {\n                  case 0:\n                    chainId = params.chainId;\n                    _context51.next = 3;\n                    return _this3.switchChain({\n                      chainId: chainId\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context51.stop();\n                }\n              }\n            }, _callee51);\n          }));\n\n          function switchChain(_x79) {\n            return _switchChain3.apply(this, arguments);\n          }\n\n          return switchChain;\n        }()\n      };\n      var chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n      return chainSwitchMiddleware;\n    }\n  }, {\n    key: \"getAccountMiddleware\",\n    value: function getAccountMiddleware() {\n      var _this4 = this;\n\n      var accountHandlers = {\n        updatePrivatekey: function () {\n          var _updatePrivatekey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee52(params) {\n            var privateKey;\n            return _regeneratorRuntime.wrap(function _callee52$(_context52) {\n              while (1) {\n                switch (_context52.prev = _context52.next) {\n                  case 0:\n                    privateKey = params.privateKey;\n                    _context52.next = 3;\n                    return _this4.updateAccount({\n                      privateKey: privateKey\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context52.stop();\n                }\n              }\n            }, _callee52);\n          }));\n\n          function updatePrivatekey(_x80) {\n            return _updatePrivatekey.apply(this, arguments);\n          }\n\n          return updatePrivatekey;\n        }()\n      };\n      return createAccountMiddleware(accountHandlers);\n    }\n  }]);\n\n  return EthereumPrivateKeyProvider;\n}(BaseProvider);\n\n_defineProperty(EthereumPrivateKeyProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee53(params) {\n    var providerFactory;\n    return _regeneratorRuntime.wrap(function _callee53$(_context53) {\n      while (1) {\n        switch (_context53.prev = _context53.next) {\n          case 0:\n            providerFactory = new EthereumPrivateKeyProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context53.next = 3;\n            return providerFactory.setupProvider(params.privKey);\n\n          case 3:\n            return _context53.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context53.stop();\n        }\n      }\n    }, _callee53);\n  }));\n\n  return function (_x81) {\n    return _ref5.apply(this, arguments);\n  };\n}());\n\nexport { EthereumPrivateKeyProvider, WalletConnectProvider };","map":{"version":3,"mappings":"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","names":["resemblesAddress","str","length","createWalletMiddleware","getAccounts","_ref","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","Error","validateAndNormalizeKeyholder","address","req","accounts","normalizedAccounts","map","_address","toLowerCase","normalizedAddress","includes","ethErrors","rpc","invalidParams","message","lookupAccounts","res","result","lookupDefaultAccount","sendTransaction","methodNotSupported","txParams","params","from","signTransaction","ethSign","extraParams","msgParams","_objectSpread$2","data","signTypedData","version","signTypedDataV3","signTypedDataV4","personalSign","firstParam","secondParam","warning","encryptionPublicKey","decryptMessage","ciphertext","fetchPrivateKey","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","ethMiddleware","mergeMiddleware","eth_syncing","createChainSwitchMiddleware","addChain","switchChain","addNewChain","chainParams","undefined","chainId","rpcUrls","nativeCurrency","updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","createAccountMiddleware","updatePrivatekey","_ref2","updateAccount","accountParams","privateKey","wallet_updateAccount","createChainIdMiddleware","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","getProviderHandlers","connector","_","signMessage","signPersonalMessage","log","debug","WalletConnectProvider","constructor","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","EIP155","provider","custom","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","currentChainConfig","getChainConfig","ticker","tickerName","update","Number","parseInt","name","symbol","networkId","rpcUrl","configure","lookupNetwork","connected","WalletLoginError","notConnectedError","connectedHexChainId","isHexStrict","toString","WalletInitializationError","rpcConnectionError","emit","engine","JRPCEngine","push","providerFromEngine","updateProviderEngineProxy","on","error","payload","connectedChainId","BaseProvider","providerFactory","getCommonConfiguration","supportsEIP1559","displayName","hardfork","Hardfork","London","Berlin","customChainParams","Common","privKey","getProviderEngineProxy","privateToAddress","Buffer","providerEngineProxy","maxFeePerGas","maxPriorityFeePerGas","common","unsignedEthTx","TransactionFactory","fromTxData","signedTx","sign","serialize","txHash","rawMessageSig","privKeyBuffer","sig","SignTypedDataVersion","V1","V3","V4","info","getEncryptionPublicKey","stripped","stripHexPrefix","buff","decrypted","decrypt","encryptedData","JSON","parse","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","existingKey","network","chainDisconnected","chainSwitchHandlers","chainName","blockExplorerUrls","blockExplorer","accountHandlers"],"sources":["../src/rpc/walletMidddleware.ts","../src/rpc/ethRpcMiddlewares.ts","../src/rpc/jrpcClient.ts","../src/providers/injectedProviders/walletConnectUtils.ts","../src/providers/injectedProviders/WalletConnectProvider.ts","../src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts"],"sourcesContent":[null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\nimport _createClass from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { getAddress as _getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nexport { checkResultErrors };\nexport var LogDescription = /*#__PURE__*/function (_Description) {\n  _inherits(LogDescription, _Description);\n\n  var _super = _createSuper(LogDescription);\n\n  function LogDescription() {\n    _classCallCheck(this, LogDescription);\n\n    return _super.apply(this, arguments);\n  }\n\n  return _createClass(LogDescription);\n}(Description);\nexport var TransactionDescription = /*#__PURE__*/function (_Description2) {\n  _inherits(TransactionDescription, _Description2);\n\n  var _super2 = _createSuper(TransactionDescription);\n\n  function TransactionDescription() {\n    _classCallCheck(this, TransactionDescription);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return _createClass(TransactionDescription);\n}(Description);\nexport var ErrorDescription = /*#__PURE__*/function (_Description3) {\n  _inherits(ErrorDescription, _Description3);\n\n  var _super3 = _createSuper(ErrorDescription);\n\n  function ErrorDescription() {\n    _classCallCheck(this, ErrorDescription);\n\n    return _super3.apply(this, arguments);\n  }\n\n  return _createClass(ErrorDescription);\n}(Description);\nexport var Indexed = /*#__PURE__*/function (_Description4) {\n  _inherits(Indexed, _Description4);\n\n  var _super4 = _createSuper(Indexed);\n\n  function Indexed() {\n    _classCallCheck(this, Indexed);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(Indexed, null, [{\n    key: \"isIndexed\",\n    value: function isIndexed(value) {\n      return !!(value && value._isIndexed);\n    }\n  }]);\n\n  return Indexed;\n}(Description);\nvar BuiltinErrors = {\n  \"0x08c379a0\": {\n    signature: \"Error(string)\",\n    name: \"Error\",\n    inputs: [\"string\"],\n    reason: true\n  },\n  \"0x4e487b71\": {\n    signature: \"Panic(uint256)\",\n    name: \"Panic\",\n    inputs: [\"uint256\"]\n  }\n};\n\nfunction wrapAccessError(property, error) {\n  var wrap = new Error(\"deferred error during ABI decoding triggered accessing \".concat(property));\n  wrap.error = error;\n  return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\n\n\nexport var Interface = /*#__PURE__*/function () {\n  function Interface(fragments) {\n    var _this = this;\n\n    _classCallCheck(this, Interface);\n\n    logger.checkNew(this instanceof Interface ? this.constructor : void 0, Interface);\n    var abi = [];\n\n    if (typeof fragments === \"string\") {\n      abi = JSON.parse(fragments);\n    } else {\n      abi = fragments;\n    }\n\n    defineReadOnly(this, \"fragments\", abi.map(function (fragment) {\n      return Fragment.from(fragment);\n    }).filter(function (fragment) {\n      return fragment != null;\n    }));\n    defineReadOnly(this, \"_abiCoder\", getStatic(this instanceof Interface ? this.constructor : void 0, \"getAbiCoder\")());\n    defineReadOnly(this, \"functions\", {});\n    defineReadOnly(this, \"errors\", {});\n    defineReadOnly(this, \"events\", {});\n    defineReadOnly(this, \"structs\", {}); // Add all fragments by their signature\n\n    this.fragments.forEach(function (fragment) {\n      var bucket = null;\n\n      switch (fragment.type) {\n        case \"constructor\":\n          if (_this.deploy) {\n            logger.warn(\"duplicate definition - constructor\");\n            return;\n          } //checkNames(fragment, \"input\", fragment.inputs);\n\n\n          defineReadOnly(_this, \"deploy\", fragment);\n          return;\n\n        case \"function\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n          bucket = _this.functions;\n          break;\n\n        case \"event\":\n          //checkNames(fragment, \"input\", fragment.inputs);\n          bucket = _this.events;\n          break;\n\n        case \"error\":\n          bucket = _this.errors;\n          break;\n\n        default:\n          return;\n      }\n\n      var signature = fragment.format();\n\n      if (bucket[signature]) {\n        logger.warn(\"duplicate definition - \" + signature);\n        return;\n      }\n\n      bucket[signature] = fragment;\n    }); // If we do not have a constructor add a default\n\n    if (!this.deploy) {\n      defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n        payable: false,\n        type: \"constructor\"\n      }));\n    }\n\n    defineReadOnly(this, \"_isInterface\", true);\n  }\n\n  _createClass(Interface, [{\n    key: \"format\",\n    value: function format(_format) {\n      if (!_format) {\n        _format = FormatTypes.full;\n      }\n\n      if (_format === FormatTypes.sighash) {\n        logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", _format);\n      }\n\n      var abi = this.fragments.map(function (fragment) {\n        return fragment.format(_format);\n      }); // We need to re-bundle the JSON fragments a bit\n\n      if (_format === FormatTypes.json) {\n        return JSON.stringify(abi.map(function (j) {\n          return JSON.parse(j);\n        }));\n      }\n\n      return abi;\n    } // Sub-classes can override these to handle other blockchains\n\n  }, {\n    key: \"getFunction\",\n    value: // Find a function definition by any means necessary (unless it is ambiguous)\n    function getFunction(nameOrSignatureOrSighash) {\n      if (isHexString(nameOrSignatureOrSighash)) {\n        for (var name in this.functions) {\n          if (nameOrSignatureOrSighash === this.getSighash(name)) {\n            return this.functions[name];\n          }\n        }\n\n        logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n      } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n      if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n        var _name = nameOrSignatureOrSighash.trim();\n\n        var matching = Object.keys(this.functions).filter(function (f) {\n          return f.split(\"(\"\n          /* fix:) */\n          )[0] === _name;\n        });\n\n        if (matching.length === 0) {\n          logger.throwArgumentError(\"no matching function\", \"name\", _name);\n        } else if (matching.length > 1) {\n          logger.throwArgumentError(\"multiple matching functions\", \"name\", _name);\n        }\n\n        return this.functions[matching[0]];\n      } // Normalize the signature and lookup the function\n\n\n      var result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n      if (!result) {\n        logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n      }\n\n      return result;\n    } // Find an event definition by any means necessary (unless it is ambiguous)\n\n  }, {\n    key: \"getEvent\",\n    value: function getEvent(nameOrSignatureOrTopic) {\n      if (isHexString(nameOrSignatureOrTopic)) {\n        var topichash = nameOrSignatureOrTopic.toLowerCase();\n\n        for (var name in this.events) {\n          if (topichash === this.getEventTopic(name)) {\n            return this.events[name];\n          }\n        }\n\n        logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n      } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n      if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n        var _name2 = nameOrSignatureOrTopic.trim();\n\n        var matching = Object.keys(this.events).filter(function (f) {\n          return f.split(\"(\"\n          /* fix:) */\n          )[0] === _name2;\n        });\n\n        if (matching.length === 0) {\n          logger.throwArgumentError(\"no matching event\", \"name\", _name2);\n        } else if (matching.length > 1) {\n          logger.throwArgumentError(\"multiple matching events\", \"name\", _name2);\n        }\n\n        return this.events[matching[0]];\n      } // Normalize the signature and lookup the function\n\n\n      var result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n\n      if (!result) {\n        logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n      }\n\n      return result;\n    } // Find a function definition by any means necessary (unless it is ambiguous)\n\n  }, {\n    key: \"getError\",\n    value: function getError(nameOrSignatureOrSighash) {\n      if (isHexString(nameOrSignatureOrSighash)) {\n        var getSighash = getStatic(this.constructor, \"getSighash\");\n\n        for (var name in this.errors) {\n          var error = this.errors[name];\n\n          if (nameOrSignatureOrSighash === getSighash(error)) {\n            return this.errors[name];\n          }\n        }\n\n        logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n      } // It is a bare name, look up the function (will return null if ambiguous)\n\n\n      if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n        var _name3 = nameOrSignatureOrSighash.trim();\n\n        var matching = Object.keys(this.errors).filter(function (f) {\n          return f.split(\"(\"\n          /* fix:) */\n          )[0] === _name3;\n        });\n\n        if (matching.length === 0) {\n          logger.throwArgumentError(\"no matching error\", \"name\", _name3);\n        } else if (matching.length > 1) {\n          logger.throwArgumentError(\"multiple matching errors\", \"name\", _name3);\n        }\n\n        return this.errors[matching[0]];\n      } // Normalize the signature and lookup the function\n\n\n      var result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n\n      if (!result) {\n        logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n      }\n\n      return result;\n    } // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n\n  }, {\n    key: \"getSighash\",\n    value: function getSighash(fragment) {\n      if (typeof fragment === \"string\") {\n        try {\n          fragment = this.getFunction(fragment);\n        } catch (error) {\n          try {\n            fragment = this.getError(fragment);\n          } catch (_) {\n            throw error;\n          }\n        }\n      }\n\n      return getStatic(this.constructor, \"getSighash\")(fragment);\n    } // Get the topic (the bytes32 hash) used by Solidity to identify an event\n\n  }, {\n    key: \"getEventTopic\",\n    value: function getEventTopic(eventFragment) {\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n\n      return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n  }, {\n    key: \"_decodeParams\",\n    value: function _decodeParams(params, data) {\n      return this._abiCoder.decode(params, data);\n    }\n  }, {\n    key: \"_encodeParams\",\n    value: function _encodeParams(params, values) {\n      return this._abiCoder.encode(params, values);\n    }\n  }, {\n    key: \"encodeDeploy\",\n    value: function encodeDeploy(values) {\n      return this._encodeParams(this.deploy.inputs, values || []);\n    }\n  }, {\n    key: \"decodeErrorResult\",\n    value: function decodeErrorResult(fragment, data) {\n      if (typeof fragment === \"string\") {\n        fragment = this.getError(fragment);\n      }\n\n      var bytes = arrayify(data);\n\n      if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n        logger.throwArgumentError(\"data signature does not match error \".concat(fragment.name, \".\"), \"data\", hexlify(bytes));\n      }\n\n      return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n  }, {\n    key: \"encodeErrorResult\",\n    value: function encodeErrorResult(fragment, values) {\n      if (typeof fragment === \"string\") {\n        fragment = this.getError(fragment);\n      }\n\n      return hexlify(concat([this.getSighash(fragment), this._encodeParams(fragment.inputs, values || [])]));\n    } // Decode the data for a function call (e.g. tx.data)\n\n  }, {\n    key: \"decodeFunctionData\",\n    value: function decodeFunctionData(functionFragment, data) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n\n      var bytes = arrayify(data);\n\n      if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n        logger.throwArgumentError(\"data signature does not match function \".concat(functionFragment.name, \".\"), \"data\", hexlify(bytes));\n      }\n\n      return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    } // Encode the data for a function call (e.g. tx.data)\n\n  }, {\n    key: \"encodeFunctionData\",\n    value: function encodeFunctionData(functionFragment, values) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n\n      return hexlify(concat([this.getSighash(functionFragment), this._encodeParams(functionFragment.inputs, values || [])]));\n    } // Decode the result from a function call (e.g. from eth_call)\n\n  }, {\n    key: \"decodeFunctionResult\",\n    value: function decodeFunctionResult(functionFragment, data) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n\n      var bytes = arrayify(data);\n      var reason = null;\n      var errorArgs = null;\n      var errorName = null;\n      var errorSignature = null;\n\n      switch (bytes.length % this._abiCoder._getWordSize()) {\n        case 0:\n          try {\n            return this._abiCoder.decode(functionFragment.outputs, bytes);\n          } catch (error) {}\n\n          break;\n\n        case 4:\n          {\n            var selector = hexlify(bytes.slice(0, 4));\n            var builtin = BuiltinErrors[selector];\n\n            if (builtin) {\n              errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n              errorName = builtin.name;\n              errorSignature = builtin.signature;\n\n              if (builtin.reason) {\n                reason = errorArgs[0];\n              }\n            } else {\n              try {\n                var error = this.getError(selector);\n                errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                errorName = error.name;\n                errorSignature = error.format();\n              } catch (error) {}\n            }\n\n            break;\n          }\n      }\n\n      return logger.throwError(\"call revert exception\", Logger.errors.CALL_EXCEPTION, {\n        method: functionFragment.format(),\n        errorArgs: errorArgs,\n        errorName: errorName,\n        errorSignature: errorSignature,\n        reason: reason\n      });\n    } // Encode the result for a function call (e.g. for eth_call)\n\n  }, {\n    key: \"encodeFunctionResult\",\n    value: function encodeFunctionResult(functionFragment, values) {\n      if (typeof functionFragment === \"string\") {\n        functionFragment = this.getFunction(functionFragment);\n      }\n\n      return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    } // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n\n  }, {\n    key: \"encodeFilterTopics\",\n    value: function encodeFilterTopics(eventFragment, values) {\n      var _this2 = this;\n\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n\n      if (values.length > eventFragment.inputs.length) {\n        logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n          argument: \"values\",\n          value: values\n        });\n      }\n\n      var topics = [];\n\n      if (!eventFragment.anonymous) {\n        topics.push(this.getEventTopic(eventFragment));\n      }\n\n      var encodeTopic = function encodeTopic(param, value) {\n        if (param.type === \"string\") {\n          return id(value);\n        } else if (param.type === \"bytes\") {\n          return keccak256(hexlify(value));\n        } // Check addresses are valid\n\n\n        if (param.type === \"address\") {\n          _this2._abiCoder.encode([\"address\"], [value]);\n        }\n\n        return hexZeroPad(hexlify(value), 32);\n      };\n\n      values.forEach(function (value, index) {\n        var param = eventFragment.inputs[index];\n\n        if (!param.indexed) {\n          if (value != null) {\n            logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", \"contract.\" + param.name, value);\n          }\n\n          return;\n        }\n\n        if (value == null) {\n          topics.push(null);\n        } else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n          logger.throwArgumentError(\"filtering with tuples or arrays not supported\", \"contract.\" + param.name, value);\n        } else if (Array.isArray(value)) {\n          topics.push(value.map(function (value) {\n            return encodeTopic(param, value);\n          }));\n        } else {\n          topics.push(encodeTopic(param, value));\n        }\n      }); // Trim off trailing nulls\n\n      while (topics.length && topics[topics.length - 1] === null) {\n        topics.pop();\n      }\n\n      return topics;\n    }\n  }, {\n    key: \"encodeEventLog\",\n    value: function encodeEventLog(eventFragment, values) {\n      var _this3 = this;\n\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n\n      var topics = [];\n      var dataTypes = [];\n      var dataValues = [];\n\n      if (!eventFragment.anonymous) {\n        topics.push(this.getEventTopic(eventFragment));\n      }\n\n      if (values.length !== eventFragment.inputs.length) {\n        logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n      }\n\n      eventFragment.inputs.forEach(function (param, index) {\n        var value = values[index];\n\n        if (param.indexed) {\n          if (param.type === \"string\") {\n            topics.push(id(value));\n          } else if (param.type === \"bytes\") {\n            topics.push(keccak256(value));\n          } else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n            // @TODO\n            throw new Error(\"not implemented\");\n          } else {\n            topics.push(_this3._abiCoder.encode([param.type], [value]));\n          }\n        } else {\n          dataTypes.push(param);\n          dataValues.push(value);\n        }\n      });\n      return {\n        data: this._abiCoder.encode(dataTypes, dataValues),\n        topics: topics\n      };\n    } // Decode a filter for the event and the search criteria\n\n  }, {\n    key: \"decodeEventLog\",\n    value: function decodeEventLog(eventFragment, data, topics) {\n      if (typeof eventFragment === \"string\") {\n        eventFragment = this.getEvent(eventFragment);\n      }\n\n      if (topics != null && !eventFragment.anonymous) {\n        var topicHash = this.getEventTopic(eventFragment);\n\n        if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n          logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, {\n            argument: \"topics[0]\",\n            expected: topicHash,\n            value: topics[0]\n          });\n        }\n\n        topics = topics.slice(1);\n      }\n\n      var indexed = [];\n      var nonIndexed = [];\n      var dynamic = [];\n      eventFragment.inputs.forEach(function (param, index) {\n        if (param.indexed) {\n          if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n            indexed.push(ParamType.fromObject({\n              type: \"bytes32\",\n              name: param.name\n            }));\n            dynamic.push(true);\n          } else {\n            indexed.push(param);\n            dynamic.push(false);\n          }\n        } else {\n          nonIndexed.push(param);\n          dynamic.push(false);\n        }\n      });\n      var resultIndexed = topics != null ? this._abiCoder.decode(indexed, concat(topics)) : null;\n\n      var resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n\n      var result = [];\n      var nonIndexedIndex = 0,\n          indexedIndex = 0;\n      eventFragment.inputs.forEach(function (param, index) {\n        if (param.indexed) {\n          if (resultIndexed == null) {\n            result[index] = new Indexed({\n              _isIndexed: true,\n              hash: null\n            });\n          } else if (dynamic[index]) {\n            result[index] = new Indexed({\n              _isIndexed: true,\n              hash: resultIndexed[indexedIndex++]\n            });\n          } else {\n            try {\n              result[index] = resultIndexed[indexedIndex++];\n            } catch (error) {\n              result[index] = error;\n            }\n          }\n        } else {\n          try {\n            result[index] = resultNonIndexed[nonIndexedIndex++];\n          } catch (error) {\n            result[index] = error;\n          }\n        } // Add the keyword argument if named and safe\n\n\n        if (param.name && result[param.name] == null) {\n          var value = result[index]; // Make error named values throw on access\n\n          if (value instanceof Error) {\n            Object.defineProperty(result, param.name, {\n              enumerable: true,\n              get: function get() {\n                throw wrapAccessError(\"property \".concat(JSON.stringify(param.name)), value);\n              }\n            });\n          } else {\n            result[param.name] = value;\n          }\n        }\n      }); // Make all error indexed values throw on access\n\n      var _loop = function _loop(i) {\n        var value = result[i];\n\n        if (value instanceof Error) {\n          Object.defineProperty(result, i, {\n            enumerable: true,\n            get: function get() {\n              throw wrapAccessError(\"index \".concat(i), value);\n            }\n          });\n        }\n      };\n\n      for (var i = 0; i < result.length; i++) {\n        _loop(i);\n      }\n\n      return Object.freeze(result);\n    } // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n\n  }, {\n    key: \"parseTransaction\",\n    value: function parseTransaction(tx) {\n      var fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n\n      if (!fragment) {\n        return null;\n      }\n\n      return new TransactionDescription({\n        args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n        functionFragment: fragment,\n        name: fragment.name,\n        signature: fragment.format(),\n        sighash: this.getSighash(fragment),\n        value: BigNumber.from(tx.value || \"0\")\n      });\n    } // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n\n  }, {\n    key: \"parseLog\",\n    value: function parseLog(log) {\n      var fragment = this.getEvent(log.topics[0]);\n\n      if (!fragment || fragment.anonymous) {\n        return null;\n      } // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n      //        Probably not, because just because it is the only event in the ABI does\n      //        not mean we have the full ABI; maybe just a fragment?\n\n\n      return new LogDescription({\n        eventFragment: fragment,\n        name: fragment.name,\n        signature: fragment.format(),\n        topic: this.getEventTopic(fragment),\n        args: this.decodeEventLog(fragment, log.data, log.topics)\n      });\n    }\n  }, {\n    key: \"parseError\",\n    value: function parseError(data) {\n      var hexData = hexlify(data);\n      var fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n\n      if (!fragment) {\n        return null;\n      }\n\n      return new ErrorDescription({\n        args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n        errorFragment: fragment,\n        name: fragment.name,\n        signature: fragment.format(),\n        sighash: this.getSighash(fragment)\n      });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n\n  }], [{\n    key: \"getAbiCoder\",\n    value: function getAbiCoder() {\n      return defaultAbiCoder;\n    }\n  }, {\n    key: \"getAddress\",\n    value: function getAddress(address) {\n      return _getAddress(address);\n    }\n  }, {\n    key: \"getSighash\",\n    value: function getSighash(fragment) {\n      return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n  }, {\n    key: \"getEventTopic\",\n    value: function getEventTopic(eventFragment) {\n      return id(eventFragment.format());\n    }\n  }, {\n    key: \"isInterface\",\n    value: function isInterface(value) {\n      return !!(value && value._isInterface);\n    }\n  }]);\n\n  return Interface;\n}();","map":{"version":3,"mappings":"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","names":["getAddress","BigNumber","arrayify","concat","hexDataSlice","hexlify","hexZeroPad","isHexString","id","keccak256","defineReadOnly","Description","getStatic","defaultAbiCoder","checkResultErrors","ConstructorFragment","EventFragment","FormatTypes","Fragment","FunctionFragment","ParamType","Logger","version","logger","LogDescription","TransactionDescription","ErrorDescription","Indexed","value","_isIndexed","BuiltinErrors","signature","name","inputs","reason","wrapAccessError","property","error","wrap","Error","Interface","fragments","checkNew","abi","JSON","parse","map","fragment","from","filter","forEach","bucket","type","deploy","warn","functions","events","errors","format","payable","full","sighash","throwArgumentError","json","stringify","j","nameOrSignatureOrSighash","getSighash","indexOf","trim","matching","Object","keys","f","split","length","result","fromString","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","constructor","getFunction","getError","_","eventFragment","getEvent","params","data","_abiCoder","decode","values","encode","_encodeParams","bytes","slice","_decodeParams","functionFragment","errorArgs","errorName","errorSignature","_getWordSize","outputs","selector","builtin","throwError","CALL_EXCEPTION","method","UNEXPECTED_ARGUMENT","argument","topics","anonymous","push","encodeTopic","param","index","indexed","baseType","Array","isArray","pop","dataTypes","dataValues","topicHash","INVALID_ARGUMENT","expected","nonIndexed","dynamic","fromObject","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","defineProperty","enumerable","get","i","freeze","tx","substring","args","log","topic","decodeEventLog","hexData","errorFragment","address","_isInterface"],"sourceRoot":"","sources":["../src.ts/interface.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport merge from 'lodash.merge';\nimport logLevel, { levels } from 'loglevel';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar log = logLevel.getLogger(\"http-helpers\");\nlog.setLevel(levels.INFO);\nvar apiKey = \"torus-default\";\nvar embedHost = \"\"; // #region API Keys\n\nvar gatewayAuthHeader = \"x-api-key\";\nvar gatewayEmbedHostHeader = \"x-embed-host\";\nvar sentry = null;\nvar tracingOrigins = [];\nvar tracingPaths = [];\n\nfunction enableSentryTracing(_sentry, _tracingOrigins, _tracingPaths) {\n  sentry = _sentry;\n  tracingOrigins.push.apply(tracingOrigins, _toConsumableArray(_tracingOrigins));\n  tracingPaths.push.apply(tracingPaths, _toConsumableArray(_tracingPaths));\n}\n\nfunction setEmbedHost(embedHost_) {\n  embedHost = embedHost_;\n}\n\nfunction clearEmbedHost() {\n  embedHost = \"\";\n}\n\nfunction getEmbedHost() {\n  return embedHost;\n}\n\nfunction setAPIKey(apiKey_) {\n  apiKey = apiKey_;\n}\n\nfunction clearAPIKey() {\n  apiKey = \"torus-default\";\n}\n\nfunction getAPIKey() {\n  return apiKey;\n} // #endregion\n\n\nfunction setLogLevel(level) {\n  log.setLevel(level);\n}\n\nfunction fetchAndTrace(_x, _x2) {\n  return _fetchAndTrace.apply(this, arguments);\n}\n\nfunction _fetchAndTrace() {\n  _fetchAndTrace = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(url, init) {\n    var _url, transaction, span, response;\n\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _url = null;\n\n            try {\n              _url = new URL(url);\n            } catch (error) {}\n\n            if (!(sentry && _url && (tracingOrigins.includes(_url.origin) || tracingPaths.includes(_url.pathname)))) {\n              _context4.next = 11;\n              break;\n            }\n\n            transaction = sentry.startTransaction({\n              name: url\n            });\n            span = transaction.startChild({\n              op: \"http\"\n            }); // This function returns a Span\n\n            _context4.next = 7;\n            return fetch(url, init);\n\n          case 7:\n            response = _context4.sent;\n            span.finish(); // Remember that only finished spans will be sent with the transaction\n\n            transaction.finish(); // Finishing the transaction will send it to Sentry\n\n            return _context4.abrupt(\"return\", response);\n\n          case 11:\n            return _context4.abrupt(\"return\", fetch(url, init));\n\n          case 12:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _fetchAndTrace.apply(this, arguments);\n}\n\nfunction getApiKeyHeaders() {\n  var headers = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nfunction debugLogResponse(response) {\n  log.info(\"Response: \".concat(response.status, \" \").concat(response.statusText));\n  log.info(\"Url: \".concat(response.url));\n}\n\nvar promiseTimeout = function promiseTimeout(ms, promise) {\n  var timeout = new Promise(function (resolve, reject) {\n    var id = setTimeout(function () {\n      clearTimeout(id);\n      reject(new Error(\"Timed out in \".concat(ms, \"ms\")));\n    }, ms);\n  });\n  return Promise.race([promise, timeout]);\n};\n\nvar get = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(url) {\n    var options_,\n        customOptions,\n        defaultOptions,\n        options,\n        response,\n        _args = arguments;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options_ = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n            customOptions = _args.length > 2 && _args[2] !== undefined ? _args[2] : {};\n            defaultOptions = {\n              mode: \"cors\",\n              headers: {}\n            };\n\n            if (customOptions.useAPIKey) {\n              defaultOptions.headers = _objectSpread(_objectSpread({}, defaultOptions.headers), getApiKeyHeaders());\n            }\n\n            options = merge(defaultOptions, options_, {\n              method: \"GET\"\n            });\n            _context.next = 7;\n            return fetchAndTrace(url, options);\n\n          case 7:\n            response = _context.sent;\n\n            if (!response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", response.json());\n\n          case 10:\n            debugLogResponse(response);\n            throw response;\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function get(_x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar post = function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var options_ = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var customOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var defaultOptions = {\n    mode: \"cors\",\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\"\n    }\n  };\n\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = _objectSpread(_objectSpread({}, defaultOptions.headers), getApiKeyHeaders());\n  }\n\n  var options = merge(defaultOptions, options_, {\n    method: \"POST\"\n  }); // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data; // If url encoded data, this must not be the content type\n\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout(customOptions.timeout || 60000, fetchAndTrace(url, options).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    }\n\n    debugLogResponse(response);\n    throw response;\n  }));\n};\n\nvar patch = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url) {\n    var data,\n        options_,\n        customOptions,\n        defaultOptions,\n        options,\n        response,\n        _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            data = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {};\n            options_ = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};\n            customOptions = _args2.length > 3 && _args2[3] !== undefined ? _args2[3] : {};\n            defaultOptions = {\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n              }\n            }; // for multipart request browser/client will add multipart content type\n            // along with multipart boundary , so for multipart request send\n            // content-type: undefined or send with multipart boundary if already known\n\n            if (customOptions.useAPIKey) {\n              defaultOptions.headers = _objectSpread(_objectSpread({}, defaultOptions.headers), getApiKeyHeaders());\n            }\n\n            options = merge(defaultOptions, options_, {\n              method: \"PATCH\"\n            }); // deep merge changes the structure of form data and url encoded data ,\n            // so we should not deepmerge body data\n\n            if (customOptions.isUrlEncodedData) {\n              // for multipart request browser/client will add multipart content type\n              // along with multipart boundary , so for multipart request send\n              // content-type: undefined or send with multipart boundary if already known\n              options.body = data; // If url encoded data, this must not be the content type\n\n              if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n            } else {\n              options.body = JSON.stringify(data);\n            }\n\n            _context2.next = 9;\n            return fetchAndTrace(url, options);\n\n          case 9:\n            response = _context2.sent;\n\n            if (!response.ok) {\n              _context2.next = 12;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.json());\n\n          case 12:\n            debugLogResponse(response);\n            throw response;\n\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function patch(_x4) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar remove = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url) {\n    var data,\n        options_,\n        customOptions,\n        defaultOptions,\n        options,\n        response,\n        _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n            options_ = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {};\n            customOptions = _args3.length > 3 && _args3[3] !== undefined ? _args3[3] : {};\n            defaultOptions = {\n              mode: \"cors\",\n              headers: {\n                \"Content-Type\": \"application/json; charset=utf-8\"\n              }\n            }; // for multipart request browser/client will add multipart content type\n            // along with multipart boundary , so for multipart request send\n            // content-type: undefined or send with multipart boundary if already known\n\n            if (customOptions.useAPIKey) {\n              defaultOptions.headers = _objectSpread(_objectSpread({}, defaultOptions.headers), getApiKeyHeaders());\n            }\n\n            options = merge(defaultOptions, options_, {\n              method: \"DELETE\"\n            });\n\n            if (customOptions.isUrlEncodedData) {\n              // for multipart request browser/client will add multipart content type\n              // along with multipart boundary , so for multipart request send\n              // content-type: undefined or send with multipart boundary if already known\n              options.body = data; // If url encoded data, this must not be the content type\n\n              if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n            } else {\n              options.body = JSON.stringify(data);\n            }\n\n            _context3.next = 9;\n            return fetchAndTrace(url, options);\n\n          case 9:\n            response = _context3.sent;\n\n            if (!response.ok) {\n              _context3.next = 12;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", response.json());\n\n          case 12:\n            debugLogResponse(response);\n            throw response;\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function remove(_x5) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar generateJsonRPCObject = function generateJsonRPCObject(method, parameters) {\n  return {\n    jsonrpc: \"2.0\",\n    method: method,\n    id: 10,\n    params: parameters\n  };\n};\n\nvar promiseRace = function promiseRace(url, options) {\n  var timeout = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 60000;\n  return Promise.race([get(url, options), new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      reject(new Error(\"timed out\"));\n    }, timeout);\n  })]);\n};\n\nexport { clearAPIKey, clearEmbedHost, enableSentryTracing, gatewayAuthHeader, gatewayEmbedHostHeader, generateJsonRPCObject, get, getAPIKey, getEmbedHost, patch, post, promiseRace, promiseTimeout, remove, setAPIKey, setEmbedHost, setLogLevel };","map":{"version":3,"mappings":"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","names":["log","logLevel","getLogger","setLevel","levels","INFO","apiKey","embedHost","gatewayAuthHeader","gatewayEmbedHostHeader","sentry","tracingOrigins","tracingPaths","enableSentryTracing","_sentry","_tracingOrigins","_tracingPaths","push","setEmbedHost","embedHost_","clearEmbedHost","getEmbedHost","setAPIKey","apiKey_","clearAPIKey","getAPIKey","setLogLevel","level","fetchAndTrace","url","init","_url","URL","error","includes","origin","pathname","transaction","startTransaction","name","span","startChild","op","fetch","response","finish","getApiKeyHeaders","headers","debugLogResponse","info","status","concat","statusText","promiseTimeout","ms","promise","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","Error","race","get","options_","customOptions","defaultOptions","mode","useAPIKey","options","merge","method","ok","json","post","data","isUrlEncodedData","body","JSON","stringify","then","patch","remove","generateJsonRPCObject","parameters","jsonrpc","params","promiseRace"],"sources":["../src/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
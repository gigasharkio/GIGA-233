{"ast":null,"code":"var _jsxFileName = \"/Users/nicksampah/Repository/Three.js/Gigashark-v2/src/components/web3uikit/src/components/ConnectButton/ConnectButton.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { getEllipsisTxt } from '../../web3utils';\nimport { Blockie } from '../Blockie';\nimport { NativeBalance } from '../NativeBalance';\nimport { WalletModal } from '../WalletModal';\nimport ConnectButtonStyles from './ConnectButton.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  WrapperStyled,\n  TextStyled,\n  ConnectButtonStyled,\n  AccountInfoStyled,\n  AddressStyled,\n  BalanceBlockStyled\n} = ConnectButtonStyles;\n\nconst ConnectButton = _ref => {\n  _s();\n\n  let {\n    moralisAuth = true\n  } = _ref;\n  const {\n    account,\n    isAuthenticated,\n    logout,\n    deactivateWeb3,\n    enableWeb3,\n    isWeb3Enabled,\n    isInitialized,\n    isWeb3EnableLoading,\n    isAuthenticating,\n    authenticate,\n    Moralis\n  } = useMoralis();\n  const [isConnectModalOpen, setIsConnectModalOpen] = useState(false);\n  const [web3Status, setWeb3Status] = useState('disconnected');\n  useEffect(() => {\n    // to avoid problems in Next.JS apps because of window object\n    if (typeof window == 'undefined') return;\n    const connectorId = window.localStorage.getItem('connectorId');\n\n    if (!isWeb3Enabled && !isWeb3EnableLoading && connectorId && web3Status === 'disconnected') {\n      // @ts-ignore\n      setWeb3Status('pending');\n      enableWeb3({\n        provider: connectorId,\n        onSuccess: () => setWeb3Status('only_web3')\n      });\n    }\n  }, [isWeb3Enabled, isWeb3EnableLoading, web3Status]);\n  useEffect(() => {\n    // to avoid problems in Next.JS apps because of window object\n    if (typeof window == 'undefined') return;\n    const connectorId = window.localStorage.getItem('connectorId');\n\n    if (isInitialized && !isAuthenticated && !isAuthenticating && isWeb3Enabled && moralisAuth && web3Status === 'only_web3') {\n      authenticate({\n        provider: connectorId\n      });\n    }\n  }, [isAuthenticated, isInitialized, isWeb3Enabled, isAuthenticating]);\n  useEffect(() => {\n    Moralis.onAccountChanged(address => {\n      if (!address) disconnectWallet();\n    });\n  }, []);\n\n  async function disconnectWallet() {\n    // to avoid problems in Next.JS apps because of localStorage\n    if (typeof window == 'undefined') return;\n    window.localStorage.removeItem('connectorId');\n    setWeb3Status('disconnected');\n    deactivateWeb3();\n    if (isInitialized) logout();\n  }\n\n  if (!account || moralisAuth && isInitialized && !isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(WrapperStyled, {\n      children: [/*#__PURE__*/_jsxDEV(ConnectButtonStyled, {\n        onClick: () => setIsConnectModalOpen(true),\n        children: /*#__PURE__*/_jsxDEV(TextStyled, {\n          children: \"Connect Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(WalletModal, {\n        isOpened: isConnectModalOpen,\n        moralisAuth: moralisAuth,\n        setIsOpened: setIsConnectModalOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(WrapperStyled, {\n    children: /*#__PURE__*/_jsxDEV(AccountInfoStyled, {\n      children: [/*#__PURE__*/_jsxDEV(BalanceBlockStyled, {\n        children: /*#__PURE__*/_jsxDEV(NativeBalance, {\n          style: {\n            margin: '0 8px 0 12px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddressStyled, {\n        onClick: () => disconnectWallet(),\n        children: [/*#__PURE__*/_jsxDEV(TextStyled, {\n          style: {\n            marginRight: '8px'\n          },\n          children: account && getEllipsisTxt(account)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Blockie, {\n          scale: 2.5,\n          seed: account\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ConnectButton, \"cVtlkmyVfXWxKk/scnm/slnZ+5Y=\", false, function () {\n  return [useMoralis];\n});\n\n_c = ConnectButton;\nexport default ConnectButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConnectButton\");","map":{"version":3,"names":["React","useEffect","useState","useMoralis","getEllipsisTxt","Blockie","NativeBalance","WalletModal","ConnectButtonStyles","WrapperStyled","TextStyled","ConnectButtonStyled","AccountInfoStyled","AddressStyled","BalanceBlockStyled","ConnectButton","moralisAuth","account","isAuthenticated","logout","deactivateWeb3","enableWeb3","isWeb3Enabled","isInitialized","isWeb3EnableLoading","isAuthenticating","authenticate","Moralis","isConnectModalOpen","setIsConnectModalOpen","web3Status","setWeb3Status","window","connectorId","localStorage","getItem","provider","onSuccess","onAccountChanged","address","disconnectWallet","removeItem","margin","marginRight"],"sources":["/Users/nicksampah/Repository/Three.js/Gigashark-v2/src/components/web3uikit/src/components/ConnectButton/ConnectButton.tsx"],"sourcesContent":["import { default as MoralisType } from 'moralis/types';\nimport React, { useEffect, useState } from 'react';\nimport { useMoralis } from 'react-moralis';\nimport { getEllipsisTxt } from '../../web3utils';\nimport { Blockie } from '../Blockie';\nimport { NativeBalance } from '../NativeBalance';\nimport { WalletModal } from '../WalletModal';\nimport ConnectButtonStyles from './ConnectButton.styles';\nimport { ConnectButtonProps } from './types';\n\nconst {\n    WrapperStyled,\n    TextStyled,\n    ConnectButtonStyled,\n    AccountInfoStyled,\n    AddressStyled,\n    BalanceBlockStyled,\n} = ConnectButtonStyles;\n\ntype web3StatusType = 'disconnected' | 'pending' | 'only_web3';\n\nconst ConnectButton: React.FC<ConnectButtonProps> = ({\n    moralisAuth = true,\n}) => {\n    const {\n        account,\n        isAuthenticated,\n        logout,\n        deactivateWeb3,\n        enableWeb3,\n        isWeb3Enabled,\n        isInitialized,\n        isWeb3EnableLoading,\n        isAuthenticating,\n        authenticate,\n        Moralis,\n    } = useMoralis();\n\n    const [isConnectModalOpen, setIsConnectModalOpen] = useState(false);\n    const [web3Status, setWeb3Status] =\n        useState<web3StatusType>('disconnected');\n\n    useEffect(() => {\n        // to avoid problems in Next.JS apps because of window object\n        if (typeof window == 'undefined') return;\n\n        const connectorId = window.localStorage.getItem(\n            'connectorId',\n        ) as MoralisType.Web3ProviderType;\n        if (\n            !isWeb3Enabled &&\n            !isWeb3EnableLoading &&\n            connectorId &&\n            web3Status === 'disconnected'\n        ) {\n            // @ts-ignore\n            setWeb3Status('pending');\n            enableWeb3({\n                provider: connectorId,\n                onSuccess: () => setWeb3Status('only_web3'),\n            });\n        }\n    }, [isWeb3Enabled, isWeb3EnableLoading, web3Status]);\n\n    useEffect(() => {\n        // to avoid problems in Next.JS apps because of window object\n        if (typeof window == 'undefined') return;\n\n        const connectorId = window.localStorage.getItem(\n            'connectorId',\n        ) as MoralisType.Web3ProviderType;\n        if (\n            isInitialized &&\n            !isAuthenticated &&\n            !isAuthenticating &&\n            isWeb3Enabled &&\n            moralisAuth &&\n            web3Status === 'only_web3'\n        ) {\n            authenticate({ provider: connectorId });\n        }\n    }, [isAuthenticated, isInitialized, isWeb3Enabled, isAuthenticating]);\n\n    useEffect(() => {\n        Moralis.onAccountChanged((address) => {\n            if (!address) disconnectWallet();\n        });\n    }, []);\n\n    async function disconnectWallet() {\n        // to avoid problems in Next.JS apps because of localStorage\n        if (typeof window == 'undefined') return;\n\n        window.localStorage.removeItem('connectorId');\n        setWeb3Status('disconnected');\n\n        deactivateWeb3();\n        if (isInitialized) logout();\n    }\n\n    if (!account || (moralisAuth && isInitialized && !isAuthenticated)) {\n        return (\n            <WrapperStyled>\n                <ConnectButtonStyled\n                    onClick={() => setIsConnectModalOpen(true)}\n                >\n                    <TextStyled>Connect Wallet</TextStyled>\n                </ConnectButtonStyled>\n                <WalletModal\n                    isOpened={isConnectModalOpen}\n                    moralisAuth={moralisAuth}\n                    setIsOpened={setIsConnectModalOpen}\n                />\n            </WrapperStyled>\n        );\n    }\n\n    return (\n        <WrapperStyled>\n            <AccountInfoStyled>\n                <BalanceBlockStyled>\n                    <NativeBalance style={{ margin: '0 8px 0 12px' }} />\n                </BalanceBlockStyled>\n                <AddressStyled onClick={() => disconnectWallet()}>\n                    <TextStyled style={{ marginRight: '8px' }}>\n                        {account && getEllipsisTxt(account)}\n                    </TextStyled>\n                    <Blockie scale={2.5} seed={account} />\n                </AddressStyled>\n            </AccountInfoStyled>\n        </WrapperStyled>\n    );\n};\n\nexport default ConnectButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
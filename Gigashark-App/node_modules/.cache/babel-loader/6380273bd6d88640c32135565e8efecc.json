{"ast":null,"code":"import _regeneratorRuntime from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { BaseAdapter, ADAPTER_NAMESPACES, CHAIN_NAMESPACES, ADAPTER_CATEGORY, WALLET_ADAPTERS, ADAPTER_STATUS, WalletInitializationError, ADAPTER_EVENTS, log, getChainConfig, WalletLoginError } from '@web3auth/base';\n\nvar MetamaskAdapter = /*#__PURE__*/function (_BaseAdapter) {\n  _inherits(MetamaskAdapter, _BaseAdapter);\n\n  var _super = _createSuper(MetamaskAdapter);\n\n  function MetamaskAdapter() {\n    var _this;\n\n    _classCallCheck(this, MetamaskAdapter);\n\n    var adapterOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"adapterNamespace\", ADAPTER_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"currentChainNamespace\", CHAIN_NAMESPACES.EIP155);\n\n    _defineProperty(_assertThisInitialized(_this), \"type\", ADAPTER_CATEGORY.EXTERNAL);\n\n    _defineProperty(_assertThisInitialized(_this), \"name\", WALLET_ADAPTERS.METAMASK);\n\n    _defineProperty(_assertThisInitialized(_this), \"status\", ADAPTER_STATUS.NOT_READY);\n\n    _defineProperty(_assertThisInitialized(_this), \"rehydrated\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"metamaskProvider\", null);\n\n    _this.chainConfig = adapterOptions.chainConfig || null;\n    return _this;\n  }\n\n  _createClass(MetamaskAdapter, [{\n    key: \"provider\",\n    get: function get() {\n      if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n        return this.metamaskProvider;\n      }\n\n      return null;\n    },\n    set: function set(_) {\n      throw new Error(\"Not implemented\");\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkInitializationRequirements\", this).call(this);\n\n                _context.next = 3;\n                return detectEthereumProvider({\n                  mustBeMetaMask: true\n                });\n\n              case 3:\n                this.metamaskProvider = _context.sent;\n\n                if (this.metamaskProvider) {\n                  _context.next = 6;\n                  break;\n                }\n\n                throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n\n              case 6:\n                this.status = ADAPTER_STATUS.READY;\n                this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n                _context.prev = 8;\n                log.debug(\"initializing metamask adapter\");\n\n                if (!options.autoConnect) {\n                  _context.next = 14;\n                  break;\n                }\n\n                this.rehydrated = true;\n                _context.next = 14;\n                return this.connect();\n\n              case 14:\n                _context.next = 19;\n                break;\n\n              case 16:\n                _context.prev = 16;\n                _context.t0 = _context[\"catch\"](8);\n                this.emit(ADAPTER_EVENTS.ERRORED, _context.t0);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 16]]);\n      }));\n\n      function init(_x) {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"setAdapterSettings\",\n    value: function setAdapterSettings(_) {}\n  }, {\n    key: \"connect\",\n    value: function () {\n      var _connect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this2 = this;\n\n        var chainId;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _get(_getPrototypeOf(MetamaskAdapter.prototype), \"checkConnectionRequirements\", this).call(this); // set default to mainnet\n\n\n                if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n                this.status = ADAPTER_STATUS.CONNECTING;\n                this.emit(ADAPTER_EVENTS.CONNECTING, {\n                  adapter: WALLET_ADAPTERS.METAMASK\n                });\n\n                if (this.metamaskProvider) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n\n              case 6:\n                _context2.prev = 6;\n                _context2.next = 9;\n                return this.metamaskProvider.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 9:\n                chainId = this.metamaskProvider.chainId;\n\n                if (!(chainId !== this.chainConfig.chainId)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                _context2.next = 13;\n                return this.switchChain(this.chainConfig);\n\n              case 13:\n                this.status = ADAPTER_STATUS.CONNECTED;\n\n                if (this.provider) {\n                  _context2.next = 16;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n\n              case 16:\n                this.provider.once(\"disconnect\", function () {\n                  // ready to be connected again\n                  _this2.disconnect();\n                });\n                this.emit(ADAPTER_EVENTS.CONNECTED, {\n                  adapter: WALLET_ADAPTERS.METAMASK,\n                  reconnected: this.rehydrated\n                });\n                return _context2.abrupt(\"return\", this.provider);\n\n              case 21:\n                _context2.prev = 21;\n                _context2.t0 = _context2[\"catch\"](6);\n                // ready again to be connected\n                this.status = ADAPTER_STATUS.READY;\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.ERRORED, _context2.t0);\n                throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n\n              case 27:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[6, 21]]);\n      }));\n\n      function connect() {\n        return _connect.apply(this, arguments);\n      }\n\n      return connect;\n    }()\n  }, {\n    key: \"disconnect\",\n    value: function () {\n      var _disconnect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this$provider,\n            options,\n            _args3 = arguments;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                options = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {\n                  cleanup: false\n                };\n\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n\n              case 3:\n                (_this$provider = this.provider) === null || _this$provider === void 0 ? void 0 : _this$provider.removeAllListeners();\n\n                if (options.cleanup) {\n                  this.status = ADAPTER_STATUS.NOT_READY;\n                  this.metamaskProvider = null;\n                } else {\n                  // ready to be connected again\n                  this.status = ADAPTER_STATUS.READY;\n                }\n\n                this.rehydrated = false;\n                this.emit(ADAPTER_EVENTS.DISCONNECTED);\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function disconnect() {\n        return _disconnect.apply(this, arguments);\n      }\n\n      return disconnect;\n    }()\n  }, {\n    key: \"getUserInfo\",\n    value: function () {\n      var _getUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(this.status !== ADAPTER_STATUS.CONNECTED)) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n\n              case 2:\n                return _context4.abrupt(\"return\", {});\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUserInfo() {\n        return _getUserInfo.apply(this, arguments);\n      }\n\n      return getUserInfo;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(chainConfig) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (this.metamaskProvider) {\n                  _context5.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n\n              case 2:\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.metamaskProvider.request({\n                  method: \"wallet_switchEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId\n                  }]\n                });\n\n              case 5:\n                _context5.next = 15;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](2);\n\n                if (!(_context5.t0.code === 4902)) {\n                  _context5.next = 14;\n                  break;\n                }\n\n                _context5.next = 12;\n                return this.metamaskProvider.request({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId,\n                    chainName: chainConfig.displayName,\n                    rpcUrls: [chainConfig.rpcTarget]\n                  }]\n                });\n\n              case 12:\n                _context5.next = 15;\n                break;\n\n              case 14:\n                throw _context5.t0;\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 7]]);\n      }));\n\n      function switchChain(_x2) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }]);\n\n  return MetamaskAdapter;\n}(BaseAdapter);\n\nexport { MetamaskAdapter };","map":{"version":3,"mappings":"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","names":["MetamaskAdapter","constructor","adapterOptions","_defineProperty","ADAPTER_NAMESPACES","EIP155","CHAIN_NAMESPACES","ADAPTER_CATEGORY","EXTERNAL","WALLET_ADAPTERS","METAMASK","ADAPTER_STATUS","NOT_READY","chainConfig","status","CONNECTED","metamaskProvider","_","Error","options","detectEthereumProvider","mustBeMetaMask","WalletInitializationError","notInstalled","READY","emit","ADAPTER_EVENTS","log","debug","autoConnect","rehydrated","connect","ERRORED","setAdapterSettings","getChainConfig","CONNECTING","adapter","WalletLoginError","notConnectedError","request","method","chainId","switchChain","provider","once","disconnect","reconnected","connectionError","cleanup","disconnectionError","removeAllListeners","DISCONNECTED","params","switchError","code","chainName","displayName","rpcUrls","rpcTarget","BaseAdapter"],"sources":["../src/metamaskAdapter.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}
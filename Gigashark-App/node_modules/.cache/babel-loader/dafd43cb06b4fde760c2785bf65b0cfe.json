{"ast":null,"code":"import _classCallCheck from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _regeneratorRuntime from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/root/gshark/Three.js/Gigashark-v2/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { createFetchMiddleware, providerFromEngine, signMessage } from '@toruslabs/base-controllers';\nimport { createScaffoldMiddleware, createAsyncMiddleware, mergeMiddleware, JRPCEngine } from '@toruslabs/openlogin-jrpc';\nimport { CHAIN_NAMESPACES, log, WalletInitializationError, WalletLoginError, isHexStrict, getChainConfig } from '@web3auth/base';\nimport { BaseProvider } from '@web3auth/base-provider';\nimport { ethErrors } from 'eth-rpc-errors';\nimport { TransactionFactory } from '@ethereumjs/tx';\nimport { personalSign, signTypedData, SignTypedDataVersion, getEncryptionPublicKey, decrypt } from '@metamask/eth-sig-util';\nimport { privateToAddress, stripHexPrefix, addHexPrefix } from 'ethereumjs-util';\nimport Common, { Hardfork } from '@ethereumjs/common';\nimport BigNumber, { BigNumber as BigNumber$1 } from 'bignumber.js';\nimport { get } from '@toruslabs/http-helpers';\n\nfunction ownKeys$4(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$4(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$4(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$4(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction resemblesAddress(str) {\n  // hex prefix 2 + 20 bytes\n  return str.length === 2 + 20 * 2;\n}\n\nfunction createWalletMiddleware(_ref) {\n  var getAccounts = _ref.getAccounts,\n      getPrivateKey = _ref.getPrivateKey,\n      processDecryptMessage = _ref.processDecryptMessage,\n      processEncryptionPublicKey = _ref.processEncryptionPublicKey,\n      processEthSignMessage = _ref.processEthSignMessage,\n      processPersonalMessage = _ref.processPersonalMessage,\n      processTransaction = _ref.processTransaction,\n      processSignTransaction = _ref.processSignTransaction,\n      processTypedMessage = _ref.processTypedMessage,\n      processTypedMessageV3 = _ref.processTypedMessageV3,\n      processTypedMessageV4 = _ref.processTypedMessageV4;\n\n  if (!getAccounts) {\n    throw new Error(\"opts.getAccounts is required\");\n  } //\n  // utility\n  //\n\n  /**\n   * Validates the keyholder address, and returns a normalized (i.e. lowercase)\n   * copy of it.\n   *\n   * an error\n   */\n\n\n  function validateAndNormalizeKeyholder(_x, _x2) {\n    return _validateAndNormalizeKeyholder.apply(this, arguments);\n  } //\n  // account lookups\n  //\n\n\n  function _validateAndNormalizeKeyholder() {\n    _validateAndNormalizeKeyholder = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(address, req) {\n      var accounts, normalizedAccounts, normalizedAddress;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(typeof address === \"string\" && address.length > 0)) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 3;\n              return getAccounts(req);\n\n            case 3:\n              accounts = _context.sent;\n              normalizedAccounts = accounts.map(function (_address) {\n                return _address.toLowerCase();\n              });\n              normalizedAddress = address.toLowerCase();\n\n              if (!normalizedAccounts.includes(normalizedAddress)) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", normalizedAddress);\n\n            case 8:\n              throw ethErrors.rpc.invalidParams({\n                message: \"Invalid parameters: must provide an Ethereum address.\"\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _validateAndNormalizeKeyholder.apply(this, arguments);\n  }\n\n  function lookupAccounts(_x3, _x4) {\n    return _lookupAccounts.apply(this, arguments);\n  }\n\n  function _lookupAccounts() {\n    _lookupAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return getAccounts(req);\n\n            case 2:\n              res.result = _context2.sent;\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _lookupAccounts.apply(this, arguments);\n  }\n\n  function lookupDefaultAccount(_x5, _x6) {\n    return _lookupDefaultAccount.apply(this, arguments);\n  } //\n  // transaction signatures\n  //\n\n\n  function _lookupDefaultAccount() {\n    _lookupDefaultAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n      var accounts;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return getAccounts(req);\n\n            case 2:\n              accounts = _context3.sent;\n              res.result = accounts[0] || null;\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n    return _lookupDefaultAccount.apply(this, arguments);\n  }\n\n  function sendTransaction(_x7, _x8) {\n    return _sendTransaction.apply(this, arguments);\n  }\n\n  function _sendTransaction() {\n    _sendTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n      var txParams;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (processTransaction) {\n                _context4.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              txParams = req.params[0] || {\n                from: \"\"\n              };\n              _context4.next = 5;\n              return validateAndNormalizeKeyholder(txParams.from, req);\n\n            case 5:\n              txParams.from = _context4.sent;\n              _context4.next = 8;\n              return processTransaction(txParams, req);\n\n            case 8:\n              res.result = _context4.sent;\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _sendTransaction.apply(this, arguments);\n  }\n\n  function signTransaction(_x9, _x10) {\n    return _signTransaction.apply(this, arguments);\n  } //\n  // message signatures\n  //\n\n\n  function _signTransaction() {\n    _signTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n      var txParams;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (processSignTransaction) {\n                _context5.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              txParams = req.params[0] || {\n                from: \"\"\n              };\n              _context5.next = 5;\n              return validateAndNormalizeKeyholder(txParams.from, req);\n\n            case 5:\n              txParams.from = _context5.sent;\n              _context5.next = 8;\n              return processSignTransaction(txParams, req);\n\n            case 8:\n              res.result = _context5.sent;\n\n            case 9:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n    return _signTransaction.apply(this, arguments);\n  }\n\n  function ethSign(_x11, _x12) {\n    return _ethSign.apply(this, arguments);\n  }\n\n  function _ethSign() {\n    _ethSign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(req, res) {\n      var address, message, extraParams, msgParams;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (processEthSignMessage) {\n                _context6.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context6.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context6.sent;\n              message = req.params[1];\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$4(_objectSpread$4({}, extraParams), {}, {\n                from: address,\n                data: message\n              });\n              _context6.next = 10;\n              return processEthSignMessage(msgParams, req);\n\n            case 10:\n              res.result = _context6.sent;\n\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n    return _ethSign.apply(this, arguments);\n  }\n\n  function signTypedData(_x13, _x14) {\n    return _signTypedData.apply(this, arguments);\n  }\n\n  function _signTypedData() {\n    _signTypedData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(req, res) {\n      var message, address, version, extraParams, msgParams;\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (processTypedMessage) {\n                _context7.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              message = req.params[0];\n              _context7.next = 5;\n              return validateAndNormalizeKeyholder(req.params[1], req);\n\n            case 5:\n              address = _context7.sent;\n              version = \"V1\";\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$4(_objectSpread$4({}, extraParams), {}, {\n                from: address,\n                data: message\n              });\n              _context7.next = 11;\n              return processTypedMessage(msgParams, req, version);\n\n            case 11:\n              res.result = _context7.sent;\n\n            case 12:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n    return _signTypedData.apply(this, arguments);\n  }\n\n  function signTypedDataV3(_x15, _x16) {\n    return _signTypedDataV.apply(this, arguments);\n  }\n\n  function _signTypedDataV() {\n    _signTypedDataV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(req, res) {\n      var address, message, version, msgParams;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (processTypedMessageV3) {\n                _context8.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context8.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context8.sent;\n              message = req.params[1];\n              version = \"V3\";\n              msgParams = {\n                data: message,\n                from: address,\n                version: version\n              };\n              _context8.next = 10;\n              return processTypedMessageV3(msgParams, req, version);\n\n            case 10:\n              res.result = _context8.sent;\n\n            case 11:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n    return _signTypedDataV.apply(this, arguments);\n  }\n\n  function signTypedDataV4(_x17, _x18) {\n    return _signTypedDataV2.apply(this, arguments);\n  }\n\n  function _signTypedDataV2() {\n    _signTypedDataV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(req, res) {\n      var address, message, version, msgParams;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              if (processTypedMessageV4) {\n                _context9.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context9.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context9.sent;\n              message = req.params[1];\n              version = \"V4\";\n              msgParams = {\n                data: message,\n                from: address,\n                version: version\n              };\n              _context9.next = 10;\n              return processTypedMessageV4(msgParams, req, version);\n\n            case 10:\n              res.result = _context9.sent;\n\n            case 11:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n    return _signTypedDataV2.apply(this, arguments);\n  }\n\n  function personalSign(_x19, _x20) {\n    return _personalSign.apply(this, arguments);\n  }\n\n  function _personalSign() {\n    _personalSign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(req, res) {\n      var firstParam, secondParam, extraParams, address, message, warning, msgParams;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (processPersonalMessage) {\n                _context10.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              // process normally\n              firstParam = req.params[0];\n              secondParam = req.params[1]; // non-standard \"extraParams\" to be appended to our \"msgParams\" obj\n\n              extraParams = req.params[2] || {}; // We initially incorrectly ordered these parameters.\n              // To gracefully respect users who adopted this API early,\n              // we are currently gracefully recovering from the wrong param order\n              // when it is clearly identifiable.\n              //\n              // That means when the first param is definitely an address,\n              // and the second param is definitely not, but is hex.\n\n              if (resemblesAddress(firstParam) && !resemblesAddress(secondParam)) {\n                warning = \"The eth_personalSign method requires params ordered \";\n                warning += \"[message, address]. This was previously handled incorrectly, \";\n                warning += \"and has been corrected automatically. \";\n                warning += \"Please switch this param order for smooth behavior in the future.\";\n                res.warning = warning;\n                address = firstParam;\n                message = secondParam;\n              } else {\n                message = firstParam;\n                address = secondParam;\n              }\n\n              _context10.next = 8;\n              return validateAndNormalizeKeyholder(address, req);\n\n            case 8:\n              address = _context10.sent;\n              msgParams = _objectSpread$4(_objectSpread$4({}, extraParams), {}, {\n                from: address,\n                data: message\n              }); // eslint-disable-next-line require-atomic-updates\n\n              _context10.next = 12;\n              return processPersonalMessage(msgParams, req);\n\n            case 12:\n              res.result = _context10.sent;\n\n            case 13:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n    return _personalSign.apply(this, arguments);\n  }\n\n  function encryptionPublicKey(_x21, _x22) {\n    return _encryptionPublicKey.apply(this, arguments);\n  }\n\n  function _encryptionPublicKey() {\n    _encryptionPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(req, res) {\n      var address;\n      return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              if (processEncryptionPublicKey) {\n                _context11.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              _context11.next = 4;\n              return validateAndNormalizeKeyholder(req.params[0], req);\n\n            case 4:\n              address = _context11.sent;\n              _context11.next = 7;\n              return processEncryptionPublicKey(address, req);\n\n            case 7:\n              res.result = _context11.sent;\n\n            case 8:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n    return _encryptionPublicKey.apply(this, arguments);\n  }\n\n  function decryptMessage(_x23, _x24) {\n    return _decryptMessage.apply(this, arguments);\n  }\n\n  function _decryptMessage() {\n    _decryptMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(req, res) {\n      var ciphertext, address, extraParams, msgParams;\n      return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              if (processDecryptMessage) {\n                _context12.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              ciphertext = req.params[0];\n              _context12.next = 5;\n              return validateAndNormalizeKeyholder(req.params[1], req);\n\n            case 5:\n              address = _context12.sent;\n              extraParams = req.params[2] || {};\n              msgParams = _objectSpread$4(_objectSpread$4({}, extraParams), {}, {\n                from: address,\n                data: ciphertext\n              });\n              res.result = processDecryptMessage(msgParams, req);\n\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n    return _decryptMessage.apply(this, arguments);\n  }\n\n  function fetchPrivateKey(_x25, _x26) {\n    return _fetchPrivateKey.apply(this, arguments);\n  }\n\n  function _fetchPrivateKey() {\n    _fetchPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(req, res) {\n      return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              if (getPrivateKey) {\n                _context13.next = 2;\n                break;\n              }\n\n              throw ethErrors.rpc.methodNotSupported();\n\n            case 2:\n              res.result = getPrivateKey(req);\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n    return _fetchPrivateKey.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    // account lookups\n    eth_accounts: createAsyncMiddleware(lookupAccounts),\n    eth_private_key: createAsyncMiddleware(fetchPrivateKey),\n    eth_coinbase: createAsyncMiddleware(lookupDefaultAccount),\n    // tx signatures\n    eth_sendTransaction: createAsyncMiddleware(sendTransaction),\n    eth_signTransaction: createAsyncMiddleware(signTransaction),\n    // message signatures\n    eth_sign: createAsyncMiddleware(ethSign),\n    eth_signTypedData: createAsyncMiddleware(signTypedData),\n    eth_signTypedData_v3: createAsyncMiddleware(signTypedDataV3),\n    eth_signTypedData_v4: createAsyncMiddleware(signTypedDataV4),\n    personal_sign: createAsyncMiddleware(personalSign),\n    eth_getEncryptionPublicKey: createAsyncMiddleware(encryptionPublicKey),\n    eth_decrypt: createAsyncMiddleware(decryptMessage)\n  });\n}\n\nfunction createEthMiddleware(providerHandlers) {\n  var getAccounts = providerHandlers.getAccounts,\n      getPrivateKey = providerHandlers.getPrivateKey,\n      processTransaction = providerHandlers.processTransaction,\n      processSignTransaction = providerHandlers.processSignTransaction,\n      processEthSignMessage = providerHandlers.processEthSignMessage,\n      processTypedMessage = providerHandlers.processTypedMessage,\n      processTypedMessageV3 = providerHandlers.processTypedMessageV3,\n      processTypedMessageV4 = providerHandlers.processTypedMessageV4,\n      processPersonalMessage = providerHandlers.processPersonalMessage,\n      processEncryptionPublicKey = providerHandlers.processEncryptionPublicKey,\n      processDecryptMessage = providerHandlers.processDecryptMessage;\n  var ethMiddleware = mergeMiddleware([createScaffoldMiddleware({\n    eth_syncing: false\n  }), createWalletMiddleware({\n    getAccounts: getAccounts,\n    getPrivateKey: getPrivateKey,\n    processTransaction: processTransaction,\n    processEthSignMessage: processEthSignMessage,\n    processSignTransaction: processSignTransaction,\n    processTypedMessage: processTypedMessage,\n    processTypedMessageV3: processTypedMessageV3,\n    processTypedMessageV4: processTypedMessageV4,\n    processPersonalMessage: processPersonalMessage,\n    processEncryptionPublicKey: processEncryptionPublicKey,\n    processDecryptMessage: processDecryptMessage\n  })]);\n  return ethMiddleware;\n}\n\nfunction createChainSwitchMiddleware(_ref) {\n  var addChain = _ref.addChain,\n      switchChain = _ref.switchChain;\n\n  function addNewChain(_x27, _x28) {\n    return _addNewChain.apply(this, arguments);\n  }\n\n  function _addNewChain() {\n    _addNewChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(req, res) {\n      var _req$params, chainParams;\n\n      return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              chainParams = (_req$params = req.params) !== null && _req$params !== void 0 && _req$params.length ? req.params[0] : undefined;\n\n              if (chainParams) {\n                _context14.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chain params\");\n\n            case 3:\n              if (chainParams.chainId) {\n                _context14.next = 5;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chainId in chainParams\");\n\n            case 5:\n              if (!(!chainParams.rpcUrls || chainParams.rpcUrls.length === 0)) {\n                _context14.next = 7;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing rpcUrls in chainParams\");\n\n            case 7:\n              if (chainParams.nativeCurrency) {\n                _context14.next = 9;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing nativeCurrency in chainParams\");\n\n            case 9:\n              _context14.next = 11;\n              return addChain(chainParams);\n\n            case 11:\n              res.result = _context14.sent;\n\n            case 12:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n    return _addNewChain.apply(this, arguments);\n  }\n\n  function updateChain(_x29, _x30) {\n    return _updateChain.apply(this, arguments);\n  }\n\n  function _updateChain() {\n    _updateChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(req, res) {\n      var _req$params2, chainParams;\n\n      return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              chainParams = (_req$params2 = req.params) !== null && _req$params2 !== void 0 && _req$params2.length ? req.params[0] : undefined;\n\n              if (chainParams) {\n                _context15.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing chainId\");\n\n            case 3:\n              _context15.next = 5;\n              return switchChain(chainParams);\n\n            case 5:\n              res.result = _context15.sent;\n\n            case 6:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n    return _updateChain.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_addEthereumChain: createAsyncMiddleware(addNewChain),\n    wallet_switchEthereumChain: createAsyncMiddleware(updateChain)\n  });\n}\n\nfunction createAccountMiddleware(_ref2) {\n  var updatePrivatekey = _ref2.updatePrivatekey;\n\n  function updateAccount(_x31, _x32) {\n    return _updateAccount.apply(this, arguments);\n  }\n\n  function _updateAccount() {\n    _updateAccount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(req, res) {\n      var _req$params3, accountParams;\n\n      return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              accountParams = (_req$params3 = req.params) !== null && _req$params3 !== void 0 && _req$params3.length ? req.params[0] : undefined;\n\n              if (accountParams !== null && accountParams !== void 0 && accountParams.privateKey) {\n                _context16.next = 3;\n                break;\n              }\n\n              throw ethErrors.rpc.invalidParams(\"Missing privateKey\");\n\n            case 3:\n              _context16.next = 5;\n              return updatePrivatekey(accountParams);\n\n            case 5:\n              res.result = _context16.sent;\n\n            case 6:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n    return _updateAccount.apply(this, arguments);\n  }\n\n  return createScaffoldMiddleware({\n    wallet_updateAccount: createAsyncMiddleware(updateAccount)\n  });\n} // #endregion account middlewares\n\n\nfunction createChainIdMiddleware(chainId) {\n  return function (req, res, next, end) {\n    if (req.method === \"eth_chainId\") {\n      res.result = chainId;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createProviderConfigMiddleware(providerConfig) {\n  return function (req, res, next, end) {\n    if (req.method === \"eth_provider_config\") {\n      res.result = providerConfig;\n      return end();\n    }\n\n    return next();\n  };\n}\n\nfunction createJsonRpcClient(providerConfig) {\n  var chainId = providerConfig.chainId,\n      rpcTarget = providerConfig.rpcTarget;\n  var fetchMiddleware = createFetchMiddleware({\n    rpcTarget: rpcTarget\n  });\n  var networkMiddleware = mergeMiddleware([createChainIdMiddleware(chainId), createProviderConfigMiddleware(providerConfig), fetchMiddleware]);\n  return {\n    networkMiddleware: networkMiddleware,\n    fetchMiddleware: fetchMiddleware\n  };\n}\n\nfunction getProviderHandlers$1(_ref) {\n  var connector = _ref.connector;\n  return {\n    getPrivateKey: function () {\n      var _getPrivateKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17() {\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17);\n      }));\n\n      function getPrivateKey() {\n        return _getPrivateKey.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    getAccounts: function () {\n      var _getAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(_) {\n        var accounts;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                accounts = connector.accounts;\n\n                if (!(accounts && accounts.length)) {\n                  _context18.next = 3;\n                  break;\n                }\n\n                return _context18.abrupt(\"return\", accounts);\n\n              case 3:\n                throw new Error(\"Failed to get accounts\");\n\n              case 4:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18);\n      }));\n\n      function getAccounts(_x33) {\n        return _getAccounts.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    processTransaction: function () {\n      var _processTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(txParams, _) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                _context19.next = 2;\n                return connector.sendTransaction(txParams);\n\n              case 2:\n                result = _context19.sent;\n                return _context19.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19);\n      }));\n\n      function processTransaction(_x34, _x35) {\n        return _processTransaction.apply(this, arguments);\n      }\n\n      return processTransaction;\n    }(),\n    processSignTransaction: function () {\n      var _processSignTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(txParams, _) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                _context20.next = 2;\n                return connector.signTransaction(txParams);\n\n              case 2:\n                result = _context20.sent;\n                return _context20.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20);\n      }));\n\n      function processSignTransaction(_x36, _x37) {\n        return _processSignTransaction.apply(this, arguments);\n      }\n\n      return processSignTransaction;\n    }(),\n    processEthSignMessage: function () {\n      var _processEthSignMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(msgParams, _) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                _context21.next = 2;\n                return connector.signMessage([msgParams.from, msgParams.data]);\n\n              case 2:\n                result = _context21.sent;\n                return _context21.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21);\n      }));\n\n      function processEthSignMessage(_x38, _x39) {\n        return _processEthSignMessage.apply(this, arguments);\n      }\n\n      return processEthSignMessage;\n    }(),\n    processPersonalMessage: function () {\n      var _processPersonalMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(msgParams, _) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                _context22.next = 2;\n                return connector.signPersonalMessage([msgParams.data, msgParams.from]);\n\n              case 2:\n                result = _context22.sent;\n                return _context22.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22);\n      }));\n\n      function processPersonalMessage(_x40, _x41) {\n        return _processPersonalMessage.apply(this, arguments);\n      }\n\n      return processPersonalMessage;\n    }(),\n    processTypedMessage: function () {\n      var _processTypedMessage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(msgParams, _) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                _context23.next = 2;\n                return connector.signTypedData([msgParams.from, msgParams.data]);\n\n              case 2:\n                result = _context23.sent;\n                return _context23.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23);\n      }));\n\n      function processTypedMessage(_x42, _x43) {\n        return _processTypedMessage.apply(this, arguments);\n      }\n\n      return processTypedMessage;\n    }(),\n    processTypedMessageV3: function () {\n      var _processTypedMessageV = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(msgParams) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                _context24.next = 2;\n                return connector.signTypedData([msgParams.from, msgParams.data]);\n\n              case 2:\n                result = _context24.sent;\n                return _context24.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24);\n      }));\n\n      function processTypedMessageV3(_x44) {\n        return _processTypedMessageV.apply(this, arguments);\n      }\n\n      return processTypedMessageV3;\n    }(),\n    processTypedMessageV4: function () {\n      var _processTypedMessageV2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(msgParams) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                _context25.next = 2;\n                return connector.signTypedData([msgParams.from, msgParams.data]);\n\n              case 2:\n                result = _context25.sent;\n                return _context25.abrupt(\"return\", result);\n\n              case 4:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25);\n      }));\n\n      function processTypedMessageV4(_x45) {\n        return _processTypedMessageV2.apply(this, arguments);\n      }\n\n      return processTypedMessageV4;\n    }(),\n    processEncryptionPublicKey: function () {\n      var _processEncryptionPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(_) {\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                throw ethErrors.rpc.methodNotSupported();\n\n              case 1:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26);\n      }));\n\n      function processEncryptionPublicKey(_x46) {\n        return _processEncryptionPublicKey.apply(this, arguments);\n      }\n\n      return processEncryptionPublicKey;\n    }(),\n    processDecryptMessage: function processDecryptMessage(_) {\n      throw ethErrors.rpc.methodNotSupported();\n    }\n  };\n}\n\nfunction ownKeys$3(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$3(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$3(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$3(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar WalletConnectProvider = /*#__PURE__*/function (_BaseProvider) {\n  _inherits(WalletConnectProvider, _BaseProvider);\n\n  var _super = _createSuper(WalletConnectProvider);\n\n  function WalletConnectProvider(_ref) {\n    var _this;\n\n    _classCallCheck(this, WalletConnectProvider);\n\n    var config = _ref.config,\n        state = _ref.state,\n        connector = _ref.connector;\n    _this = _super.call(this, {\n      config: {\n        chainConfig: _objectSpread$3(_objectSpread$3({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        }),\n        skipLookupNetwork: !!config.skipLookupNetwork\n      },\n      state: _objectSpread$3(_objectSpread$3({}, state || {}), {}, {\n        chainId: \"loading\",\n        accounts: []\n      })\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"connector\", null);\n\n    _this.connector = connector || null;\n    return _this;\n  }\n\n  _createClass(WalletConnectProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27() {\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                if (this.connector) {\n                  _context27.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n                  code: 4902\n                });\n\n              case 2:\n                _context27.next = 4;\n                return this.setupProvider(this.connector);\n\n              case 4:\n                return _context27.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(connector) {\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                this.onConnectorStateUpdate(connector);\n                _context28.next = 3;\n                return this.setupEngine(connector);\n\n              case 3:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function setupProvider(_x47) {\n        return _setupProvider.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(_ref2) {\n        var chainId, _ref2$addChain, addChain, _ref2$lookup, lookup, currentChainConfig, rpcTarget, displayName;\n\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                chainId = _ref2.chainId, _ref2$addChain = _ref2.addChain, addChain = _ref2$addChain === void 0 ? true : _ref2$addChain, _ref2$lookup = _ref2.lookup, lookup = _ref2$lookup === void 0 ? true : _ref2$lookup;\n\n                if (this.connector) {\n                  _context29.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Connector is not initialized, pass wallet connect connector in constructor\",\n                  code: 4902\n                });\n\n              case 3:\n                currentChainConfig = this.getChainConfig(chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                rpcTarget = currentChainConfig.rpcTarget, displayName = currentChainConfig.displayName;\n\n                if (!addChain) {\n                  _context29.next = 15;\n                  break;\n                }\n\n                _context29.prev = 7;\n                _context29.next = 10;\n                return this.connector.sendCustomRequest({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainId,\n                    chainName: displayName,\n                    rpcUrls: [rpcTarget]\n                  }]\n                });\n\n              case 10:\n                _context29.next = 15;\n                break;\n\n              case 12:\n                _context29.prev = 12;\n                _context29.t0 = _context29[\"catch\"](7);\n                log.error(_context29.t0);\n\n              case 15:\n                _context29.prev = 15;\n                _context29.next = 18;\n                return this.connector.sendCustomRequest({\n                  method: \"wallet_switchEthereumChain\",\n                  params: [{\n                    chainId: chainId\n                  }]\n                });\n\n              case 18:\n                _context29.next = 25;\n                break;\n\n              case 20:\n                _context29.prev = 20;\n                _context29.t1 = _context29[\"catch\"](15);\n                log.error(_context29.t1); // ignore this error because metamask & others return provider.result as null\n                // wallet connect thinks this is wrong\n\n                if (!(_context29.t1.message !== \"JSON RPC response format is invalid\")) {\n                  _context29.next = 25;\n                  break;\n                }\n\n                throw _context29.t1;\n\n              case 25:\n                this.configure({\n                  chainConfig: currentChainConfig\n                });\n\n                if (!lookup) {\n                  _context29.next = 29;\n                  break;\n                }\n\n                _context29.next = 29;\n                return this.lookupNetwork(this.connector);\n\n              case 29:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this, [[7, 12], [15, 20]]);\n      }));\n\n      function switchChain(_x48) {\n        return _switchChain.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"addChain\",\n    value: function () {\n      var _addChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(chainConfig) {\n        var rpcTarget, displayName;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                if (this.connector) {\n                  _context30.next = 2;\n                  break;\n                }\n\n                throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n              case 2:\n                rpcTarget = chainConfig.rpcTarget, displayName = chainConfig.displayName;\n                _context30.prev = 3;\n                _context30.next = 6;\n                return this.connector.sendCustomRequest({\n                  method: \"wallet_addEthereumChain\",\n                  params: [{\n                    chainId: chainConfig.chainId,\n                    chainName: displayName,\n                    rpcUrls: [rpcTarget]\n                  }]\n                });\n\n              case 6:\n                _get(_getPrototypeOf(WalletConnectProvider.prototype), \"addChain\", this).call(this, chainConfig);\n\n                _context30.next = 13;\n                break;\n\n              case 9:\n                _context30.prev = 9;\n                _context30.t0 = _context30[\"catch\"](3);\n                log.error(_context30.t0);\n                throw _context30.t0;\n\n              case 13:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this, [[3, 9]]);\n      }));\n\n      function addChain(_x49) {\n        return _addChain.apply(this, arguments);\n      }\n\n      return addChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(connector) {\n        var chainId, connectedHexChainId;\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                if (connector.connected) {\n                  _context31.next = 2;\n                  break;\n                }\n\n                throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n              case 2:\n                if (this.provider) {\n                  _context31.next = 4;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 4:\n                chainId = this.config.chainConfig.chainId;\n                connectedHexChainId = isHexStrict(connector.chainId.toString()) ? connector.chainId : \"0x\".concat(connector.chainId.toString(16));\n\n                if (!(chainId !== connectedHexChainId)) {\n                  _context31.next = 8;\n                  break;\n                }\n\n                throw WalletInitializationError.rpcConnectionError(\"Invalid network, net_version is: \".concat(connectedHexChainId, \", expected: \").concat(chainId));\n\n              case 8:\n                this.provider.emit(\"connect\", {\n                  chainId: chainId\n                });\n                this.provider.emit(\"chainChanged\", this.state.chainId);\n                return _context31.abrupt(\"return\", connectedHexChainId);\n\n              case 11:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function lookupNetwork(_x50) {\n        return _lookupNetwork.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"setupEngine\",\n    value: function () {\n      var _setupEngine = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32(connector) {\n        var providerHandlers, ethMiddleware, engine, _createJsonRpcClient, networkMiddleware, provider;\n\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                providerHandlers = getProviderHandlers$1({\n                  connector: connector\n                });\n                this.update({\n                  accounts: connector.accounts || []\n                });\n                ethMiddleware = createEthMiddleware(providerHandlers);\n                engine = new JRPCEngine();\n                _createJsonRpcClient = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient.networkMiddleware;\n                engine.push(ethMiddleware);\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n\n                if (this.config.skipLookupNetwork) {\n                  _context32.next = 12;\n                  break;\n                }\n\n                _context32.next = 12;\n                return this.lookupNetwork(connector);\n\n              case 12:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function setupEngine(_x51) {\n        return _setupEngine.apply(this, arguments);\n      }\n\n      return setupEngine;\n    }()\n  }, {\n    key: \"onConnectorStateUpdate\",\n    value: function () {\n      var _onConnectorStateUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(connector) {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                connector.on(\"session_update\", /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(error, payload) {\n                    var _payload$params$, accounts, connectedChainId, rpcUrl, connectedHexChainId, maybeConfig;\n\n                    return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n                      while (1) {\n                        switch (_context33.prev = _context33.next) {\n                          case 0:\n                            if (_this2.provider) {\n                              _context33.next = 2;\n                              break;\n                            }\n\n                            throw WalletLoginError.notConnectedError(\"Wallet connect connector is not connected\");\n\n                          case 2:\n                            if (!error) {\n                              _context33.next = 5;\n                              break;\n                            }\n\n                            _this2.provider.emit(\"error\", error);\n\n                            return _context33.abrupt(\"return\");\n\n                          case 5:\n                            _payload$params$ = payload.params[0], accounts = _payload$params$.accounts, connectedChainId = _payload$params$.chainId, rpcUrl = _payload$params$.rpcUrl; // Check if accounts changed and trigger event\n\n                            if (accounts !== null && accounts !== void 0 && accounts.length && _this2.state.accounts[0] !== accounts[0]) {\n                              _this2.update({\n                                accounts: accounts\n                              }); // await this.setupEngine(connector);\n\n\n                              _this2.provider.emit(\"accountsChanged\", accounts);\n                            }\n\n                            connectedHexChainId = \"0x\".concat(connectedChainId.toString(16)); // Check if chainId changed and trigger event\n\n                            if (!(connectedChainId && _this2.state.chainId !== connectedHexChainId)) {\n                              _context33.next = 13;\n                              break;\n                            }\n\n                            maybeConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, connectedChainId) || {}; // Handle rpcUrl update\n\n                            _this2.configure({\n                              chainConfig: _objectSpread$3(_objectSpread$3({}, maybeConfig), {}, {\n                                chainId: connectedHexChainId,\n                                rpcTarget: rpcUrl,\n                                chainNamespace: CHAIN_NAMESPACES.EIP155\n                              })\n                            });\n\n                            _context33.next = 13;\n                            return _this2.setupEngine(connector);\n\n                          case 13:\n                          case \"end\":\n                            return _context33.stop();\n                        }\n                      }\n                    }, _callee33);\n                  }));\n\n                  return function (_x53, _x54) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 1:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34);\n      }));\n\n      function onConnectorStateUpdate(_x52) {\n        return _onConnectorStateUpdate.apply(this, arguments);\n      }\n\n      return onConnectorStateUpdate;\n    }()\n  }]);\n\n  return WalletConnectProvider;\n}(BaseProvider);\n\n_defineProperty(WalletConnectProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(params) {\n    var providerFactory;\n    return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n      while (1) {\n        switch (_context35.prev = _context35.next) {\n          case 0:\n            providerFactory = new WalletConnectProvider({\n              config: {\n                chainConfig: params.chainConfig,\n                skipLookupNetwork: params.skipLookupNetwork\n              }\n            });\n            _context35.next = 3;\n            return providerFactory.setupProvider(params.connector);\n\n          case 3:\n            return _context35.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context35.stop();\n        }\n      }\n    }, _callee35);\n  }));\n\n  return function (_x55) {\n    return _ref4.apply(this, arguments);\n  };\n}());\n\nfunction signTx(_x56, _x57, _x58) {\n  return _signTx.apply(this, arguments);\n}\n\nfunction _signTx() {\n  _signTx = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee66(txParams, privKey, txFormatter) {\n    var finalTxParams, common, unsignedEthTx, signedTx;\n    return _regeneratorRuntime().wrap(function _callee66$(_context66) {\n      while (1) {\n        switch (_context66.prev = _context66.next) {\n          case 0:\n            _context66.next = 2;\n            return txFormatter.formatTransaction(txParams);\n\n          case 2:\n            finalTxParams = _context66.sent;\n            _context66.next = 5;\n            return txFormatter.getCommonConfiguration();\n\n          case 5:\n            common = _context66.sent;\n            unsignedEthTx = TransactionFactory.fromTxData(finalTxParams, {\n              common: common\n            });\n            signedTx = unsignedEthTx.sign(Buffer.from(privKey, \"hex\")).serialize();\n            return _context66.abrupt(\"return\", signedTx);\n\n          case 9:\n          case \"end\":\n            return _context66.stop();\n        }\n      }\n    }, _callee66);\n  }));\n  return _signTx.apply(this, arguments);\n}\n\nfunction getProviderHandlers(_ref) {\n  var txFormatter = _ref.txFormatter,\n      privKey = _ref.privKey,\n      getProviderEngineProxy = _ref.getProviderEngineProxy;\n  return {\n    getAccounts: function () {\n      var _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36(_) {\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                return _context36.abrupt(\"return\", [\"0x\".concat(privateToAddress(Buffer.from(privKey, \"hex\")).toString(\"hex\"))]);\n\n              case 1:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36);\n      }));\n\n      function getAccounts(_x59) {\n        return _getAccounts2.apply(this, arguments);\n      }\n\n      return getAccounts;\n    }(),\n    getPrivateKey: function () {\n      var _getPrivateKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37(_) {\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                return _context37.abrupt(\"return\", privKey);\n\n              case 1:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37);\n      }));\n\n      function getPrivateKey(_x60) {\n        return _getPrivateKey2.apply(this, arguments);\n      }\n\n      return getPrivateKey;\n    }(),\n    processTransaction: function () {\n      var _processTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38(txParams, _) {\n        var providerEngineProxy, signedTx, txHash;\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                providerEngineProxy = getProviderEngineProxy();\n\n                if (providerEngineProxy) {\n                  _context38.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 3:\n                _context38.next = 5;\n                return signTx(txParams, privKey, txFormatter);\n\n              case 5:\n                signedTx = _context38.sent;\n                _context38.next = 8;\n                return providerEngineProxy.request({\n                  method: \"eth_sendRawTransaction\",\n                  params: [\"0x\".concat(signedTx.toString(\"hex\"))]\n                });\n\n              case 8:\n                txHash = _context38.sent;\n                return _context38.abrupt(\"return\", txHash);\n\n              case 10:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38);\n      }));\n\n      function processTransaction(_x61, _x62) {\n        return _processTransaction2.apply(this, arguments);\n      }\n\n      return processTransaction;\n    }(),\n    processSignTransaction: function () {\n      var _processSignTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39(txParams, _) {\n        var providerEngineProxy, signedTx;\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                providerEngineProxy = getProviderEngineProxy();\n\n                if (providerEngineProxy) {\n                  _context39.next = 3;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 3:\n                _context39.next = 5;\n                return signTx(txParams, privKey, txFormatter);\n\n              case 5:\n                signedTx = _context39.sent;\n                return _context39.abrupt(\"return\", \"0x\".concat(signedTx.toString(\"hex\")));\n\n              case 7:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39);\n      }));\n\n      function processSignTransaction(_x63, _x64) {\n        return _processSignTransaction2.apply(this, arguments);\n      }\n\n      return processSignTransaction;\n    }(),\n    processEthSignMessage: function () {\n      var _processEthSignMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40(msgParams, _) {\n        var rawMessageSig;\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                rawMessageSig = signMessage(privKey, msgParams.data);\n                return _context40.abrupt(\"return\", rawMessageSig);\n\n              case 2:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40);\n      }));\n\n      function processEthSignMessage(_x65, _x66) {\n        return _processEthSignMessage2.apply(this, arguments);\n      }\n\n      return processEthSignMessage;\n    }(),\n    processPersonalMessage: function () {\n      var _processPersonalMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = personalSign({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data\n                });\n                return _context41.abrupt(\"return\", sig);\n\n              case 3:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41);\n      }));\n\n      function processPersonalMessage(_x67, _x68) {\n        return _processPersonalMessage2.apply(this, arguments);\n      }\n\n      return processPersonalMessage;\n    }(),\n    processTypedMessage: function () {\n      var _processTypedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                log.debug(\"processTypedMessage\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V1\n                });\n                return _context42.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42);\n      }));\n\n      function processTypedMessage(_x69, _x70) {\n        return _processTypedMessage2.apply(this, arguments);\n      }\n\n      return processTypedMessage;\n    }(),\n    processTypedMessageV3: function () {\n      var _processTypedMessageV3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                log.debug(\"processTypedMessageV3\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V3\n                });\n                return _context43.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43);\n      }));\n\n      function processTypedMessageV3(_x71, _x72) {\n        return _processTypedMessageV3.apply(this, arguments);\n      }\n\n      return processTypedMessageV3;\n    }(),\n    processTypedMessageV4: function () {\n      var _processTypedMessageV4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(msgParams, _) {\n        var privKeyBuffer, sig;\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                log.debug(\"processTypedMessageV4\", msgParams);\n                privKeyBuffer = Buffer.from(privKey, \"hex\");\n                sig = signTypedData({\n                  privateKey: privKeyBuffer,\n                  data: msgParams.data,\n                  version: SignTypedDataVersion.V4\n                });\n                return _context44.abrupt(\"return\", sig);\n\n              case 4:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44);\n      }));\n\n      function processTypedMessageV4(_x73, _x74) {\n        return _processTypedMessageV4.apply(this, arguments);\n      }\n\n      return processTypedMessageV4;\n    }(),\n    processEncryptionPublicKey: function () {\n      var _processEncryptionPublicKey2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(address, _) {\n        return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                log.info(\"processEncryptionPublicKey\", address);\n                return _context45.abrupt(\"return\", getEncryptionPublicKey(privKey));\n\n              case 2:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45);\n      }));\n\n      function processEncryptionPublicKey(_x75, _x76) {\n        return _processEncryptionPublicKey2.apply(this, arguments);\n      }\n\n      return processEncryptionPublicKey;\n    }(),\n    processDecryptMessage: function processDecryptMessage(msgParams, _) {\n      log.info(\"processDecryptMessage\", msgParams);\n      var stripped = stripHexPrefix(msgParams.data);\n      var buff = Buffer.from(stripped, \"hex\");\n      var decrypted = decrypt({\n        encryptedData: JSON.parse(buff.toString(\"utf8\")),\n        privateKey: privKey\n      });\n      return decrypted;\n    }\n  };\n}\n\nvar BIG_NUMBER_WEI_MULTIPLIER = new BigNumber(\"1e18\");\nvar BIG_NUMBER_GWEI_MULTIPLIER = new BigNumber(\"1e9\");\nvar BIG_NUMBER_ETH_MULTIPLIER = new BigNumber(\"1\"); // Setter Maps\n\nvar toBigNumber = {\n  hex: function hex(n) {\n    return typeof n === \"string\" ? new BigNumber(stripHexPrefix(n), 16) : new BigNumber(n, 16);\n  },\n  dec: function dec(n) {\n    return new BigNumber(n, 10);\n  }\n};\nvar toNormalizedDenomination = {\n  WEI: function WEI(bigNumber) {\n    return bigNumber.div(BIG_NUMBER_WEI_MULTIPLIER);\n  },\n  GWEI: function GWEI(bigNumber) {\n    return bigNumber.div(BIG_NUMBER_GWEI_MULTIPLIER);\n  },\n  ETH: function ETH(bigNumber) {\n    return bigNumber.div(BIG_NUMBER_ETH_MULTIPLIER);\n  }\n};\nvar toSpecifiedDenomination = {\n  WEI: function WEI(bigNumber) {\n    return bigNumber.times(BIG_NUMBER_WEI_MULTIPLIER).dp(0, BigNumber.ROUND_HALF_UP);\n  },\n  GWEI: function GWEI(bigNumber) {\n    return bigNumber.times(BIG_NUMBER_GWEI_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP);\n  },\n  ETH: function ETH(bigNumber) {\n    return bigNumber.times(BIG_NUMBER_ETH_MULTIPLIER).dp(9, BigNumber.ROUND_HALF_UP);\n  }\n};\nvar baseChange = {\n  hex: function hex(n) {\n    return n.toString(16);\n  },\n  dec: function dec(n) {\n    return new BigNumber(n).toString(10);\n  }\n};\n\nvar converter = function converter(params) {\n  var value = params.value,\n      fromNumericBase = params.fromNumericBase,\n      fromDenomination = params.fromDenomination,\n      toNumericBase = params.toNumericBase,\n      toDenomination = params.toDenomination,\n      numberOfDecimals = params.numberOfDecimals;\n  var convertedValue = toBigNumber[fromNumericBase](value);\n\n  if (fromDenomination) {\n    convertedValue = toNormalizedDenomination[fromDenomination](convertedValue);\n  }\n\n  if (toDenomination) {\n    convertedValue = toSpecifiedDenomination[toDenomination](convertedValue);\n  }\n\n  if (numberOfDecimals) {\n    convertedValue = convertedValue.dp(numberOfDecimals, BigNumber.ROUND_HALF_DOWN);\n  }\n\n  if (toNumericBase) {\n    convertedValue = baseChange[toNumericBase](convertedValue);\n  }\n\n  return convertedValue;\n};\n\nvar conversionUtil = function conversionUtil(value, _ref) {\n  var _ref$fromNumericBase = _ref.fromNumericBase,\n      fromNumericBase = _ref$fromNumericBase === void 0 ? \"hex\" : _ref$fromNumericBase,\n      toNumericBase = _ref.toNumericBase,\n      fromDenomination = _ref.fromDenomination,\n      toDenomination = _ref.toDenomination,\n      numberOfDecimals = _ref.numberOfDecimals;\n  return converter({\n    fromNumericBase: fromNumericBase,\n    toNumericBase: toNumericBase,\n    fromDenomination: fromDenomination,\n    toDenomination: toDenomination,\n    numberOfDecimals: numberOfDecimals,\n    value: value || \"0\"\n  });\n};\n\nfunction decGWEIToHexWEI(decGWEI) {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"dec\",\n    toNumericBase: \"hex\",\n    fromDenomination: \"GWEI\",\n    toDenomination: \"WEI\"\n  });\n}\n\nfunction hexWEIToDecGWEI(decGWEI) {\n  return conversionUtil(decGWEI, {\n    fromNumericBase: \"hex\",\n    toNumericBase: \"dec\",\n    fromDenomination: \"WEI\",\n    toDenomination: \"GWEI\"\n  });\n}\n\nfunction bnLessThan(a, b) {\n  if (a === null || a === undefined || b === null || b === undefined) {\n    return null;\n  }\n\n  return new BigNumber$1(a, 10).lt(b, 10);\n}\n\nfunction bnToHex(inputBn) {\n  return addHexPrefix(inputBn.toString(16));\n}\n\nfunction hexToBn(inputHex) {\n  if (BigNumber$1.isBigNumber(inputHex)) return inputHex;\n  return new BigNumber$1(stripHexPrefix(inputHex), 16);\n}\n\nfunction BnMultiplyByFraction(targetBN, numerator, denominator) {\n  var numberBN = new BigNumber$1(numerator);\n  var denomBN = new BigNumber$1(denominator);\n  return targetBN.multipliedBy(numberBN).dividedBy(denomBN);\n}\n\nvar LegacyGasAPIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/gasPrices\";\nvar EIP1559APIEndpoint = \"https://gas-api.metaswap.codefi.network/networks/<chain_id>/suggestedGasFees\";\nvar TRANSACTION_ENVELOPE_TYPES = {\n  LEGACY: \"0x0\",\n  ACCESS_LIST: \"0x1\",\n  FEE_MARKET: \"0x2\"\n};\nvar TRANSACTION_TYPES = {\n  SENT_ETHER: \"sentEther\",\n  CONTRACT_INTERACTION: \"contractInteraction\",\n  DEPLOY_CONTRACT: \"contractDeployment\",\n  STANDARD_TRANSACTION: \"transaction\"\n};\nvar GAS_ESTIMATE_TYPES = {\n  FEE_MARKET: \"fee-market\",\n  LEGACY: \"legacy\",\n  ETH_GASPRICE: \"eth_gasPrice\",\n  NONE: \"none\"\n};\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction normalizeGWEIDecimalNumbers(n) {\n  var numberAsWEIHex = decGWEIToHexWEI(n);\n  var numberAsGWEI = hexWEIToDecGWEI(numberAsWEIHex);\n  return numberAsGWEI;\n}\n\nfunction fetchEip1159GasEstimates(_x77) {\n  return _fetchEip1159GasEstimates.apply(this, arguments);\n}\n/**\n * Hit the legacy MetaSwaps gasPrices estimate api and return the low, medium\n * high values from that API.\n */\n\n\nfunction _fetchEip1159GasEstimates() {\n  _fetchEip1159GasEstimates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee67(url) {\n    var estimates, normalizedEstimates;\n    return _regeneratorRuntime().wrap(function _callee67$(_context67) {\n      while (1) {\n        switch (_context67.prev = _context67.next) {\n          case 0:\n            _context67.next = 2;\n            return get(url);\n\n          case 2:\n            estimates = _context67.sent;\n            normalizedEstimates = _objectSpread$2(_objectSpread$2({}, estimates), {}, {\n              estimatedBaseFee: normalizeGWEIDecimalNumbers(estimates.estimatedBaseFee),\n              low: _objectSpread$2(_objectSpread$2({}, estimates.low), {}, {\n                suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxPriorityFeePerGas),\n                suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.low.suggestedMaxFeePerGas)\n              }),\n              medium: _objectSpread$2(_objectSpread$2({}, estimates.medium), {}, {\n                suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxPriorityFeePerGas),\n                suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.medium.suggestedMaxFeePerGas)\n              }),\n              high: _objectSpread$2(_objectSpread$2({}, estimates.high), {}, {\n                suggestedMaxPriorityFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxPriorityFeePerGas),\n                suggestedMaxFeePerGas: normalizeGWEIDecimalNumbers(estimates.high.suggestedMaxFeePerGas)\n              })\n            });\n            return _context67.abrupt(\"return\", normalizedEstimates);\n\n          case 5:\n          case \"end\":\n            return _context67.stop();\n        }\n      }\n    }, _callee67);\n  }));\n  return _fetchEip1159GasEstimates.apply(this, arguments);\n}\n\nfunction fetchLegacyGasPriceEstimates(_x78) {\n  return _fetchLegacyGasPriceEstimates.apply(this, arguments);\n}\n\nfunction _fetchLegacyGasPriceEstimates() {\n  _fetchLegacyGasPriceEstimates = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee68(url) {\n    var result;\n    return _regeneratorRuntime().wrap(function _callee68$(_context68) {\n      while (1) {\n        switch (_context68.prev = _context68.next) {\n          case 0:\n            _context68.next = 2;\n            return get(url, {\n              referrer: url,\n              referrerPolicy: \"no-referrer-when-downgrade\",\n              method: \"GET\",\n              mode: \"cors\"\n            });\n\n          case 2:\n            result = _context68.sent;\n            return _context68.abrupt(\"return\", {\n              low: result.SafeGasPrice,\n              medium: result.ProposeGasPrice,\n              high: result.FastGasPrice\n            });\n\n          case 4:\n          case \"end\":\n            return _context68.stop();\n        }\n      }\n    }, _callee68);\n  }));\n  return _fetchLegacyGasPriceEstimates.apply(this, arguments);\n}\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar TransactionFormatter = /*#__PURE__*/function () {\n  function TransactionFormatter(_ref) {\n    _classCallCheck(this, TransactionFormatter);\n\n    var getProviderEngineProxy = _ref.getProviderEngineProxy;\n\n    _defineProperty(this, \"chainConfig\", null);\n\n    _defineProperty(this, \"getProviderEngineProxy\", void 0);\n\n    _defineProperty(this, \"isEIP1559Compatible\", false);\n\n    this.getProviderEngineProxy = getProviderEngineProxy;\n  }\n\n  _createClass(TransactionFormatter, [{\n    key: \"providerProxy\",\n    get: function get() {\n      return this.getProviderEngineProxy();\n    }\n  }, {\n    key: \"init\",\n    value: function () {\n      var _init = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46() {\n        return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                _context46.next = 2;\n                return this.providerProxy.request({\n                  method: \"eth_provider_config\",\n                  params: []\n                });\n\n              case 2:\n                this.chainConfig = _context46.sent;\n                _context46.next = 5;\n                return this.getEIP1559Compatibility();\n\n              case 5:\n                this.isEIP1559Compatible = _context46.sent;\n\n              case 6:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46, this);\n      }));\n\n      function init() {\n        return _init.apply(this, arguments);\n      }\n\n      return init;\n    }()\n  }, {\n    key: \"getCommonConfiguration\",\n    value: function () {\n      var _getCommonConfiguration = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {\n        var _this$chainConfig, name, chainId, hardfork, customChainParams;\n\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                if (this.chainConfig) {\n                  _context47.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Chain config not initialized\");\n\n              case 2:\n                _this$chainConfig = this.chainConfig, name = _this$chainConfig.displayName, chainId = _this$chainConfig.chainId;\n                hardfork = this.isEIP1559Compatible ? Hardfork.London : Hardfork.Berlin;\n                customChainParams = {\n                  name: name,\n                  chainId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n                  networkId: chainId === \"loading\" ? 0 : Number.parseInt(chainId, 16),\n                  defaultHardfork: hardfork\n                };\n                return _context47.abrupt(\"return\", Common.custom(customChainParams));\n\n              case 6:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47, this);\n      }));\n\n      function getCommonConfiguration() {\n        return _getCommonConfiguration.apply(this, arguments);\n      }\n\n      return getCommonConfiguration;\n    }()\n  }, {\n    key: \"formatTransaction\",\n    value: function () {\n      var _formatTransaction = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(txParams) {\n        var clonedTxParams, defaultGasLimit, _defaultGasLimit, _yield$this$getDefaul, defaultGasPrice, defaultMaxFeePerGas, defaultMaxPriorityFeePerGas;\n\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                if (this.chainConfig) {\n                  _context48.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Chain config not initialized\");\n\n              case 2:\n                clonedTxParams = _objectSpread$1({}, txParams);\n\n                if (!(clonedTxParams.nonce === undefined)) {\n                  _context48.next = 7;\n                  break;\n                }\n\n                _context48.next = 6;\n                return this.providerProxy.request({\n                  method: \"eth_getTransactionCount\",\n                  params: [txParams.from, \"latest\"]\n                });\n\n              case 6:\n                clonedTxParams.nonce = _context48.sent;\n\n              case 7:\n                if (!(!this.isEIP1559Compatible && clonedTxParams.gasPrice)) {\n                  _context48.next = 19;\n                  break;\n                }\n\n                if (clonedTxParams.maxFeePerGas) delete clonedTxParams.maxFeePerGas;\n                if (clonedTxParams.maxPriorityFeePerGas) delete clonedTxParams.maxPriorityFeePerGas; // if gas is not provided explicitly, estimate it.\n\n                if (clonedTxParams.gas) {\n                  _context48.next = 17;\n                  break;\n                }\n\n                _context48.next = 13;\n                return this.getDefaultGasLimit(clonedTxParams);\n\n              case 13:\n                defaultGasLimit = _context48.sent;\n\n                if (defaultGasLimit) {\n                  clonedTxParams.gasLimit = defaultGasLimit;\n                }\n\n                _context48.next = 18;\n                break;\n\n              case 17:\n                clonedTxParams.gasLimit = clonedTxParams.gas;\n\n              case 18:\n                return _context48.abrupt(\"return\", clonedTxParams);\n\n              case 19:\n                if (clonedTxParams.gas) {\n                  _context48.next = 26;\n                  break;\n                }\n\n                _context48.next = 22;\n                return this.getDefaultGasLimit(clonedTxParams);\n\n              case 22:\n                _defaultGasLimit = _context48.sent;\n\n                if (_defaultGasLimit) {\n                  clonedTxParams.gasLimit = _defaultGasLimit;\n                }\n\n                _context48.next = 27;\n                break;\n\n              case 26:\n                clonedTxParams.gasLimit = clonedTxParams.gas;\n\n              case 27:\n                _context48.next = 29;\n                return this.getDefaultGasFees(clonedTxParams);\n\n              case 29:\n                _yield$this$getDefaul = _context48.sent;\n                defaultGasPrice = _yield$this$getDefaul.gasPrice;\n                defaultMaxFeePerGas = _yield$this$getDefaul.maxFeePerGas;\n                defaultMaxPriorityFeePerGas = _yield$this$getDefaul.maxPriorityFeePerGas;\n\n                if (this.isEIP1559Compatible) {\n                  // If the dapp has suggested a gas price, but no maxFeePerGas or maxPriorityFeePerGas\n                  //  then we set maxFeePerGas and maxPriorityFeePerGas to the suggested gasPrice.\n                  if (clonedTxParams.gasPrice && !clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n                    clonedTxParams.maxFeePerGas = clonedTxParams.gasPrice;\n                    clonedTxParams.maxPriorityFeePerGas = bnLessThan(typeof defaultMaxPriorityFeePerGas === \"string\" ? stripHexPrefix(defaultMaxPriorityFeePerGas) : defaultMaxPriorityFeePerGas, typeof clonedTxParams.gasPrice === \"string\" ? stripHexPrefix(clonedTxParams.gasPrice) : clonedTxParams.gasPrice) ? defaultMaxPriorityFeePerGas : clonedTxParams.gasPrice;\n                  } else {\n                    if (defaultMaxFeePerGas && !clonedTxParams.maxFeePerGas) {\n                      // If the dapp has not set the gasPrice or the maxFeePerGas, then we set maxFeePerGas\n                      // with the one returned by the gasFeeController, if that is available.\n                      clonedTxParams.maxFeePerGas = defaultMaxFeePerGas;\n                    }\n\n                    if (defaultMaxPriorityFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n                      // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, then we set maxPriorityFeePerGas\n                      // with the one returned by the gasFeeController, if that is available.\n                      clonedTxParams.maxPriorityFeePerGas = defaultMaxPriorityFeePerGas;\n                    }\n\n                    if (defaultGasPrice && !clonedTxParams.maxFeePerGas) {\n                      // If the dapp has not set the gasPrice or the maxFeePerGas, and no maxFeePerGas is available\n                      // then we set maxFeePerGas to the defaultGasPrice, assuming it is\n                      // available.\n                      clonedTxParams.maxFeePerGas = defaultGasPrice;\n                    }\n\n                    if (clonedTxParams.maxFeePerGas && !clonedTxParams.maxPriorityFeePerGas) {\n                      // If the dapp has not set the gasPrice or the maxPriorityFeePerGas, and no maxPriorityFeePerGas is\n                      // available  then we set maxPriorityFeePerGas to\n                      // clonedTxParams.maxFeePerGas, which will either be the gasPrice from the controller, the maxFeePerGas\n                      // set by the dapp, or the maxFeePerGas from the controller.\n                      clonedTxParams.maxPriorityFeePerGas = clonedTxParams.maxFeePerGas;\n                    }\n                  } // We remove the gasPrice param entirely when on an eip1559 compatible network\n\n\n                  delete clonedTxParams.gasPrice;\n                } else {\n                  // We ensure that maxFeePerGas and maxPriorityFeePerGas are not in the transaction params\n                  // when not on a EIP1559 compatible network\n                  delete clonedTxParams.maxPriorityFeePerGas;\n                  delete clonedTxParams.maxFeePerGas;\n                } // If we have gotten to this point, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas are\n                // set on txParams, it means that either we are on a non-EIP1559 network and the dapp didn't suggest\n                // a gas price, or we are on an EIP1559 network, and none of gasPrice, maxPriorityFeePerGas or maxFeePerGas\n                // were available from either the dapp or the network.\n\n\n                if (defaultGasPrice && !clonedTxParams.gasPrice && !clonedTxParams.maxPriorityFeePerGas && !clonedTxParams.maxFeePerGas) {\n                  clonedTxParams.gasPrice = defaultGasPrice;\n                }\n\n                clonedTxParams.type = this.isEIP1559Compatible ? TRANSACTION_ENVELOPE_TYPES.FEE_MARKET : TRANSACTION_ENVELOPE_TYPES.LEGACY;\n                clonedTxParams.chainId = this.chainConfig.chainId;\n                return _context48.abrupt(\"return\", clonedTxParams);\n\n              case 38:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48, this);\n      }));\n\n      function formatTransaction(_x79) {\n        return _formatTransaction.apply(this, arguments);\n      }\n\n      return formatTransaction;\n    }()\n  }, {\n    key: \"fetchEthGasPriceEstimate\",\n    value: function () {\n      var _fetchEthGasPriceEstimate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49() {\n        var gasPrice;\n        return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                _context49.next = 2;\n                return this.providerProxy.request({\n                  method: \"eth_gasPrice\",\n                  params: []\n                });\n\n              case 2:\n                gasPrice = _context49.sent;\n                return _context49.abrupt(\"return\", {\n                  gasPrice: hexWEIToDecGWEI(gasPrice).toString()\n                });\n\n              case 4:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49, this);\n      }));\n\n      function fetchEthGasPriceEstimate() {\n        return _fetchEthGasPriceEstimate.apply(this, arguments);\n      }\n\n      return fetchEthGasPriceEstimate;\n    }()\n  }, {\n    key: \"getEIP1559Compatibility\",\n    value: function () {\n      var _getEIP1559Compatibility = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50() {\n        var latestBlock, supportsEIP1559;\n        return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                _context50.next = 2;\n                return this.providerProxy.request({\n                  method: \"eth_getBlockByNumber\",\n                  params: [\"latest\", false]\n                });\n\n              case 2:\n                latestBlock = _context50.sent;\n                supportsEIP1559 = latestBlock && latestBlock.baseFeePerGas !== undefined;\n                return _context50.abrupt(\"return\", !!supportsEIP1559);\n\n              case 5:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50, this);\n      }));\n\n      function getEIP1559Compatibility() {\n        return _getEIP1559Compatibility.apply(this, arguments);\n      }\n\n      return getEIP1559Compatibility;\n    }()\n  }, {\n    key: \"fetchGasFeeEstimateData\",\n    value: function () {\n      var _fetchGasFeeEstimateData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51() {\n        var isLegacyGasAPICompatible, chainId, gasData, estimates, _estimates, _estimates2;\n\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                if (this.chainConfig) {\n                  _context51.next = 2;\n                  break;\n                }\n\n                throw new Error(\"Chain config not initialized\");\n\n              case 2:\n                isLegacyGasAPICompatible = this.chainConfig.chainId === \"0x1\";\n                chainId = Number.parseInt(this.chainConfig.chainId, 16);\n                _context51.prev = 4;\n\n                if (!this.isEIP1559Compatible) {\n                  _context51.next = 12;\n                  break;\n                }\n\n                _context51.next = 8;\n                return fetchEip1159GasEstimates(EIP1559APIEndpoint.replace(\"<chain_id>\", \"\".concat(chainId)));\n\n              case 8:\n                estimates = _context51.sent;\n                gasData = {\n                  gasFeeEstimates: estimates,\n                  gasEstimateType: GAS_ESTIMATE_TYPES.FEE_MARKET\n                };\n                _context51.next = 20;\n                break;\n\n              case 12:\n                if (!isLegacyGasAPICompatible) {\n                  _context51.next = 19;\n                  break;\n                }\n\n                _context51.next = 15;\n                return fetchLegacyGasPriceEstimates(LegacyGasAPIEndpoint.replace(\"<chain_id>\", \"\".concat(chainId)));\n\n              case 15:\n                _estimates = _context51.sent;\n                gasData = {\n                  gasFeeEstimates: _estimates,\n                  gasEstimateType: GAS_ESTIMATE_TYPES.LEGACY\n                };\n                _context51.next = 20;\n                break;\n\n              case 19:\n                throw new Error(\"Main gas fee/price estimation failed. Use fallback\");\n\n              case 20:\n                _context51.next = 34;\n                break;\n\n              case 22:\n                _context51.prev = 22;\n                _context51.t0 = _context51[\"catch\"](4);\n                _context51.prev = 24;\n                _context51.next = 27;\n                return this.fetchEthGasPriceEstimate();\n\n              case 27:\n                _estimates2 = _context51.sent;\n                gasData = {\n                  gasFeeEstimates: _estimates2,\n                  gasEstimateType: GAS_ESTIMATE_TYPES.ETH_GASPRICE\n                };\n                _context51.next = 34;\n                break;\n\n              case 31:\n                _context51.prev = 31;\n                _context51.t1 = _context51[\"catch\"](24);\n                throw new Error(\"Gas fee/price estimation failed. Message: \".concat(_context51.t1.message));\n\n              case 34:\n                return _context51.abrupt(\"return\", gasData);\n\n              case 35:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this, [[4, 22], [24, 31]]);\n      }));\n\n      function fetchGasFeeEstimateData() {\n        return _fetchGasFeeEstimateData.apply(this, arguments);\n      }\n\n      return fetchGasFeeEstimateData;\n    }()\n  }, {\n    key: \"getDefaultGasFees\",\n    value: function () {\n      var _getDefaultGasFees = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(txParams) {\n        var _yield$this$fetchGasF, gasFeeEstimates, gasEstimateType, _gasFeeEstimates$medi, suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas, _yield$this$fetchEthG, gasPrice;\n\n        return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                if (!(!this.isEIP1559Compatible && txParams.gasPrice || this.isEIP1559Compatible && txParams.maxFeePerGas && txParams.maxPriorityFeePerGas)) {\n                  _context52.next = 2;\n                  break;\n                }\n\n                return _context52.abrupt(\"return\", {});\n\n              case 2:\n                _context52.prev = 2;\n                _context52.next = 5;\n                return this.fetchGasFeeEstimateData();\n\n              case 5:\n                _yield$this$fetchGasF = _context52.sent;\n                gasFeeEstimates = _yield$this$fetchGasF.gasFeeEstimates;\n                gasEstimateType = _yield$this$fetchGasF.gasEstimateType;\n\n                if (!(this.isEIP1559Compatible && gasEstimateType === GAS_ESTIMATE_TYPES.FEE_MARKET)) {\n                  _context52.next = 16;\n                  break;\n                }\n\n                _gasFeeEstimates$medi = gasFeeEstimates.medium;\n                _gasFeeEstimates$medi = _gasFeeEstimates$medi === void 0 ? {} : _gasFeeEstimates$medi;\n                suggestedMaxPriorityFeePerGas = _gasFeeEstimates$medi.suggestedMaxPriorityFeePerGas, suggestedMaxFeePerGas = _gasFeeEstimates$medi.suggestedMaxFeePerGas;\n\n                if (!(suggestedMaxPriorityFeePerGas && suggestedMaxFeePerGas)) {\n                  _context52.next = 14;\n                  break;\n                }\n\n                return _context52.abrupt(\"return\", {\n                  maxFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxFeePerGas)),\n                  maxPriorityFeePerGas: addHexPrefix(decGWEIToHexWEI(suggestedMaxPriorityFeePerGas))\n                });\n\n              case 14:\n                _context52.next = 22;\n                break;\n\n              case 16:\n                if (!(gasEstimateType === GAS_ESTIMATE_TYPES.LEGACY)) {\n                  _context52.next = 20;\n                  break;\n                }\n\n                return _context52.abrupt(\"return\", {\n                  gasPrice: decGWEIToHexWEI(gasFeeEstimates.medium)\n                });\n\n              case 20:\n                if (!(gasEstimateType === GAS_ESTIMATE_TYPES.ETH_GASPRICE)) {\n                  _context52.next = 22;\n                  break;\n                }\n\n                return _context52.abrupt(\"return\", {\n                  gasPrice: addHexPrefix(decGWEIToHexWEI(gasFeeEstimates.gasPrice))\n                });\n\n              case 22:\n                _context52.next = 27;\n                break;\n\n              case 24:\n                _context52.prev = 24;\n                _context52.t0 = _context52[\"catch\"](2);\n                log.error(_context52.t0);\n\n              case 27:\n                _context52.next = 29;\n                return this.fetchEthGasPriceEstimate();\n\n              case 29:\n                _yield$this$fetchEthG = _context52.sent;\n                gasPrice = _yield$this$fetchEthG.gasPrice;\n                return _context52.abrupt(\"return\", {\n                  gasPrice: addHexPrefix(decGWEIToHexWEI(gasPrice))\n                });\n\n              case 32:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52, this, [[2, 24]]);\n      }));\n\n      function getDefaultGasFees(_x80) {\n        return _getDefaultGasFees.apply(this, arguments);\n      }\n\n      return getDefaultGasFees;\n    }()\n  }, {\n    key: \"estimateTxGas\",\n    value: function () {\n      var _estimateTxGas = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(txMeta) {\n        var txParams, gas;\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                txParams = _objectSpread$1({}, txMeta); // `eth_estimateGas` can fail if the user has insufficient balance for the\n                // value being sent, or for the gas cost. We don't want to check their\n                // balance here, we just want the gas estimate. The gas price is removed\n                // to skip those balance checks. We check balance elsewhere. We also delete\n                // maxFeePerGas and maxPriorityFeePerGas to support EIP-1559 txs.\n\n                delete txParams.gasPrice;\n                delete txParams.maxFeePerGas;\n                delete txParams.maxPriorityFeePerGas;\n                _context53.next = 6;\n                return this.providerProxy.request({\n                  method: \"eth_estimateGas\",\n                  params: [txParams]\n                });\n\n              case 6:\n                gas = _context53.sent;\n                return _context53.abrupt(\"return\", gas);\n\n              case 8:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function estimateTxGas(_x81) {\n        return _estimateTxGas.apply(this, arguments);\n      }\n\n      return estimateTxGas;\n    }()\n  }, {\n    key: \"analyzeGasUsage\",\n    value: function () {\n      var _analyzeGasUsage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54(txMeta) {\n        var block, blockGasLimitBN, saferGasLimitBN, estimatedGasHex;\n        return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                _context54.next = 2;\n                return this.providerProxy.request({\n                  method: \"eth_getBlockByNumber\",\n                  params: [\"latest\", false]\n                });\n\n              case 2:\n                block = _context54.sent;\n                // fallback to block gasLimit\n                blockGasLimitBN = hexToBn(block.gasLimit);\n                saferGasLimitBN = BnMultiplyByFraction(blockGasLimitBN, 19, 20);\n                estimatedGasHex = bnToHex(saferGasLimitBN);\n                _context54.prev = 6;\n                _context54.next = 9;\n                return this.estimateTxGas(txMeta);\n\n              case 9:\n                estimatedGasHex = _context54.sent;\n                _context54.next = 15;\n                break;\n\n              case 12:\n                _context54.prev = 12;\n                _context54.t0 = _context54[\"catch\"](6);\n                log.warn(_context54.t0);\n\n              case 15:\n                return _context54.abrupt(\"return\", {\n                  blockGasLimit: block.gasLimit,\n                  estimatedGasHex: estimatedGasHex\n                });\n\n              case 16:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54, this, [[6, 12]]);\n      }));\n\n      function analyzeGasUsage(_x82) {\n        return _analyzeGasUsage.apply(this, arguments);\n      }\n\n      return analyzeGasUsage;\n    }()\n  }, {\n    key: \"addGasBuffer\",\n    value: function addGasBuffer(initialGasLimitHex, blockGasLimitHex) {\n      var multiplier = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.5;\n      var initialGasLimitBn = hexToBn(initialGasLimitHex);\n      var blockGasLimitBn = hexToBn(blockGasLimitHex);\n      var upperGasLimitBn = blockGasLimitBn.multipliedBy(0.9).dp(0, 1);\n      var bufferedGasLimitBn = initialGasLimitBn.multipliedBy(multiplier).dp(0, 1); // if initialGasLimit is above blockGasLimit, dont modify it\n\n      if (initialGasLimitBn.gt(upperGasLimitBn)) return bnToHex(initialGasLimitBn); // if bufferedGasLimit is below blockGasLimit, use bufferedGasLimit\n\n      if (bufferedGasLimitBn.lt(upperGasLimitBn)) return bnToHex(bufferedGasLimitBn); // otherwise use blockGasLimit\n\n      return bnToHex(upperGasLimitBn);\n    }\n  }, {\n    key: \"determineTransactionCategory\",\n    value: function () {\n      var _determineTransactionCategory = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(txParameters) {\n        var data, to, code, txCategory, codeIsEmpty;\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                data = txParameters.data, to = txParameters.to;\n                code = \"\";\n\n                if (!(data && !to)) {\n                  _context55.next = 6;\n                  break;\n                }\n\n                txCategory = TRANSACTION_TYPES.DEPLOY_CONTRACT;\n                _context55.next = 17;\n                break;\n\n              case 6:\n                _context55.prev = 6;\n                _context55.next = 9;\n                return this.providerProxy.request({\n                  method: \"eth_getCode\",\n                  params: [to, \"latest\"]\n                });\n\n              case 9:\n                code = _context55.sent;\n                _context55.next = 15;\n                break;\n\n              case 12:\n                _context55.prev = 12;\n                _context55.t0 = _context55[\"catch\"](6);\n                log.warn(_context55.t0);\n\n              case 15:\n                codeIsEmpty = !code || code === \"0x\" || code === \"0x0\";\n                txCategory = codeIsEmpty ? TRANSACTION_TYPES.SENT_ETHER : TRANSACTION_TYPES.CONTRACT_INTERACTION;\n\n              case 17:\n                return _context55.abrupt(\"return\", {\n                  transactionCategory: txCategory,\n                  code: code\n                });\n\n              case 18:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this, [[6, 12]]);\n      }));\n\n      function determineTransactionCategory(_x83) {\n        return _determineTransactionCategory.apply(this, arguments);\n      }\n\n      return determineTransactionCategory;\n    }()\n  }, {\n    key: \"getDefaultGasLimit\",\n    value: function () {\n      var _getDefaultGasLimit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56(txParams) {\n        var _yield$this$determine, transactionCategory, TWENTY_ONE_THOUSAND, _yield$this$analyzeGa, blockGasLimit, estimatedGasHex, gasLimit;\n\n        return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n          while (1) {\n            switch (_context56.prev = _context56.next) {\n              case 0:\n                _context56.next = 2;\n                return this.determineTransactionCategory(_objectSpread$1({}, txParams));\n\n              case 2:\n                _yield$this$determine = _context56.sent;\n                transactionCategory = _yield$this$determine.transactionCategory;\n\n                if (!txParams.gas) {\n                  _context56.next = 6;\n                  break;\n                }\n\n                return _context56.abrupt(\"return\", txParams.gas);\n\n              case 6:\n                if (!(txParams.to && transactionCategory === TRANSACTION_TYPES.SENT_ETHER)) {\n                  _context56.next = 11;\n                  break;\n                }\n\n                if (!txParams.data) {\n                  _context56.next = 9;\n                  break;\n                }\n\n                throw Error(\"TxGasUtil - Trying to call a function on a non-contract address\");\n\n              case 9:\n                TWENTY_ONE_THOUSAND = 21000; // This is a standard ether simple send, gas requirement is exactly 21k\n\n                return _context56.abrupt(\"return\", addHexPrefix(TWENTY_ONE_THOUSAND.toString(16)));\n\n              case 11:\n                _context56.next = 13;\n                return this.analyzeGasUsage(txParams);\n\n              case 13:\n                _yield$this$analyzeGa = _context56.sent;\n                blockGasLimit = _yield$this$analyzeGa.blockGasLimit;\n                estimatedGasHex = _yield$this$analyzeGa.estimatedGasHex;\n                // add additional gas buffer to our estimation for safety\n                gasLimit = this.addGasBuffer(addHexPrefix(estimatedGasHex), blockGasLimit);\n                return _context56.abrupt(\"return\", gasLimit);\n\n              case 18:\n              case \"end\":\n                return _context56.stop();\n            }\n          }\n        }, _callee56, this);\n      }));\n\n      function getDefaultGasLimit(_x84) {\n        return _getDefaultGasLimit.apply(this, arguments);\n      }\n\n      return getDefaultGasLimit;\n    }()\n  }]);\n\n  return TransactionFormatter;\n}();\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar EthereumPrivateKeyProvider = /*#__PURE__*/function (_BaseProvider2) {\n  _inherits(EthereumPrivateKeyProvider, _BaseProvider2);\n\n  var _super2 = _createSuper(EthereumPrivateKeyProvider);\n\n  function EthereumPrivateKeyProvider(_ref) {\n    _classCallCheck(this, EthereumPrivateKeyProvider);\n\n    var config = _ref.config,\n        state = _ref.state;\n    return _super2.call(this, {\n      config: {\n        chainConfig: _objectSpread(_objectSpread({}, config.chainConfig), {}, {\n          chainNamespace: CHAIN_NAMESPACES.EIP155\n        })\n      },\n      state: state\n    });\n  }\n\n  _createClass(EthereumPrivateKeyProvider, [{\n    key: \"enable\",\n    value: function () {\n      var _enable2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57() {\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                if (this.state.privateKey) {\n                  _context57.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Private key is not found in state, plz pass it in constructor state param\",\n                  code: 4902\n                });\n\n              case 2:\n                _context57.next = 4;\n                return this.setupProvider(this.state.privateKey);\n\n              case 4:\n                return _context57.abrupt(\"return\", this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                }));\n\n              case 5:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this);\n      }));\n\n      function enable() {\n        return _enable2.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"setupProvider\",\n    value: function () {\n      var _setupProvider2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58(privKey) {\n        var txFormatter, providerHandlers, ethMiddleware, chainSwitchMiddleware, engine, _createJsonRpcClient2, networkMiddleware, provider;\n\n        return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                txFormatter = new TransactionFormatter({\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n                providerHandlers = getProviderHandlers({\n                  txFormatter: txFormatter,\n                  privKey: privKey,\n                  getProviderEngineProxy: this.getProviderEngineProxy.bind(this)\n                });\n                ethMiddleware = createEthMiddleware(providerHandlers);\n                chainSwitchMiddleware = this.getChainSwitchMiddleware();\n                engine = new JRPCEngine(); // Not a partial anymore because of checks in ctor\n\n                _createJsonRpcClient2 = createJsonRpcClient(this.config.chainConfig), networkMiddleware = _createJsonRpcClient2.networkMiddleware;\n                engine.push(ethMiddleware);\n                engine.push(chainSwitchMiddleware);\n                engine.push(this.getAccountMiddleware());\n                engine.push(networkMiddleware);\n                provider = providerFromEngine(engine);\n                this.updateProviderEngineProxy(provider);\n                _context58.next = 14;\n                return txFormatter.init();\n\n              case 14:\n                _context58.next = 16;\n                return this.lookupNetwork();\n\n              case 16:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58, this);\n      }));\n\n      function setupProvider(_x85) {\n        return _setupProvider2.apply(this, arguments);\n      }\n\n      return setupProvider;\n    }()\n  }, {\n    key: \"updateAccount\",\n    value: function () {\n      var _updateAccount2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(params) {\n        var existingKey;\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context59.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                _context59.next = 4;\n                return this._providerEngineProxy.request({\n                  method: \"eth_private_key\"\n                });\n\n              case 4:\n                existingKey = _context59.sent;\n\n                if (!(existingKey !== params.privateKey)) {\n                  _context59.next = 14;\n                  break;\n                }\n\n                _context59.next = 8;\n                return this.setupProvider(params.privateKey);\n\n              case 8:\n                _context59.t0 = this._providerEngineProxy;\n                _context59.next = 11;\n                return this._providerEngineProxy.request({\n                  method: \"eth_accounts\"\n                });\n\n              case 11:\n                _context59.t1 = _context59.sent;\n                _context59.t2 = {\n                  accounts: _context59.t1\n                };\n\n                _context59.t0.emit.call(_context59.t0, \"accountsChanged\", _context59.t2);\n\n              case 14:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59, this);\n      }));\n\n      function updateAccount(_x86) {\n        return _updateAccount2.apply(this, arguments);\n      }\n\n      return updateAccount;\n    }()\n  }, {\n    key: \"switchChain\",\n    value: function () {\n      var _switchChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(params) {\n        var chainConfig, privKey;\n        return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context60.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainConfig = this.getChainConfig(params.chainId);\n                this.update({\n                  chainId: \"loading\"\n                });\n                this.configure({\n                  chainConfig: chainConfig\n                });\n                _context60.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"eth_private_key\"\n                });\n\n              case 7:\n                privKey = _context60.sent;\n                _context60.next = 10;\n                return this.setupProvider(privKey);\n\n              case 10:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60, this);\n      }));\n\n      function switchChain(_x87) {\n        return _switchChain2.apply(this, arguments);\n      }\n\n      return switchChain;\n    }()\n  }, {\n    key: \"lookupNetwork\",\n    value: function () {\n      var _lookupNetwork2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {\n        var chainId, network;\n        return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                if (this._providerEngineProxy) {\n                  _context61.next = 2;\n                  break;\n                }\n\n                throw ethErrors.provider.custom({\n                  message: \"Provider is not initialized\",\n                  code: 4902\n                });\n\n              case 2:\n                chainId = this.config.chainConfig.chainId;\n\n                if (chainId) {\n                  _context61.next = 5;\n                  break;\n                }\n\n                throw ethErrors.rpc.invalidParams(\"chainId is required while lookupNetwork\");\n\n              case 5:\n                _context61.next = 7;\n                return this._providerEngineProxy.request({\n                  method: \"net_version\",\n                  params: []\n                });\n\n              case 7:\n                network = _context61.sent;\n\n                if (!(parseInt(chainId, 16) !== parseInt(network, 10))) {\n                  _context61.next = 10;\n                  break;\n                }\n\n                throw ethErrors.provider.chainDisconnected(\"Invalid network, net_version is: \".concat(network));\n\n              case 10:\n                if (this.state.chainId !== chainId) {\n                  this._providerEngineProxy.emit(\"chainChanged\", chainId);\n\n                  this._providerEngineProxy.emit(\"connect\", {\n                    chainId: chainId\n                  });\n                }\n\n                this.update({\n                  chainId: chainId\n                });\n                return _context61.abrupt(\"return\", network);\n\n              case 13:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this);\n      }));\n\n      function lookupNetwork() {\n        return _lookupNetwork2.apply(this, arguments);\n      }\n\n      return lookupNetwork;\n    }()\n  }, {\n    key: \"getChainSwitchMiddleware\",\n    value: function getChainSwitchMiddleware() {\n      var _this3 = this;\n\n      var chainSwitchHandlers = {\n        addChain: function () {\n          var _addChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(params) {\n            var chainId, chainName, rpcUrls, blockExplorerUrls, nativeCurrency;\n            return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n              while (1) {\n                switch (_context62.prev = _context62.next) {\n                  case 0:\n                    chainId = params.chainId, chainName = params.chainName, rpcUrls = params.rpcUrls, blockExplorerUrls = params.blockExplorerUrls, nativeCurrency = params.nativeCurrency;\n\n                    _this3.addChain({\n                      chainNamespace: \"eip155\",\n                      chainId: chainId,\n                      ticker: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.symbol) || \"ETH\",\n                      tickerName: (nativeCurrency === null || nativeCurrency === void 0 ? void 0 : nativeCurrency.name) || \"Ether\",\n                      displayName: chainName,\n                      rpcTarget: rpcUrls[0],\n                      blockExplorer: (blockExplorerUrls === null || blockExplorerUrls === void 0 ? void 0 : blockExplorerUrls[0]) || \"\"\n                    });\n\n                  case 2:\n                  case \"end\":\n                    return _context62.stop();\n                }\n              }\n            }, _callee62);\n          }));\n\n          function addChain(_x88) {\n            return _addChain2.apply(this, arguments);\n          }\n\n          return addChain;\n        }(),\n        switchChain: function () {\n          var _switchChain3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee63(params) {\n            var chainId;\n            return _regeneratorRuntime().wrap(function _callee63$(_context63) {\n              while (1) {\n                switch (_context63.prev = _context63.next) {\n                  case 0:\n                    chainId = params.chainId;\n                    _context63.next = 3;\n                    return _this3.switchChain({\n                      chainId: chainId\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context63.stop();\n                }\n              }\n            }, _callee63);\n          }));\n\n          function switchChain(_x89) {\n            return _switchChain3.apply(this, arguments);\n          }\n\n          return switchChain;\n        }()\n      };\n      var chainSwitchMiddleware = createChainSwitchMiddleware(chainSwitchHandlers);\n      return chainSwitchMiddleware;\n    }\n  }, {\n    key: \"getAccountMiddleware\",\n    value: function getAccountMiddleware() {\n      var _this4 = this;\n\n      var accountHandlers = {\n        updatePrivatekey: function () {\n          var _updatePrivatekey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee64(params) {\n            var privateKey;\n            return _regeneratorRuntime().wrap(function _callee64$(_context64) {\n              while (1) {\n                switch (_context64.prev = _context64.next) {\n                  case 0:\n                    privateKey = params.privateKey;\n                    _context64.next = 3;\n                    return _this4.updateAccount({\n                      privateKey: privateKey\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context64.stop();\n                }\n              }\n            }, _callee64);\n          }));\n\n          function updatePrivatekey(_x90) {\n            return _updatePrivatekey.apply(this, arguments);\n          }\n\n          return updatePrivatekey;\n        }()\n      };\n      return createAccountMiddleware(accountHandlers);\n    }\n  }]);\n\n  return EthereumPrivateKeyProvider;\n}(BaseProvider);\n\n_defineProperty(EthereumPrivateKeyProvider, \"getProviderInstance\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee65(params) {\n    var providerFactory;\n    return _regeneratorRuntime().wrap(function _callee65$(_context65) {\n      while (1) {\n        switch (_context65.prev = _context65.next) {\n          case 0:\n            providerFactory = new EthereumPrivateKeyProvider({\n              config: {\n                chainConfig: params.chainConfig\n              }\n            });\n            _context65.next = 3;\n            return providerFactory.setupProvider(params.privKey);\n\n          case 3:\n            return _context65.abrupt(\"return\", providerFactory);\n\n          case 4:\n          case \"end\":\n            return _context65.stop();\n        }\n      }\n    }, _callee65);\n  }));\n\n  return function (_x91) {\n    return _ref5.apply(this, arguments);\n  };\n}());\n\nexport { EthereumPrivateKeyProvider, WalletConnectProvider };","map":{"version":3,"mappings":"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","names":["resemblesAddress","str","length","createWalletMiddleware","_ref","getAccounts","getPrivateKey","processDecryptMessage","processEncryptionPublicKey","processEthSignMessage","processPersonalMessage","processTransaction","processSignTransaction","processTypedMessage","processTypedMessageV3","processTypedMessageV4","Error","validateAndNormalizeKeyholder","address","req","accounts","normalizedAccounts","map","_address","toLowerCase","normalizedAddress","includes","ethErrors","rpc","invalidParams","message","lookupAccounts","res","result","lookupDefaultAccount","sendTransaction","methodNotSupported","txParams","params","from","signTransaction","ethSign","extraParams","msgParams","_objectSpread$4","data","signTypedData","version","signTypedDataV3","signTypedDataV4","personalSign","firstParam","secondParam","warning","encryptionPublicKey","decryptMessage","ciphertext","fetchPrivateKey","createScaffoldMiddleware","eth_accounts","createAsyncMiddleware","eth_private_key","eth_coinbase","eth_sendTransaction","eth_signTransaction","eth_sign","eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","personal_sign","eth_getEncryptionPublicKey","eth_decrypt","createEthMiddleware","providerHandlers","ethMiddleware","mergeMiddleware","eth_syncing","createChainSwitchMiddleware","addChain","switchChain","addNewChain","chainParams","undefined","chainId","rpcUrls","nativeCurrency","updateChain","wallet_addEthereumChain","wallet_switchEthereumChain","_ref2","updatePrivatekey","updateAccount","accountParams","privateKey","wallet_updateAccount","createChainIdMiddleware","next","end","method","createProviderConfigMiddleware","providerConfig","createJsonRpcClient","rpcTarget","fetchMiddleware","createFetchMiddleware","networkMiddleware","connector","_","signMessage","signPersonalMessage","WalletConnectProvider","constructor","config","state","chainConfig","chainNamespace","CHAIN_NAMESPACES","EIP155","skipLookupNetwork","_defineProperty","provider","custom","code","setupProvider","_providerEngineProxy","request","onConnectorStateUpdate","setupEngine","lookup","currentChainConfig","getChainConfig","update","displayName","sendCustomRequest","chainName","log","error","configure","lookupNetwork","WalletInitializationError","notReady","connected","WalletLoginError","notConnectedError","connectedHexChainId","isHexStrict","toString","rpcConnectionError","emit","getProviderHandlers","engine","JRPCEngine","push","providerFromEngine","updateProviderEngineProxy","on","payload","connectedChainId","rpcUrl","maybeConfig","BaseProvider","providerFactory","signTx","privKey","txFormatter","formatTransaction","finalTxParams","getCommonConfiguration","common","unsignedEthTx","TransactionFactory","fromTxData","signedTx","sign","Buffer","serialize","getProviderEngineProxy","privateToAddress","providerEngineProxy","concat","txHash","rawMessageSig","privKeyBuffer","sig","debug","SignTypedDataVersion","V1","V3","V4","info","getEncryptionPublicKey","stripped","stripHexPrefix","buff","decrypted","decrypt","encryptedData","JSON","parse","BIG_NUMBER_WEI_MULTIPLIER","BigNumber","BIG_NUMBER_GWEI_MULTIPLIER","BIG_NUMBER_ETH_MULTIPLIER","toBigNumber","hex","n","dec","toNormalizedDenomination","WEI","bigNumber","div","GWEI","ETH","toSpecifiedDenomination","times","dp","ROUND_HALF_UP","baseChange","converter","value","fromNumericBase","fromDenomination","toNumericBase","toDenomination","numberOfDecimals","convertedValue","ROUND_HALF_DOWN","conversionUtil","decGWEIToHexWEI","decGWEI","hexWEIToDecGWEI","a","b","lt","bnToHex","inputBn","addHexPrefix","hexToBn","inputHex","isBigNumber","BnMultiplyByFraction","targetBN","numerator","denominator","numberBN","denomBN","multipliedBy","dividedBy","LegacyGasAPIEndpoint","EIP1559APIEndpoint","TRANSACTION_ENVELOPE_TYPES","LEGACY","ACCESS_LIST","FEE_MARKET","TRANSACTION_TYPES","SENT_ETHER","CONTRACT_INTERACTION","DEPLOY_CONTRACT","STANDARD_TRANSACTION","GAS_ESTIMATE_TYPES","ETH_GASPRICE","NONE","normalizeGWEIDecimalNumbers","numberAsWEIHex","numberAsGWEI","fetchEip1159GasEstimates","url","get","estimates","normalizedEstimates","_objectSpread$2","estimatedBaseFee","low","suggestedMaxPriorityFeePerGas","suggestedMaxFeePerGas","medium","high","fetchLegacyGasPriceEstimates","referrer","referrerPolicy","mode","SafeGasPrice","ProposeGasPrice","FastGasPrice","TransactionFormatter","providerProxy","getEIP1559Compatibility","isEIP1559Compatible","name","hardfork","Hardfork","London","Berlin","customChainParams","Number","parseInt","networkId","defaultHardfork","Common","clonedTxParams","nonce","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gas","getDefaultGasLimit","defaultGasLimit","gasLimit","getDefaultGasFees","defaultGasPrice","defaultMaxFeePerGas","defaultMaxPriorityFeePerGas","bnLessThan","type","latestBlock","supportsEIP1559","baseFeePerGas","isLegacyGasAPICompatible","replace","gasData","gasFeeEstimates","gasEstimateType","fetchEthGasPriceEstimate","fetchGasFeeEstimateData","txMeta","_objectSpread","block","blockGasLimitBN","saferGasLimitBN","estimatedGasHex","estimateTxGas","warn","blockGasLimit","addGasBuffer","initialGasLimitHex","blockGasLimitHex","multiplier","initialGasLimitBn","blockGasLimitBn","upperGasLimitBn","bufferedGasLimitBn","gt","txParameters","to","txCategory","codeIsEmpty","transactionCategory","determineTransactionCategory","TWENTY_ONE_THOUSAND","analyzeGasUsage","EthereumPrivateKeyProvider","bind","chainSwitchMiddleware","getChainSwitchMiddleware","getAccountMiddleware","init","existingKey","network","chainDisconnected","chainSwitchHandlers","blockExplorerUrls","ticker","symbol","tickerName","blockExplorer","accountHandlers","createAccountMiddleware"],"sources":["../src/rpc/walletMidddleware.ts","../src/rpc/ethRpcMiddlewares.ts","../src/rpc/jrpcClient.ts","../src/providers/injectedProviders/walletConnectUtils.ts","../src/providers/injectedProviders/WalletConnectProvider.ts","../src/providers/privateKeyProviders/ethPrivatekeyUtils.ts","../src/providers/converter.ts","../src/providers/utils.ts","../src/providers/privateKeyProviders/TransactionFormatter/constants.ts","../src/providers/privateKeyProviders/TransactionFormatter/utils.ts","../src/providers/privateKeyProviders/TransactionFormatter/index.ts","../src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import styled from 'styled-components';\nimport { initialStyles, isLoadingMode, transparent, hoverEffect } from './styles/inititalStyles';\nimport { outlineLarge, outlineRegular, outlineSmall, primary, secondary, translucent } from './styles/standardThemes';\nimport { sizeSmall, sizeRegular, sizeLarge } from './styles/sizeStyles';\nimport { coloredRed, coloredGreen, coloredBlue, coloredYellow } from './styles/coloredThemes';\nimport { iconLeading, iconOnly, iconTrailing, largeIconResize, smallIconResize } from './styles/iconStyles';\n\nconst getThemeStyles = (theme, size) => {\n  switch (theme) {\n    case 'primary':\n      return primary;\n\n    case 'outline':\n      switch (size) {\n        case 'large':\n          return outlineLarge;\n\n        case 'small':\n          return outlineSmall;\n\n        case 'regular':\n        default:\n          return outlineRegular;\n      }\n\n    case 'translucent':\n      return translucent;\n\n    case 'secondary':\n    default:\n      return secondary;\n  }\n};\n\nconst getIconLayoutStyles = iconLayout => {\n  switch (iconLayout) {\n    case 'trailing':\n      return iconTrailing;\n\n    case 'icon-only':\n      return iconOnly;\n\n    default:\n      return iconLeading;\n  }\n};\n\nconst getSizeStyles = size => {\n  switch (size) {\n    case 'large':\n      return sizeLarge;\n\n    case 'small':\n      return sizeSmall;\n\n    default:\n      return sizeRegular;\n  }\n};\n\nconst getColored = color => {\n  switch (color) {\n    case 'red':\n      return coloredRed;\n\n    case 'green':\n      return coloredGreen;\n\n    case 'blue':\n      return coloredBlue;\n\n    case 'yellow':\n      return coloredYellow;\n\n    default:\n      return secondary;\n  }\n};\n\nconst iconOnlyBorderFix = theme => {\n  switch (theme) {\n    case 'colored':\n      return 'border-width: 2px;';\n\n    case 'outline':\n      return 'border-width: 2px;';\n\n    default:\n      return;\n  }\n};\n\nconst getIconColor = color => {\n  return `\n    svg \n        {\n            fill: ${color};\n        }\n    `;\n};\n\nexport const ButtonStyled = styled.button`\n    ${initialStyles}\n\n    ${p => p.isFullWidth && 'width: 100%;'}\n    ${p => p.theme && p.size && getThemeStyles(p.theme, p.size)}\n    ${p => p.color && p.theme === 'colored' && getColored(p.color)}\n    ${p => p.size && getSizeStyles(p.size)}\n    ${p => p.iconLayout && getIconLayoutStyles(p.iconLayout)}\n\n    ${p => p.iconLayout === 'icon-only' && p.size === 'small' && smallIconResize()}\n    ${p => p.iconLayout === 'icon-only' && p.size === 'large' && largeIconResize()}\n    ${p => p.iconLayout === 'icon-only' && iconOnlyBorderFix(p.theme)}\n\n    ${p => p.isLoading && isLoadingMode}\n\n    ${p => p.radius && `border-radius: ${p.radius}px;`}\n\n    ${p => p.iconColor && getIconColor(p.iconColor)}\n\n    ${p => p.isTransparent ? transparent : hoverEffect}\n`;","map":{"version":3,"names":["styled","initialStyles","isLoadingMode","transparent","hoverEffect","outlineLarge","outlineRegular","outlineSmall","primary","secondary","translucent","sizeSmall","sizeRegular","sizeLarge","coloredRed","coloredGreen","coloredBlue","coloredYellow","iconLeading","iconOnly","iconTrailing","largeIconResize","smallIconResize","getThemeStyles","theme","size","getIconLayoutStyles","iconLayout","getSizeStyles","getColored","color","iconOnlyBorderFix","getIconColor","ButtonStyled","button","p","isFullWidth","isLoading","radius","iconColor","isTransparent"],"sources":["/Users/nicksampah/Repository/Three.js/Gigashark-v2/src/components/web3uikit/src/components/Button/Button.styles.ts"],"sourcesContent":["import styled from 'styled-components';\nimport type { ButtonProps } from './types';\nimport {\n    initialStyles,\n    isLoadingMode,\n    transparent,\n    hoverEffect,\n} from './styles/inititalStyles';\nimport {\n    outlineLarge,\n    outlineRegular,\n    outlineSmall,\n    primary,\n    secondary,\n    translucent,\n} from './styles/standardThemes';\nimport { sizeSmall, sizeRegular, sizeLarge } from './styles/sizeStyles';\nimport {\n    coloredRed,\n    coloredGreen,\n    coloredBlue,\n    coloredYellow,\n} from './styles/coloredThemes';\nimport {\n    iconLeading,\n    iconOnly,\n    iconTrailing,\n    largeIconResize,\n    smallIconResize,\n} from './styles/iconStyles';\n\ntype TStyleProps = Pick<\n    ButtonProps,\n    | 'theme'\n    | 'iconLayout'\n    | 'size'\n    | 'color'\n    | 'isFullWidth'\n    | 'isLoading'\n    | 'radius'\n    | 'isTransparent'\n    | 'iconColor'\n>;\n\nconst getThemeStyles = (theme: string, size: string) => {\n    switch (theme) {\n        case 'primary':\n            return primary;\n        case 'outline':\n            switch (size) {\n                case 'large':\n                    return outlineLarge;\n                case 'small':\n                    return outlineSmall;\n                case 'regular':\n                default:\n                    return outlineRegular;\n            }\n        case 'translucent':\n            return translucent;\n        case 'secondary':\n        default:\n            return secondary;\n    }\n};\n\nconst getIconLayoutStyles = (iconLayout: string) => {\n    switch (iconLayout) {\n        case 'trailing':\n            return iconTrailing;\n        case 'icon-only':\n            return iconOnly;\n        default:\n            return iconLeading;\n    }\n};\n\nconst getSizeStyles = (size: string) => {\n    switch (size) {\n        case 'large':\n            return sizeLarge;\n        case 'small':\n            return sizeSmall;\n        default:\n            return sizeRegular;\n    }\n};\n\nconst getColored = (color: string) => {\n    switch (color) {\n        case 'red':\n            return coloredRed;\n        case 'green':\n            return coloredGreen;\n        case 'blue':\n            return coloredBlue;\n        case 'yellow':\n            return coloredYellow;\n        default:\n            return secondary;\n    }\n};\n\nconst iconOnlyBorderFix = (theme: string) => {\n    switch (theme) {\n        case 'colored':\n            return 'border-width: 2px;';\n        case 'outline':\n            return 'border-width: 2px;';\n        default:\n            return;\n    }\n};\n\nconst getIconColor = (color: string) => {\n    return `\n    svg \n        {\n            fill: ${color};\n        }\n    `;\n};\n\nexport const ButtonStyled = styled.button<TStyleProps>`\n    ${initialStyles}\n\n    ${(p) => p.isFullWidth && 'width: 100%;'}\n    ${(p) => p.theme && p.size && getThemeStyles(p.theme, p.size)}\n    ${(p) => p.color && p.theme === 'colored' && getColored(p.color)}\n    ${(p) => p.size && getSizeStyles(p.size)}\n    ${(p) => p.iconLayout && getIconLayoutStyles(p.iconLayout)}\n\n    ${(p) =>\n        p.iconLayout === 'icon-only' && p.size === 'small' && smallIconResize()}\n    ${(p) =>\n        p.iconLayout === 'icon-only' && p.size === 'large' && largeIconResize()}\n    ${(p) => p.iconLayout === 'icon-only' && iconOnlyBorderFix(p.theme)}\n\n    ${(p) => p.isLoading && isLoadingMode}\n\n    ${(p) => p.radius && `border-radius: ${p.radius}px;`}\n\n    ${(p) => p.iconColor && getIconColor(p.iconColor)}\n\n    ${(p) => (p.isTransparent ? transparent : hoverEffect)}\n`;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}